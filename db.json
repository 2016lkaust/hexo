{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/img/项目结构.png","path":"img/项目结构.png","modified":0,"renderable":0},{"_id":"source/uploads/head.jpg","path":"uploads/head.jpg","modified":0,"renderable":0},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/avatar.png","path":"css/images/avatar.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/head.jpg","path":"css/images/head.jpg","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/logo.png","path":"css/images/logo.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/justified-gallery/jquery.justifiedGallery.min.js","path":"libs/justified-gallery/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/justified-gallery/justifiedGallery.min.css","path":"libs/justified-gallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/styles.css","path":"libs/open-sans/styles.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/styles.css","path":"libs/source-code-pro/styles.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/images/thumb-default-small.png","path":"css/images/thumb-default-small.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.css","path":"libs/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.min.css","path":"libs/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css","path":"libs/lightgallery/css/lg-fb-comment-box.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css.map","path":"libs/lightgallery/css/lg-fb-comment-box.css.map","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.min.css","path":"libs/lightgallery/css/lg-fb-comment-box.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css","path":"libs/lightgallery/css/lg-transitions.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css.map","path":"libs/lightgallery/css/lg-transitions.css.map","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.min.css","path":"libs/lightgallery/css/lg-transitions.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css","path":"libs/lightgallery/css/lightgallery.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css.map","path":"libs/lightgallery/css/lightgallery.css.map","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.min.css","path":"libs/lightgallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.eot","path":"libs/lightgallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.svg","path":"libs/lightgallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.ttf","path":"libs/lightgallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.woff","path":"libs/lightgallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/loading.gif","path":"libs/lightgallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/video-play.png","path":"libs/lightgallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/vimeo-play.png","path":"libs/lightgallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/youtube-play.png","path":"libs/lightgallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.js","path":"libs/lightgallery/js/lg-autoplay.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.min.js","path":"libs/lightgallery/js/lg-autoplay.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.js","path":"libs/lightgallery/js/lg-fullscreen.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.min.js","path":"libs/lightgallery/js/lg-fullscreen.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.js","path":"libs/lightgallery/js/lg-hash.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.min.js","path":"libs/lightgallery/js/lg-hash.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.js","path":"libs/lightgallery/js/lg-pager.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.min.js","path":"libs/lightgallery/js/lg-pager.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.js","path":"libs/lightgallery/js/lg-share.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.min.js","path":"libs/lightgallery/js/lg-share.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.js","path":"libs/lightgallery/js/lg-thumbnail.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.min.js","path":"libs/lightgallery/js/lg-thumbnail.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.js","path":"libs/lightgallery/js/lg-video.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.min.js","path":"libs/lightgallery/js/lg-video.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.js","path":"libs/lightgallery/js/lg-zoom.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.min.js","path":"libs/lightgallery/js/lg-zoom.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.js","path":"libs/lightgallery/js/lightgallery.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.min.js","path":"libs/lightgallery/js/lightgallery.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","path":"libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/FontAwesome.otf","path":"libs/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.eot","path":"libs/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff","path":"libs/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","path":"libs/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/jquery/2.1.3/jquery.min.js","path":"libs/jquery/2.1.3/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","path":"libs/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.svg","path":"libs/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"31ab5b79ee2238d39e78be9b762081b91e2acee9","modified":1492773050076},{"_id":"source/look.html","hash":"07ecb1a50b6b5c964cce89951f0cf66f9506d4da","modified":1492773184870},{"_id":"themes/icarus/.gitignore","hash":"542aaea07afe90211c6a45c90b7d6879a4503043","modified":1492010065000},{"_id":"themes/icarus/LICENSE","hash":"df00918fa95de563927fd92b26f14c7affdc3052","modified":1492010065000},{"_id":"themes/icarus/README.md","hash":"25c75503f044b817297995a96621c92ce037a098","modified":1492010065000},{"_id":"themes/icarus/_config.yml","hash":"637c2bd734028f56362dbbc20c93f279ba308853","modified":1492827297532},{"_id":"themes/icarus/package.json","hash":"1bc52ef10a33df23e56bd73c927f605019c87d41","modified":1492010065000},{"_id":"source/_posts/CentOs服务器常用命令.md","hash":"e0696d681af0d99b45c0f3066d1ab5ea3d59d032","modified":1492824132886},{"_id":"source/_posts/jsp传参方法小结.md","hash":"a1b6d4af58f010f4f900b09a52c4b0f4ff0f69cf","modified":1492824213379},{"_id":"source/_posts/jsp动态创建mysql数据表.md","hash":"6b32f615ce68fcb8a39222e9233366e5a90f228a","modified":1492824279922},{"_id":"source/_posts/jsp页面下载文件.md","hash":"d2f71d2a27399b7bdd2adb59cdb7b98399aaafd2","modified":1492824316454},{"_id":"source/_posts/ubuntu下php环境搭建.md","hash":"8c2c432275c39f71dbb4156b92110ce3602f6af9","modified":1492824456160},{"_id":"source/_posts/ubuntu下编程环境的搭建.md","hash":"c0557aa981a7c04118287a92c582d918e7ade6ae","modified":1492824507897},{"_id":"source/_posts/ubuntu安装及初始化.md","hash":"3edf6815996b35032c0708c1758b2dba17b7d0d7","modified":1492824032743},{"_id":"source/_posts/ubuntu常用命令及部分快捷键.md","hash":"802402e0cbb2592f68af94e555892d71ea267404","modified":1492824399759},{"_id":"source/_posts/反射机制--高淇Java视频笔记.md","hash":"a399d67845743eca86f3eb613068952071b92ab1","modified":1492923299746},{"_id":"source/_posts/反射机制动态生成sql语句.md","hash":"8a05aea645f93a08359641fc7203b3097f690167","modified":1492824573967},{"_id":"source/_posts/系统安装之路一准备篇.md","hash":"f4401f41cb1f3485e8925ed103b3119ddf97eab1","modified":1492824791491},{"_id":"source/_posts/系统安装之路三电脑无法启动.md","hash":"26004c98f7547508996b6a587685cce18e204da0","modified":1492825124310},{"_id":"source/_posts/系统安装之路二电脑能启动.md","hash":"3a00b72ac6a30ba4401cfd0183daa4abc53d9b3e","modified":1492825136494},{"_id":"source/_posts/解决表单post传递乱码.md","hash":"91a94b8ebd5289f9ad2b23433b66e25ea90b4609","modified":1492824662193},{"_id":"source/about/index.md","hash":"89f94675214e08df0fd141c6e22e8bd7e16e71f5","modified":1492824882520},{"_id":"source/categories/index.md","hash":"13f3d932ad7c8e68ce9c5fe489de1e2398d031f9","modified":1492785232050},{"_id":"source/img/项目结构.png","hash":"525ac00f75438785649a658d9697c69ba797169d","modified":1492922889437},{"_id":"source/tags/index.md","hash":"b5cea9db4620416c871ea1b14b7eddf23b330779","modified":1492785216636},{"_id":"source/uploads/head.jpg","hash":"40b940c7fb5249ee16a4cda57469cf4ea5f43c60","modified":1492687556710},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE.md","hash":"9393fd3dbc943f1544facb66af7fd8b7a5b9ddbb","modified":1492010065000},{"_id":"themes/icarus/languages/en.yml","hash":"ade241498b85503a8953a1deca963222f47067a7","modified":1492010065000},{"_id":"themes/icarus/languages/es.yml","hash":"d7432219be5bee4cb569331378ade61b749688e0","modified":1492010065000},{"_id":"themes/icarus/languages/fr.yml","hash":"cb3e597cbec7e8f458858c457bafd1f3a225083d","modified":1492010065000},{"_id":"themes/icarus/languages/id.yml","hash":"70ec9ab2ac04cf882e81377ca5ad15bf8adceca8","modified":1492010065000},{"_id":"themes/icarus/languages/ja.yml","hash":"ff972961e5f468a695d80d21b62c3e9032cdf561","modified":1492010065000},{"_id":"themes/icarus/languages/ko.yml","hash":"7c4ad4577dc0577ad2ca1c0410507f5e5fadf530","modified":1492010065000},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"3c5d5293575593705b9a2dfa9d97b017eb4bc8c3","modified":1492010065000},{"_id":"themes/icarus/languages/ru.yml","hash":"d1aab2b0c939d0c6020f881d664b660a01ee7327","modified":1492010065000},{"_id":"themes/icarus/languages/tr.yml","hash":"8b7eb6aec264db50dbabea89f680acca256f4cd1","modified":1492010065000},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"3dc8ec524805afd090438be717908750da439204","modified":1492010065000},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"d8d96a0a17c20af11919ce036e87379a6b163db9","modified":1492010065000},{"_id":"themes/icarus/layout/archive.ejs","hash":"c1ecf667f40f34d61ab33eed46bab143eb1af36d","modified":1492010065000},{"_id":"themes/icarus/layout/categories.ejs","hash":"aa95629b770cff8cca9d663aeb6b17928f070de5","modified":1492010065000},{"_id":"themes/icarus/layout/category.ejs","hash":"1d407f9176db84e83062c52ad4755aaea9e74401","modified":1492010065000},{"_id":"themes/icarus/layout/index.ejs","hash":"43e971ebc35657b18e08a049559790348a16666f","modified":1492010065000},{"_id":"themes/icarus/layout/layout.ejs","hash":"6f01b3d46d184a820297f9542497808b152bb09e","modified":1492010065000},{"_id":"themes/icarus/layout/page.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1492010065000},{"_id":"themes/icarus/layout/post.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1492010065000},{"_id":"themes/icarus/layout/tag.ejs","hash":"f6c220d4e5c231028bc71ddc11aec97d7b5a9943","modified":1492010065000},{"_id":"themes/icarus/layout/tags.ejs","hash":"b0fcea68d7c11e5899bf0375d80997685111653f","modified":1492010065000},{"_id":"themes/icarus/scripts/meta.js","hash":"1993754a2f3dffa283fa0538eb8f056385b69ad4","modified":1492010065000},{"_id":"themes/icarus/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1492010065000},{"_id":"themes/icarus/_source/about/index.md","hash":"2847759c65295fdc47685cc32e10ae30b2f022ae","modified":1492010065000},{"_id":"themes/icarus/_source/categories/index.md","hash":"55bee2cb88da438a2e8b1f29b1d7e954c07a9e60","modified":1492010065000},{"_id":"themes/icarus/_source/tags/index.md","hash":"e999413d6392c34156b5c6e9273f9069f9e6d92d","modified":1492010065000},{"_id":"themes/icarus/layout/comment/changyan.ejs","hash":"b4bd2e641af59e06becaa8f2dc97867f023b8dcf","modified":1492010065000},{"_id":"themes/icarus/layout/comment/counter.ejs","hash":"466e01abb13d0a2b9ed281b2362740baa32afaff","modified":1492010065000},{"_id":"themes/icarus/layout/comment/disqus.ejs","hash":"1b32a90f400dc580f4b8298de75b94429ca6de68","modified":1492010065000},{"_id":"themes/icarus/layout/comment/duoshuo.ejs","hash":"ce46d7410a99b57704da32e9d09071cef6c9fa93","modified":1492010065000},{"_id":"themes/icarus/layout/comment/facebook.ejs","hash":"5ee16430a4435c2fead0275ff83fc98092d73d4c","modified":1492010065000},{"_id":"themes/icarus/layout/comment/index.ejs","hash":"170e722e640593a46c38da2331b6afccfb69c449","modified":1492010065000},{"_id":"themes/icarus/layout/comment/isso.ejs","hash":"4f8b81ff5bb418ec11ce080d515f247bfe436014","modified":1492010065000},{"_id":"themes/icarus/layout/comment/scripts.ejs","hash":"30aa478e771ad6e6d1dba1060deb5c44ef34546c","modified":1492010065000},{"_id":"themes/icarus/layout/comment/youyan.ejs","hash":"6fe807992832939caf6c3e7651d052df9520d88e","modified":1492010065000},{"_id":"themes/icarus/layout/common/article.ejs","hash":"9c260a551596f71e93177f2289b5cb1c4bc7d96c","modified":1492010065000},{"_id":"themes/icarus/layout/common/footer.ejs","hash":"cbfe560fcab445d42ceeb5d1beba5957d5be5eaa","modified":1492010065000},{"_id":"themes/icarus/layout/common/head.ejs","hash":"44f30945882afd27c89da2173da501fb1b531488","modified":1492010065000},{"_id":"themes/icarus/layout/common/header.ejs","hash":"738c6a923b2a6de6a81c4892c8a47e03d8b34f88","modified":1492010065000},{"_id":"themes/icarus/layout/common/profile.ejs","hash":"0d5a9622d490652599e3ba3e4077a7d6bb2eb38e","modified":1492010065000},{"_id":"themes/icarus/layout/common/scripts.ejs","hash":"c0a1a9e53f89440c42c325d5bd8c7234652c8937","modified":1492010065000},{"_id":"themes/icarus/layout/common/sidebar.ejs","hash":"6e80fa52d23c9c39bfa357a1e00c26fc8b851b82","modified":1492010065000},{"_id":"themes/icarus/layout/common/thumbnail.ejs","hash":"1b70f8a98cd8650b159bda858dbee38dbdb7f0c5","modified":1492010065000},{"_id":"themes/icarus/layout/common/timeline.ejs","hash":"6420e34e0332c9b6670011519f341340db989343","modified":1492010065000},{"_id":"themes/icarus/layout/plugin/baidu-analytics.ejs","hash":"6a7bee18e666e627e62541a5e30906f87ba1bfe8","modified":1492010065000},{"_id":"themes/icarus/layout/plugin/google-analytics.ejs","hash":"349f08b6521a16e79046b1f94f04317ac74f556e","modified":1492010065000},{"_id":"themes/icarus/layout/plugin/scripts.ejs","hash":"b349c7089a44302eaa8291c0ed13ef815f868a68","modified":1492010065000},{"_id":"themes/icarus/layout/search/baidu.ejs","hash":"3e603a702d20c53fd3bcbeb570a16a86d54781ce","modified":1492010065000},{"_id":"themes/icarus/layout/search/index-mobile.ejs","hash":"50a727ac1dfe3073eb6fa6699ba01e66f4ac41c0","modified":1492010065000},{"_id":"themes/icarus/layout/search/index.ejs","hash":"24935e32e61d4706454b174ea3bed0726ae7fb34","modified":1492010065000},{"_id":"themes/icarus/layout/search/insight.ejs","hash":"130fe3d33ac71da0b50f7fee6a87979f30938a1b","modified":1492010065000},{"_id":"themes/icarus/layout/search/swiftype.ejs","hash":"379e66d2c13526e72e4120c443f95fccf4edef71","modified":1492010065000},{"_id":"themes/icarus/layout/share/addtoany.ejs","hash":"ac180c4c84b73a04d61b17e7dc18c257e20bf59f","modified":1492010065000},{"_id":"themes/icarus/layout/share/bdshare.ejs","hash":"a1e772c5a6f174d585b0c1e574058f75dc8e2898","modified":1492010065000},{"_id":"themes/icarus/layout/share/default.ejs","hash":"ebfb919dc525b3ed61a6a5ee05ee71410eedc541","modified":1492010065000},{"_id":"themes/icarus/layout/share/index.ejs","hash":"2a2c0095b95b11e5692bd8ad6a2337aa644189a2","modified":1492010065000},{"_id":"themes/icarus/layout/share/jiathis.ejs","hash":"21ebaa51e828cba2cefbeeaccb01514643565755","modified":1492010065000},{"_id":"themes/icarus/layout/widget/archive.ejs","hash":"d9ebbb7f6ce2f25df5ae25e4a1fef3c08f7054b9","modified":1492010065000},{"_id":"themes/icarus/layout/widget/category.ejs","hash":"583bda80cf15b3ef11fefbd1b502897dfff40100","modified":1492010065000},{"_id":"themes/icarus/layout/widget/links.ejs","hash":"aad118699718b62c0d3f3cfd6f17a181139a76af","modified":1492010065000},{"_id":"themes/icarus/layout/widget/recent_posts.ejs","hash":"2ca923465275fb38a7ac7d67211d6e94a977e957","modified":1492010065000},{"_id":"themes/icarus/layout/widget/tag.ejs","hash":"3b8ae5953990436893da9d68f910ebe592005659","modified":1492010065000},{"_id":"themes/icarus/layout/widget/tagcloud.ejs","hash":"ca8c7bf555fb6ce4904f2c59160548405c2c8a82","modified":1492010065000},{"_id":"themes/icarus/source/css/_extend.styl","hash":"539e02107f35e8b3bdb9bf160dc212a433a7b60e","modified":1492010065000},{"_id":"themes/icarus/source/css/_variables.styl","hash":"d62af931be6612ec8c3a917836379a8cd92fbce1","modified":1492010065000},{"_id":"themes/icarus/source/css/style.styl","hash":"1716b199dba80b26086f325d69c36fa682465106","modified":1492010065000},{"_id":"themes/icarus/source/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1492010065000},{"_id":"themes/icarus/source/js/main.js","hash":"93dc932946e2898bf4f39c42af1b27295e886af1","modified":1492010065000},{"_id":"themes/icarus/layout/common/post/banner.ejs","hash":"47ced3f03525698c79c6b1c07b48383fb6c496b2","modified":1492010065000},{"_id":"themes/icarus/layout/common/post/category.ejs","hash":"75c9dda2e7ec041943855ca163a6b1c4c8b4f260","modified":1492010065000},{"_id":"themes/icarus/layout/common/post/date.ejs","hash":"45cb0bcad461036cdd1fe2e3fbb5f2f19940025c","modified":1492010065000},{"_id":"themes/icarus/layout/common/post/gallery.ejs","hash":"659f019761116313169148ec61773e7b84abb739","modified":1492010065000},{"_id":"themes/icarus/layout/common/post/nav.ejs","hash":"d7cd611e642327f33dff3963ef869c2b46824a11","modified":1492010065000},{"_id":"themes/icarus/layout/common/post/tag.ejs","hash":"2e966216256321aa0c76fe1b9be689601c76ef31","modified":1492010065000},{"_id":"themes/icarus/layout/common/post/title.ejs","hash":"669ddb46fefa100856588351a7a2d30ad996b755","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/arta.styl","hash":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/monokai.styl","hash":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1492010065000},{"_id":"themes/icarus/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1492010065000},{"_id":"themes/icarus/source/css/_partial/archive.styl","hash":"d35088c83ddd7a197d6d94e16a2ce3a7e29fa1dc","modified":1492010065000},{"_id":"themes/icarus/source/css/_partial/article.styl","hash":"512b9252e1799b93a17c4ad847b0586814a030b4","modified":1492010065000},{"_id":"themes/icarus/source/css/_partial/comment.styl","hash":"784646796184d4f27918c22395288a2fafbf9554","modified":1492010065000},{"_id":"themes/icarus/source/css/_partial/footer.styl","hash":"484776654e4c1691dc844e6e93786a08855c1c99","modified":1492010065000},{"_id":"themes/icarus/source/css/_partial/header.styl","hash":"1e351f741144135871a3373fe7e969dc961b65e7","modified":1492010065000},{"_id":"themes/icarus/source/css/_partial/insight.styl","hash":"19833cd127f26ad90b06c115f8a96a30e0c0e53b","modified":1492010065000},{"_id":"themes/icarus/source/css/_partial/profile.styl","hash":"fb0170075dc2a41e01dd11bbfdbccbed544c479a","modified":1492010065000},{"_id":"themes/icarus/source/css/_partial/sidebar.styl","hash":"f528ca7064d9fcecd737b9b71c9c54601365d7d3","modified":1492010065000},{"_id":"themes/icarus/source/css/_partial/timeline.styl","hash":"c813b98f4fc45b64d2e07e5d944745a654c8c943","modified":1492010065000},{"_id":"themes/icarus/source/css/_util/grid.styl","hash":"93fb6f1e2f40cd7d88ad0d56dd73d3f9a7bc853e","modified":1492010065000},{"_id":"themes/icarus/source/css/_util/mixin.styl","hash":"c8e1ddfc0fe9108bab592c7a73b73ce9344991fd","modified":1492010065000},{"_id":"themes/icarus/source/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1492010065000},{"_id":"themes/icarus/source/css/images/head.jpg","hash":"40b940c7fb5249ee16a4cda57469cf4ea5f43c60","modified":1492687556710},{"_id":"themes/icarus/source/css/images/logo.png","hash":"e606a0584f98268b2fe92303f3254520862ef659","modified":1492010065000},{"_id":"themes/icarus/source/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1492010065000},{"_id":"themes/icarus/source/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1492010065000},{"_id":"themes/icarus/source/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1492010065000},{"_id":"themes/icarus/source/css/images/thumb-default-small.png","hash":"6f48ca04773f86a8981c74ecbd1b6f908aecb9a6","modified":1492775655462},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.css","hash":"b5020c3860669185ba3f316fa7332cdf5c06f393","modified":1492010065000},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.min.css","hash":"7cd5a3384333f95c3d37d9488ad82cd6c4b03761","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1492010065000},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1492010065000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1492010065000},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1492010065000},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1492010065000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1492010065000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1492010065000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1492010065000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1492010065000},{"_id":"themes/icarus/source/libs/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1492010065000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1492010065000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1492010065000},{"_id":"public/look.html","hash":"33573590c1892349500fd1410e412631d5f5984b","modified":1492923313120},{"_id":"public/about/index.html","hash":"cd415dd9d6ef575136a21fee569a11e5fd60dd79","modified":1492923313121},{"_id":"public/categories/index.html","hash":"53bc65bb966cb37d53da3cb0e77ea0124081c7db","modified":1492923313121},{"_id":"public/tags/index.html","hash":"de5ed19dd35700cbade65c6d547223a67eaf10d3","modified":1492923313121},{"_id":"public/2016/10/08/jsp传参方法小结/index.html","hash":"17b2b44d8a6ac4cb78ecf12bd04450d9f1e797f7","modified":1492923313121},{"_id":"public/2016/10/25/jsp页面下载文件/index.html","hash":"3673b2a3f5bf888c8c33df14e3de67aa5cd1c00e","modified":1492923313121},{"_id":"public/2016/10/31/ubuntu下编程环境的搭建/index.html","hash":"85ba50a88aaea162dd37572c2d58db9063aae472","modified":1492923313122},{"_id":"public/2016/12/11/ubuntu常用命令及部分快捷键/index.html","hash":"ce0b56cdae0fa60755b4fffc7d62008645ff3766","modified":1492923313122},{"_id":"public/2016/12/11/ubuntu安装及初始化/index.html","hash":"8e00fe6c8b991a2db130467e40745ae42b6126f5","modified":1492923313122},{"_id":"public/2016/12/14/ubuntu下php环境搭建/index.html","hash":"06b0e55f62fe174445ed5a2e9e5c87649087b8e2","modified":1492923313122},{"_id":"public/2017/01/02/系统安装之路一准备篇/index.html","hash":"45baf4b04fbf1e3cafe282e151d2785e1b14260a","modified":1492923313122},{"_id":"public/2017/01/02/系统安装之路二电脑能启动/index.html","hash":"c083ef4dfb6d2763be2b6760f4e9e59a8f94dbce","modified":1492923313122},{"_id":"public/2017/01/03/系统安装之路三电脑无法启动/index.html","hash":"9d19cc846bb1935fcc511680d68c9726f04bee38","modified":1492923313122},{"_id":"public/2017/02/11/解决表单post传递乱码/index.html","hash":"d0f7b004520371bce3a3f8388e3bae0977cd4f81","modified":1492923313122},{"_id":"public/2017/02/11/jsp动态创建mysql数据表/index.html","hash":"ff51c911d10cd5a2bbf1e6a84489c42e38d2d812","modified":1492923313122},{"_id":"public/2017/02/15/反射机制--高淇Java视频笔记/index.html","hash":"d4395d5df5575e9919d4cdc9517d58c32c276a17","modified":1492923313123},{"_id":"public/2017/02/17/反射机制动态生成sql语句/index.html","hash":"fb639f8828d714c1370c8740328d3488bf607870","modified":1492923313123},{"_id":"public/2017/04/14/CentOs服务器常用命令/index.html","hash":"9da3441fa37c9b469db62e3113cbbf8b828d39b6","modified":1492923313123},{"_id":"public/archives/index.html","hash":"c0baa58d4363aa5eaab14fdc83bf1a6618cf4156","modified":1492923313123},{"_id":"public/archives/page/2/index.html","hash":"efe40334d917e1d825ba982388a609055c750a2d","modified":1492923313123},{"_id":"public/archives/2016/index.html","hash":"e6c2c66bb21d29d47ea2160ab1bea0050bb2a7a0","modified":1492923313123},{"_id":"public/archives/2016/10/index.html","hash":"6c50e3be737494dfedf9b3bc83c4f085591c0eda","modified":1492923313123},{"_id":"public/archives/2016/12/index.html","hash":"90be352f22bb605a4169a8067c83e9e1c7f9cb50","modified":1492923313123},{"_id":"public/archives/2017/index.html","hash":"a1340415eab4980e29b0d11be8cf927ebdcb2159","modified":1492923313123},{"_id":"public/archives/2017/01/index.html","hash":"0fe852b33619dedd97cf6175cf4340398a4f5938","modified":1492923313124},{"_id":"public/archives/2017/02/index.html","hash":"6d85a9dad8b0446b7a5c6cfd60bb40f6d8e13320","modified":1492923313124},{"_id":"public/archives/2017/04/index.html","hash":"f06ccc87ffa1ee657a94746527ca189104e6c28d","modified":1492923313124},{"_id":"public/categories/Linux/index.html","hash":"dff32cba7faad99afd5df7df4d1e0c695bd1e02e","modified":1492923313124},{"_id":"public/categories/Java/index.html","hash":"a97f4a95c2550a0dcba38f18dc1c6cc8b90ef4e6","modified":1492923313130},{"_id":"public/categories/JavaEE/index.html","hash":"3d2040e4b9c5ba511c36b31cce9cce2aa93043de","modified":1492923313131},{"_id":"public/categories/other/index.html","hash":"617f68b0078e87788c04a31100e7ea4e2c734a5d","modified":1492923313131},{"_id":"public/index.html","hash":"cf77d6cd9b71d46798f1b4f41d37c53df965f824","modified":1492923313131},{"_id":"public/page/2/index.html","hash":"9ae4ffefbeb0ab6be274860e2348d6208e680783","modified":1492923313131},{"_id":"public/tags/note/index.html","hash":"f1e9a55eb55d2292469ec5677317125d75cecc90","modified":1492923313131},{"_id":"public/tags/Centos/index.html","hash":"c90fa205654efed05794a068321be774fba4e95c","modified":1492923313131},{"_id":"public/tags/jsp/index.html","hash":"40112f2d405ad0c1c9fb3a1505889e88750650d4","modified":1492923313131},{"_id":"public/tags/mysql/index.html","hash":"f2dea573e84a5e6581a990144951f1d595839e22","modified":1492923313131},{"_id":"public/tags/code/index.html","hash":"e3d24a60f0acd7a1616d16041528abb0b7b91cc0","modified":1492923313131},{"_id":"public/tags/ubuntu/index.html","hash":"f867750c8f436a994be890b109556edb8ee053b7","modified":1492923313131},{"_id":"public/tags/java/index.html","hash":"5d1d1664f2373aa108f6f8d53d57b265f1b8d6ba","modified":1492923313132},{"_id":"public/tags/hardware/index.html","hash":"1422cf73e230fd70d9ccaa9dda6b92b6ea5bbd86","modified":1492923313132},{"_id":"public/CNAME","hash":"31ab5b79ee2238d39e78be9b762081b91e2acee9","modified":1492923313158},{"_id":"public/uploads/head.jpg","hash":"40b940c7fb5249ee16a4cda57469cf4ea5f43c60","modified":1492923313158},{"_id":"public/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1492923313158},{"_id":"public/css/images/head.jpg","hash":"40b940c7fb5249ee16a4cda57469cf4ea5f43c60","modified":1492923313158},{"_id":"public/css/images/logo.png","hash":"e606a0584f98268b2fe92303f3254520862ef659","modified":1492923313158},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1492923313158},{"_id":"public/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1492923313158},{"_id":"public/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1492923313159},{"_id":"public/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1492923313159},{"_id":"public/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1492923313159},{"_id":"public/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1492923313159},{"_id":"public/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1492923313159},{"_id":"public/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1492923313159},{"_id":"public/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1492923313159},{"_id":"public/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1492923313166},{"_id":"public/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1492923313167},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1492923313168},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1492923313168},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1492923313168},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1492923313169},{"_id":"public/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1492923313169},{"_id":"public/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1492923313169},{"_id":"public/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1492923313169},{"_id":"public/img/项目结构.png","hash":"525ac00f75438785649a658d9697c69ba797169d","modified":1492923314643},{"_id":"public/css/images/thumb-default-small.png","hash":"6f48ca04773f86a8981c74ecbd1b6f908aecb9a6","modified":1492923314644},{"_id":"public/libs/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1492923314652},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1492923314653},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1492923314653},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1492923314653},{"_id":"public/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1492923314678},{"_id":"public/js/main.js","hash":"93dc932946e2898bf4f39c42af1b27295e886af1","modified":1492923314678},{"_id":"public/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1492923314678},{"_id":"public/libs/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1492923314678},{"_id":"public/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1492923314678},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1492923314678},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1492923314678},{"_id":"public/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1492923314679},{"_id":"public/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1492923314679},{"_id":"public/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1492923314679},{"_id":"public/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1492923314679},{"_id":"public/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1492923314679},{"_id":"public/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1492923314679},{"_id":"public/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1492923314679},{"_id":"public/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1492923314679},{"_id":"public/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1492923314679},{"_id":"public/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1492923314679},{"_id":"public/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1492923314679},{"_id":"public/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1492923314679},{"_id":"public/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1492923314679},{"_id":"public/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1492923314679},{"_id":"public/css/style.css","hash":"326c51002871c409ba0d6853d6da6d23102acc49","modified":1492923314679},{"_id":"public/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1492923314679},{"_id":"public/libs/font-awesome/css/font-awesome.css","hash":"b5020c3860669185ba3f316fa7332cdf5c06f393","modified":1492923314679},{"_id":"public/libs/font-awesome/css/font-awesome.min.css","hash":"7cd5a3384333f95c3d37d9488ad82cd6c4b03761","modified":1492923314680},{"_id":"public/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1492923314680},{"_id":"public/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1492923314680},{"_id":"public/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1492923314680},{"_id":"public/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1492923314680},{"_id":"public/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1492923314680},{"_id":"public/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1492923314680},{"_id":"public/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1492923314680},{"_id":"public/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1492923314680},{"_id":"public/libs/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1492923314680},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1492923314684},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1492923314712}],"Category":[{"name":"Linux","_id":"cj1u7zpnx000599pv5kzl3a4d"},{"name":"Java","_id":"cj1u7zpoo000b99pvztbu2wzt"},{"name":"JavaEE","_id":"cj1u7zppb000g99pvityowlzl"},{"name":"other","_id":"cj1u7zpqt000y99pve5chxdpt"},{"name":"Framework","_id":"cj1u825w30001a5pvz1gaiacb"}],"Data":[],"Page":[{"_content":"<script language=\"javascript\" type=\"text/javascript\"> \nwindow.location.href=\"http://www.jianshu.com/u/f86b4bb07167\"; \n</script> ","source":"look.html","raw":"<script language=\"javascript\" type=\"text/javascript\"> \nwindow.location.href=\"http://www.jianshu.com/u/f86b4bb07167\"; \n</script> ","date":"2017-04-21T14:25:31.145Z","updated":"2017-04-21T11:13:04.870Z","path":"look.html","title":"","comments":1,"layout":"page","_id":"cj1u7zpkr000099pv0tyxz91e","content":"<script language=\"javascript\" type=\"text/javascript\"> \nwindow.location.href=\"http://www.jianshu.com/u/f86b4bb07167\"; \n</script> ","site":{"data":{}},"excerpt":"","more":"<script language=\"javascript\" type=\"text/javascript\"> \nwindow.location.href=\"http://www.jianshu.com/u/f86b4bb07167\"; \n</script> "},{"title":"关于","layout":"page","_content":"## 人是一株会思考的稻草\n\ngithub pages，多次尝试，多次失败，也有多次成功。\n成功之后也被我多次又折腾坏了，既然选择了它，肯定不能怕折腾。现在暂时告一段落，开始着手写东西。\n也许并不会有多少人能看到我的博客，那也无妨，就当是云笔记吧，还能练习写作和归纳能力。\n\n\n","source":"about/index.md","raw":"title: \"关于\"\nlayout: \"page\"\n---\n## 人是一株会思考的稻草\n\ngithub pages，多次尝试，多次失败，也有多次成功。\n成功之后也被我多次又折腾坏了，既然选择了它，肯定不能怕折腾。现在暂时告一段落，开始着手写东西。\n也许并不会有多少人能看到我的博客，那也无妨，就当是云笔记吧，还能练习写作和归纳能力。\n\n\n","date":"2017-04-22T01:34:42.525Z","updated":"2017-04-22T01:34:42.520Z","path":"about/index.html","comments":1,"_id":"cj1u7zpnd000299pv73rna6b6","content":"<h2 id=\"人是一株会思考的稻草\"><a href=\"#人是一株会思考的稻草\" class=\"headerlink\" title=\"人是一株会思考的稻草\"></a>人是一株会思考的稻草</h2><p>github pages，多次尝试，多次失败，也有多次成功。<br>成功之后也被我多次又折腾坏了，既然选择了它，肯定不能怕折腾。现在暂时告一段落，开始着手写东西。<br>也许并不会有多少人能看到我的博客，那也无妨，就当是云笔记吧，还能练习写作和归纳能力。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"人是一株会思考的稻草\"><a href=\"#人是一株会思考的稻草\" class=\"headerlink\" title=\"人是一株会思考的稻草\"></a>人是一株会思考的稻草</h2><p>github pages，多次尝试，多次失败，也有多次成功。<br>成功之后也被我多次又折腾坏了，既然选择了它，肯定不能怕折腾。现在暂时告一段落，开始着手写东西。<br>也许并不会有多少人能看到我的博客，那也无妨，就当是云笔记吧，还能练习写作和归纳能力。</p>\n"},{"title":"分类","layout":"categories","_content":"","source":"categories/index.md","raw":"title: \"分类\"\nlayout: \"categories\"\n---\n","date":"2017-04-21T14:33:52.053Z","updated":"2017-04-21T14:33:52.050Z","path":"categories/index.html","comments":1,"_id":"cj1u7zpnl000499pvuvt4bgio","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","layout":"tags","_content":"","source":"tags/index.md","raw":"title: \"标签\"\nlayout: \"tags\"\n---\n","date":"2017-04-21T14:33:36.640Z","updated":"2017-04-21T14:33:36.636Z","path":"tags/index.html","comments":1,"_id":"cj1u7zpo8000899pvz2v1x54o","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Centos服务器常用命令","date":"2017-04-14T07:23:00.000Z","_content":"\n\n首先要进入root用户\n> su\n\n<!-- more -->\n\n# ps\n查看某端口是否被占用(如查看8088）\n> ps -ef|grep 8088\n\n显示java相关程序\n> ps aux|grep java\n\n# kill\n\nkill命令用于关闭指定进程。\n\n格式：\n\nkill 参数 信号 进程ID\n\n参数：\n\n-s 指定发送信号\n\n-l 根据信号名显示信号编号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称\n\n-a 当处理当前进程时，不限制命令名和进程号的对应关系\n\n-p 指定kill 命令只打印相关进程的进程号，而不发送任何信号\n\n-u 指定用户\n信号：\n\n信号名 信号编号 信号含义\n\nHUP 1 终端断线\n\nINT 2 中断\n\nQUIT 3 退出\n\nTERM 15 终止\n\nKILL 9 强制终止\n\nCONT 18 继续（与STOP相反）\n\nSTOP 19 暂停（\n\n示例：\n\n显示信号KILL的信号编号\n\nkill -l KILL\n\n关闭apache用户下所有进程\n\nkill -u apache.apache\n\n强制关闭进程ID为1937的进程，参数s可以省略。\n\nkill -s 9 1937\n\nkill -9 1937\n# 查看端口是否被占用 \n[参考文章](http://www.cnblogs.com/ggjucheng/archive/2012/01/08/2316661.html)\n### 1.显示所有端口和所有对应的程序\n> netstat -tunlp\n\n### 2.用grep管道可以过滤出想要的关键字段。\n> netstat -tunlp |grep 5432\n\n*参数*\n```xml\n-a (all)显示所有选项，默认不显示LISTEN相关\n-t (tcp)仅显示tcp相关选项\n-u (udp)仅显示udp相关选项\n-n 拒绝显示别名，能显示数字的全部转化成数字。\n-l 仅列出有在 Listen (监听) 的服務状态\n\n-p 显示建立相关链接的程序名\n-r 显示路由信息，路由表\n-e 显示扩展信息，例如uid等\n-s 按各个协议进行统计\n-c 每隔一个固定时间，执行该netstat命令。\n```\n![测试](http://upload-images.jianshu.io/upload_images/1837782-8b4c29d48645f4e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 3.查看某一端口的占用情况：\n> lsof -i:端口号\n\n![测试](http://upload-images.jianshu.io/upload_images/1837782-ff6376cd592a8a5d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n# tomcat\n修改端口为8088端口。\n`tomcat7/conf/server.xml` 文件里的：\n```xml\n<Connector port=\"8080\" \nprotocol=\"HTTP/1.1\"  connectionTimeout=\"20000\"  redirectPort=\"8443\" /> \n```\n将`port=\"8080\"`改为`port=\"8088\"`，保存。\n** 如果想要添加远程访问的话，需要修改防火墙设置。修改方法参看下面防火墙部分**\n`-A INPUT -m state --state NEW -M tcp -p tcp --dport 8088 -j ACCEPT#开放tomcat端口`\n\n**安装好后的启动和关闭方式：**\n> sh /opt/apache-tomcat-8.0.23/bin/startup.sh\nsh /opt/apache-tomcat-8.0.23/bin/shutdown.sh\n\n可以看出，路径太长，不好启动，所以将其设置成**以服务方式启动**，以后再启动就用⑥中的方式操作。\n①. 在/etc/init.d目录下新建文件，命名为tomcat2. 对tomcat文件进行编辑，执行\n >   cd /etc/init.d/\n >  vi tomcat\n\n将下面代码粘上去\n```xml\n#!/bin/bash\n# description: Tomcat7 Start Stop Restart\n# processname: tomcat7\n# chkconfig: 234 20 80\n# JAVA_HOME要根据jdk的具体位置修改\n\nJAVA_HOME=/opt/jdk1.7.0_80\nexport JAVA_HOME\nPATH=$JAVA_HOME/bin:$PATH\nexport PATH\nCATALINA_HOME=/opt/apache-tomcat-8.0.23\ncase $1 in\nstart)\nsh $CATALINA_HOME/bin/startup.sh\n;;\nstop)\nsh $CATALINA_HOME/bin/shutdown.sh\n;;\nrestart)\nsh $CATALINA_HOME/bin/shutdown.sh\nsh $CATALINA_HOME/bin/startup.sh\n;;\nesac\nexit 0\n```\n②. 按ESC退出，并\n> ：wq\n\n③. 设置tomcat的文件属性，把tomcat 修改为可运行的文件，命令参考如下\n> chmod a+x tomcat\n\n④. 添加服务\n> chkconfig --add tomcat\n\n⑤. 服务就添加成功了\n然后用 chkconfig --list 查看，在服务列表里就会出现自定义的服务了\n>  chkconfig --list\n\n⑥. 测试\n> service tomcat start\nservice tomcat stop\nservice tomcat restart\nservice tomcat status\n\n# mysql\n安装后需要更改初始密码（初始密码很复杂）\n> grep 'temporary password' /var/log/mysqld.log\n\n看到密码后进入mysql修改密码\n> mysql -uroot -p（回车后输入密码）\n\n进入后修改密码为123456\n> mysql> ALTER USER 'root'@'localhost' IDENTIFIED BY '123456';\n\n默认只允许root帐户在本地登录，如果要在其它机器上连接mysql，必须修改root允许远程连接，或者添加一个允许远程连接的帐户，为了安全起见，添加一个新的帐户：\n> mysql> GRANT ALL PRIVILEGES ON *.* TO 'look'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;\n\n修改防火墙设置（*参照“防火墙-更改防火墙配置”部分*）\n`-A INPUT -m state --state NEW -M tcp -p tcp --dport 3306 -j ACCEPT#开放mysql端口`\n启动mysql\n> systemctl start mysqld\n\n或者\n>  service mysqld start\n\n关闭mysql\n> systemctl stop mysqld\n\n或者\n>  service mysqld stop\n\n常用sql语句\n```sql\n进入\nmysql -u root -p\n创建数据库\ncreate database test;\nuse test;\ncreate table a(\nid int(4) not null,\nname varchar(10),\nprimary ker(id)\n) default charset=utf8;\n```\n# postgreSQL\n**常用命令**\n启动\n> systemctl start postgresql-9.5.service\n\n登录\n> su - postgres\npsql -U postgres\n\n\n安装过程\n1.添加RPM    \n> yum install https://download.postgresql.org/pub/repos/yum/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm\n\n2.安装PostgreSQL 9.5    \n> yum install postgresql95-server postgresql95-contrib\n\n3.初始化数据库   \n>  /usr/pgsql-9.5/bin/postgresql95-setup initdb\n\n4.设置开机自启动(有时候没反应，但是继续向下还是可以进行)    \n> systemctl enable postgresql-9.5.service\n\n**5.启动服务**\n> systemctl start postgresql-9.5.service\n\n6.修改用户密码    \n切换用户，执行后提示符会变为 '-bash-4.2$' \n> su - postgres  \n \n登录数据库\n> psql -U postgres\n\n输入 `ALTER USER postgres WITH PASSWORD '123456'  `，设置用户`postgres `密码 `123456`  ，\\q  退出数据库\n\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/1837782-7d1a96228fbe6ba0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n7.开启远程访问   \n> vi /var/lib/pgsql/9.5/data/postgresql.conf    \n\n修改`#listen_addresses = 'localhost'  `为 ` listen_addresses='*'   ` 当然，此处‘*’也可以改为任何你想开放的服务器IP\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/1837782-275cea19c66876b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n8.信任远程连接   \n> vi /var/lib/pgsql/9.5/data/pg_hba.conf    \n\n修改如下内容，信任指定服务器连接    \n`# IPv4 local connections:    `\n`host    all            all      127.0.0.1/32      trust`  \n` host    all            all      192.168.1.155/32  trust`\n\n**注：**\n```\n192.168.1.155是指定这个ip可以连接到postgreSQL\n     32 -> 192.168.1.155/32 表示必须是来自这个IP地址的访问才合法；\n     24 -> 192.168.1.0/24 表示只要来自192.168.1.0 ~ 192.168.1.255的都合法；\n     16 -> 192.168.0.0/16 表示只要来自192.168.0.0 ~ 192.168.255.255的都合法；\n     8   -> 192.0.0.0/16 表示只要来自192.0.0.0 ~ 192.255.255.255的都合法；\n     0   -> 0.0.0.0/0 表示全部IP地址都合法，/左边的IP地址随便了只要是合法的IP地址即可\n\ntrust\n无条件地允许联接。这个方法允许任何可以与PostgreSQL 数据库服务器联接的用户以他们期望的任意 PostgreSQL 数据库用户身份进行联接，而不需要口令。\nreject\n联接无条件拒绝。常用于从一个组中\"过滤\"某些主机。\nmd5\n要求客户端提供一个 MD5 加密的口令进行认证。\ncrypt\n要求客户端提供一个 crypt() 加密的口令用于认证。 7.2 以前的客户端只能支持 crypt。 对于 7.2 以及以后的客户端，我们建议使用 md5。\npassword\n要求客户端提供一个未加密的口令进行认证。 因为口令是以明文形式在网络上传递的， 所以我们不应该在不安全的网络上使用这个方式。\nkrb4\n用 Kerberos V4 认证用户。只有在进行 TCP/IP 联接的时候才能用。  （译注：Kerberos，\"克尔波洛斯\"，故希腊神话冥王哈得斯的多头看门狗。 Kerberos 是 MIT 开发出来的基与对称加密算法的认证协议和/或密钥交换方法。 其特点是需要两个不同用途的服务器，一个用于认证身份， 一个用于通道两端用户的密钥交换。同时 Kerberos 对网络时间同步要求比较高，以防止回放攻击，因此通常伴随 NTP 服务。）\nkrb5\n用 Kerberos V5 认证用户。只有在进行 TCP/IP 联接的时候才能用。  （译注：Kerberos V5 是上面 V4 的改良，主要是不再依赖 DES 算法， 同时增加了一些新特性。）\nident\n获取客户的操作系统名（对于 TCP/IP 联接，用户的身份是通过与运行在客户端上的 ident 服务器联接进行判断的，对于本地联接，它是从操作系统获取的。） 然后检查一下，看看用户是否允许以要求的数据库用户进行联接， 方法是参照在 ident 关键字后面声明的映射。 \npam\n使用操作系统提供的可插入的认证模块服务 （Pluggable Authentication Modules） （PAM）来认证。\n```\n\n\n远程连接配置完成，由于系统原因，还需要在防火墙中打开相应的端口。\n9.修改防火墙配置，加上（*参照“防火墙-更改防火墙配置”部分*）\n`-A INPUT -m state --state NEW -M tcp -p tcp --dport 5432 -j ACCEPT#开放postgreSQL端口`\n\n**10. 重启PostgreSQL数据服务**\n> systemctl restart postgresql-9.5.service\n\n\n# 防火墙\n查询防火墙状态:\n> [root@localhost ~]# service   iptables status<回车>\n \n停止防火墙:\n> [root@localhost ~]# service   iptables stop <回车>\n \n启动防火墙:\n> [root@localhost ~]# service   iptables start <回车>\n \n重启防火墙:\n> [root@localhost ~]# service   iptables restart <回车>\n \n永久关闭防火墙:\n> [root@localhost ~]# chkconfig   iptables off<回车>\n \n永久关闭后启用:\n> [root@localhost ~]# chkconfig   iptables on<回车>\n\n更改防火墙配置\n> vi /etc/sysconfig/iptables \n\n```xml\n\t# sample configuration for iptables service\n\t# you can edit this manually or use system-config-firewall\n\t# please do not ask us to add additional ports/services to this default \tconfiguration\n\t*filter\n\t:INPUT ACCEPT [0:0]\n\t:FORWARD ACCEPT [0:0]\n\t:OUTPUT ACCEPT [0:0]\n\t-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\n\t-A INPUT -p icmp -j ACCEPT\n\t-A INPUT -i lo -j ACCEPT\n\t-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT\n\t-A INPUT -m state --state NEW -M tcp -p tcp --dport 8088 -j ACCEPT#开放tomcat端口\n\t-A INPUT -m state --state NEW -M tcp -p tcp --dport 3306 -j ACCEPT#开放mysql端口\n\t-A INPUT -m state --state NEW -M tcp -p tcp --dport 5432 -j ACCEPT#开放\tpostgreSQL端口\n\t-A INPUT -j REJECT --reject-with icmp-host-prohibited\n\t-A FORWARD -j REJECT --reject-with icmp-host-prohibited\n\tCOMMIT\n```\n#scp命令\n\nscp就是secure copy，一个在linux下用来进行远程拷贝文件的命令。\n\n有时我们需要获得远程服务器上的某个文件，该服务器既没有配置ftp服务器，也没有做共享，无法通过常规途径获得文件时，只需要通过简单的scp命令便可达到目的。\n\n## 将本机文件复制到远程服务器上\n\n> #scp /home/administrator/news.txt root@192.168.6.129:/etc/squid\n\n/home/administrator/      本地文件的绝对路径\n\nnews.txt                          要复制到服务器上的本地文件\n\nroot                                 通过root用户登录到远程服务器（也可以使用其他拥有同等权限的用户）\n\n192.168.6.129                远程服务器的ip地址（也可以使用域名或机器名）\n\n/etc/squid                       将本地文件复制到位于远程服务器上的路径\n\n\n## 将远程服务器上的文件复制到本机\n\n> #scp remote@www.abc.com:/usr/local/sin.sh /home/administrator\n\nremote                       通过remote用户登录到远程服务器（也可以使用其他拥有同等权限的用户）\n\nwww.abc.com              远程服务器的域名（当然也可以使用该服务器ip地址）\n\n/usr/local/sin.sh           欲复制到本机的位于远程服务器上的文件\n\n/home/administrator  将远程文件复制到本地的绝对路径\n\n注意两点：\n\n1.如果远程服务器防火墙有特殊限制，scp便要走特殊端口，具体用什么端口视情况而定，命令格式如下：\n\n> #scp -p 4588 remote@www.abc.com:/usr/local/sin.sh /home/administrator\n\n2.使用scp要注意所使用的用户是否具有可读取远程服务器相应文件的权限。\n","source":"_posts/CentOs服务器常用命令.md","raw":"title: Centos服务器常用命令\ncategories: Linux\ntags:\n- note\n- Centos\ndate: 2017-4-14 15:23\n---\n\n\n首先要进入root用户\n> su\n\n<!-- more -->\n\n# ps\n查看某端口是否被占用(如查看8088）\n> ps -ef|grep 8088\n\n显示java相关程序\n> ps aux|grep java\n\n# kill\n\nkill命令用于关闭指定进程。\n\n格式：\n\nkill 参数 信号 进程ID\n\n参数：\n\n-s 指定发送信号\n\n-l 根据信号名显示信号编号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称\n\n-a 当处理当前进程时，不限制命令名和进程号的对应关系\n\n-p 指定kill 命令只打印相关进程的进程号，而不发送任何信号\n\n-u 指定用户\n信号：\n\n信号名 信号编号 信号含义\n\nHUP 1 终端断线\n\nINT 2 中断\n\nQUIT 3 退出\n\nTERM 15 终止\n\nKILL 9 强制终止\n\nCONT 18 继续（与STOP相反）\n\nSTOP 19 暂停（\n\n示例：\n\n显示信号KILL的信号编号\n\nkill -l KILL\n\n关闭apache用户下所有进程\n\nkill -u apache.apache\n\n强制关闭进程ID为1937的进程，参数s可以省略。\n\nkill -s 9 1937\n\nkill -9 1937\n# 查看端口是否被占用 \n[参考文章](http://www.cnblogs.com/ggjucheng/archive/2012/01/08/2316661.html)\n### 1.显示所有端口和所有对应的程序\n> netstat -tunlp\n\n### 2.用grep管道可以过滤出想要的关键字段。\n> netstat -tunlp |grep 5432\n\n*参数*\n```xml\n-a (all)显示所有选项，默认不显示LISTEN相关\n-t (tcp)仅显示tcp相关选项\n-u (udp)仅显示udp相关选项\n-n 拒绝显示别名，能显示数字的全部转化成数字。\n-l 仅列出有在 Listen (监听) 的服務状态\n\n-p 显示建立相关链接的程序名\n-r 显示路由信息，路由表\n-e 显示扩展信息，例如uid等\n-s 按各个协议进行统计\n-c 每隔一个固定时间，执行该netstat命令。\n```\n![测试](http://upload-images.jianshu.io/upload_images/1837782-8b4c29d48645f4e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 3.查看某一端口的占用情况：\n> lsof -i:端口号\n\n![测试](http://upload-images.jianshu.io/upload_images/1837782-ff6376cd592a8a5d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n# tomcat\n修改端口为8088端口。\n`tomcat7/conf/server.xml` 文件里的：\n```xml\n<Connector port=\"8080\" \nprotocol=\"HTTP/1.1\"  connectionTimeout=\"20000\"  redirectPort=\"8443\" /> \n```\n将`port=\"8080\"`改为`port=\"8088\"`，保存。\n** 如果想要添加远程访问的话，需要修改防火墙设置。修改方法参看下面防火墙部分**\n`-A INPUT -m state --state NEW -M tcp -p tcp --dport 8088 -j ACCEPT#开放tomcat端口`\n\n**安装好后的启动和关闭方式：**\n> sh /opt/apache-tomcat-8.0.23/bin/startup.sh\nsh /opt/apache-tomcat-8.0.23/bin/shutdown.sh\n\n可以看出，路径太长，不好启动，所以将其设置成**以服务方式启动**，以后再启动就用⑥中的方式操作。\n①. 在/etc/init.d目录下新建文件，命名为tomcat2. 对tomcat文件进行编辑，执行\n >   cd /etc/init.d/\n >  vi tomcat\n\n将下面代码粘上去\n```xml\n#!/bin/bash\n# description: Tomcat7 Start Stop Restart\n# processname: tomcat7\n# chkconfig: 234 20 80\n# JAVA_HOME要根据jdk的具体位置修改\n\nJAVA_HOME=/opt/jdk1.7.0_80\nexport JAVA_HOME\nPATH=$JAVA_HOME/bin:$PATH\nexport PATH\nCATALINA_HOME=/opt/apache-tomcat-8.0.23\ncase $1 in\nstart)\nsh $CATALINA_HOME/bin/startup.sh\n;;\nstop)\nsh $CATALINA_HOME/bin/shutdown.sh\n;;\nrestart)\nsh $CATALINA_HOME/bin/shutdown.sh\nsh $CATALINA_HOME/bin/startup.sh\n;;\nesac\nexit 0\n```\n②. 按ESC退出，并\n> ：wq\n\n③. 设置tomcat的文件属性，把tomcat 修改为可运行的文件，命令参考如下\n> chmod a+x tomcat\n\n④. 添加服务\n> chkconfig --add tomcat\n\n⑤. 服务就添加成功了\n然后用 chkconfig --list 查看，在服务列表里就会出现自定义的服务了\n>  chkconfig --list\n\n⑥. 测试\n> service tomcat start\nservice tomcat stop\nservice tomcat restart\nservice tomcat status\n\n# mysql\n安装后需要更改初始密码（初始密码很复杂）\n> grep 'temporary password' /var/log/mysqld.log\n\n看到密码后进入mysql修改密码\n> mysql -uroot -p（回车后输入密码）\n\n进入后修改密码为123456\n> mysql> ALTER USER 'root'@'localhost' IDENTIFIED BY '123456';\n\n默认只允许root帐户在本地登录，如果要在其它机器上连接mysql，必须修改root允许远程连接，或者添加一个允许远程连接的帐户，为了安全起见，添加一个新的帐户：\n> mysql> GRANT ALL PRIVILEGES ON *.* TO 'look'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;\n\n修改防火墙设置（*参照“防火墙-更改防火墙配置”部分*）\n`-A INPUT -m state --state NEW -M tcp -p tcp --dport 3306 -j ACCEPT#开放mysql端口`\n启动mysql\n> systemctl start mysqld\n\n或者\n>  service mysqld start\n\n关闭mysql\n> systemctl stop mysqld\n\n或者\n>  service mysqld stop\n\n常用sql语句\n```sql\n进入\nmysql -u root -p\n创建数据库\ncreate database test;\nuse test;\ncreate table a(\nid int(4) not null,\nname varchar(10),\nprimary ker(id)\n) default charset=utf8;\n```\n# postgreSQL\n**常用命令**\n启动\n> systemctl start postgresql-9.5.service\n\n登录\n> su - postgres\npsql -U postgres\n\n\n安装过程\n1.添加RPM    \n> yum install https://download.postgresql.org/pub/repos/yum/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm\n\n2.安装PostgreSQL 9.5    \n> yum install postgresql95-server postgresql95-contrib\n\n3.初始化数据库   \n>  /usr/pgsql-9.5/bin/postgresql95-setup initdb\n\n4.设置开机自启动(有时候没反应，但是继续向下还是可以进行)    \n> systemctl enable postgresql-9.5.service\n\n**5.启动服务**\n> systemctl start postgresql-9.5.service\n\n6.修改用户密码    \n切换用户，执行后提示符会变为 '-bash-4.2$' \n> su - postgres  \n \n登录数据库\n> psql -U postgres\n\n输入 `ALTER USER postgres WITH PASSWORD '123456'  `，设置用户`postgres `密码 `123456`  ，\\q  退出数据库\n\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/1837782-7d1a96228fbe6ba0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n7.开启远程访问   \n> vi /var/lib/pgsql/9.5/data/postgresql.conf    \n\n修改`#listen_addresses = 'localhost'  `为 ` listen_addresses='*'   ` 当然，此处‘*’也可以改为任何你想开放的服务器IP\n\n![Paste_Image.png](http://upload-images.jianshu.io/upload_images/1837782-275cea19c66876b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n8.信任远程连接   \n> vi /var/lib/pgsql/9.5/data/pg_hba.conf    \n\n修改如下内容，信任指定服务器连接    \n`# IPv4 local connections:    `\n`host    all            all      127.0.0.1/32      trust`  \n` host    all            all      192.168.1.155/32  trust`\n\n**注：**\n```\n192.168.1.155是指定这个ip可以连接到postgreSQL\n     32 -> 192.168.1.155/32 表示必须是来自这个IP地址的访问才合法；\n     24 -> 192.168.1.0/24 表示只要来自192.168.1.0 ~ 192.168.1.255的都合法；\n     16 -> 192.168.0.0/16 表示只要来自192.168.0.0 ~ 192.168.255.255的都合法；\n     8   -> 192.0.0.0/16 表示只要来自192.0.0.0 ~ 192.255.255.255的都合法；\n     0   -> 0.0.0.0/0 表示全部IP地址都合法，/左边的IP地址随便了只要是合法的IP地址即可\n\ntrust\n无条件地允许联接。这个方法允许任何可以与PostgreSQL 数据库服务器联接的用户以他们期望的任意 PostgreSQL 数据库用户身份进行联接，而不需要口令。\nreject\n联接无条件拒绝。常用于从一个组中\"过滤\"某些主机。\nmd5\n要求客户端提供一个 MD5 加密的口令进行认证。\ncrypt\n要求客户端提供一个 crypt() 加密的口令用于认证。 7.2 以前的客户端只能支持 crypt。 对于 7.2 以及以后的客户端，我们建议使用 md5。\npassword\n要求客户端提供一个未加密的口令进行认证。 因为口令是以明文形式在网络上传递的， 所以我们不应该在不安全的网络上使用这个方式。\nkrb4\n用 Kerberos V4 认证用户。只有在进行 TCP/IP 联接的时候才能用。  （译注：Kerberos，\"克尔波洛斯\"，故希腊神话冥王哈得斯的多头看门狗。 Kerberos 是 MIT 开发出来的基与对称加密算法的认证协议和/或密钥交换方法。 其特点是需要两个不同用途的服务器，一个用于认证身份， 一个用于通道两端用户的密钥交换。同时 Kerberos 对网络时间同步要求比较高，以防止回放攻击，因此通常伴随 NTP 服务。）\nkrb5\n用 Kerberos V5 认证用户。只有在进行 TCP/IP 联接的时候才能用。  （译注：Kerberos V5 是上面 V4 的改良，主要是不再依赖 DES 算法， 同时增加了一些新特性。）\nident\n获取客户的操作系统名（对于 TCP/IP 联接，用户的身份是通过与运行在客户端上的 ident 服务器联接进行判断的，对于本地联接，它是从操作系统获取的。） 然后检查一下，看看用户是否允许以要求的数据库用户进行联接， 方法是参照在 ident 关键字后面声明的映射。 \npam\n使用操作系统提供的可插入的认证模块服务 （Pluggable Authentication Modules） （PAM）来认证。\n```\n\n\n远程连接配置完成，由于系统原因，还需要在防火墙中打开相应的端口。\n9.修改防火墙配置，加上（*参照“防火墙-更改防火墙配置”部分*）\n`-A INPUT -m state --state NEW -M tcp -p tcp --dport 5432 -j ACCEPT#开放postgreSQL端口`\n\n**10. 重启PostgreSQL数据服务**\n> systemctl restart postgresql-9.5.service\n\n\n# 防火墙\n查询防火墙状态:\n> [root@localhost ~]# service   iptables status<回车>\n \n停止防火墙:\n> [root@localhost ~]# service   iptables stop <回车>\n \n启动防火墙:\n> [root@localhost ~]# service   iptables start <回车>\n \n重启防火墙:\n> [root@localhost ~]# service   iptables restart <回车>\n \n永久关闭防火墙:\n> [root@localhost ~]# chkconfig   iptables off<回车>\n \n永久关闭后启用:\n> [root@localhost ~]# chkconfig   iptables on<回车>\n\n更改防火墙配置\n> vi /etc/sysconfig/iptables \n\n```xml\n\t# sample configuration for iptables service\n\t# you can edit this manually or use system-config-firewall\n\t# please do not ask us to add additional ports/services to this default \tconfiguration\n\t*filter\n\t:INPUT ACCEPT [0:0]\n\t:FORWARD ACCEPT [0:0]\n\t:OUTPUT ACCEPT [0:0]\n\t-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\n\t-A INPUT -p icmp -j ACCEPT\n\t-A INPUT -i lo -j ACCEPT\n\t-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT\n\t-A INPUT -m state --state NEW -M tcp -p tcp --dport 8088 -j ACCEPT#开放tomcat端口\n\t-A INPUT -m state --state NEW -M tcp -p tcp --dport 3306 -j ACCEPT#开放mysql端口\n\t-A INPUT -m state --state NEW -M tcp -p tcp --dport 5432 -j ACCEPT#开放\tpostgreSQL端口\n\t-A INPUT -j REJECT --reject-with icmp-host-prohibited\n\t-A FORWARD -j REJECT --reject-with icmp-host-prohibited\n\tCOMMIT\n```\n#scp命令\n\nscp就是secure copy，一个在linux下用来进行远程拷贝文件的命令。\n\n有时我们需要获得远程服务器上的某个文件，该服务器既没有配置ftp服务器，也没有做共享，无法通过常规途径获得文件时，只需要通过简单的scp命令便可达到目的。\n\n## 将本机文件复制到远程服务器上\n\n> #scp /home/administrator/news.txt root@192.168.6.129:/etc/squid\n\n/home/administrator/      本地文件的绝对路径\n\nnews.txt                          要复制到服务器上的本地文件\n\nroot                                 通过root用户登录到远程服务器（也可以使用其他拥有同等权限的用户）\n\n192.168.6.129                远程服务器的ip地址（也可以使用域名或机器名）\n\n/etc/squid                       将本地文件复制到位于远程服务器上的路径\n\n\n## 将远程服务器上的文件复制到本机\n\n> #scp remote@www.abc.com:/usr/local/sin.sh /home/administrator\n\nremote                       通过remote用户登录到远程服务器（也可以使用其他拥有同等权限的用户）\n\nwww.abc.com              远程服务器的域名（当然也可以使用该服务器ip地址）\n\n/usr/local/sin.sh           欲复制到本机的位于远程服务器上的文件\n\n/home/administrator  将远程文件复制到本地的绝对路径\n\n注意两点：\n\n1.如果远程服务器防火墙有特殊限制，scp便要走特殊端口，具体用什么端口视情况而定，命令格式如下：\n\n> #scp -p 4588 remote@www.abc.com:/usr/local/sin.sh /home/administrator\n\n2.使用scp要注意所使用的用户是否具有可读取远程服务器相应文件的权限。\n","slug":"CentOs服务器常用命令","published":1,"updated":"2017-04-22T01:22:12.886Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1u7zpn1000199pvqxn8r72x","content":"<p>首先要进入root用户</p>\n<blockquote>\n<p>su</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"ps\"><a href=\"#ps\" class=\"headerlink\" title=\"ps\"></a>ps</h1><p>查看某端口是否被占用(如查看8088）</p>\n<blockquote>\n<p>ps -ef|grep 8088</p>\n</blockquote>\n<p>显示java相关程序</p>\n<blockquote>\n<p>ps aux|grep java</p>\n</blockquote>\n<h1 id=\"kill\"><a href=\"#kill\" class=\"headerlink\" title=\"kill\"></a>kill</h1><p>kill命令用于关闭指定进程。</p>\n<p>格式：</p>\n<p>kill 参数 信号 进程ID</p>\n<p>参数：</p>\n<p>-s 指定发送信号</p>\n<p>-l 根据信号名显示信号编号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称</p>\n<p>-a 当处理当前进程时，不限制命令名和进程号的对应关系</p>\n<p>-p 指定kill 命令只打印相关进程的进程号，而不发送任何信号</p>\n<p>-u 指定用户<br>信号：</p>\n<p>信号名 信号编号 信号含义</p>\n<p>HUP 1 终端断线</p>\n<p>INT 2 中断</p>\n<p>QUIT 3 退出</p>\n<p>TERM 15 终止</p>\n<p>KILL 9 强制终止</p>\n<p>CONT 18 继续（与STOP相反）</p>\n<p>STOP 19 暂停（</p>\n<p>示例：</p>\n<p>显示信号KILL的信号编号</p>\n<p>kill -l KILL</p>\n<p>关闭apache用户下所有进程</p>\n<p>kill -u apache.apache</p>\n<p>强制关闭进程ID为1937的进程，参数s可以省略。</p>\n<p>kill -s 9 1937</p>\n<p>kill -9 1937</p>\n<h1 id=\"查看端口是否被占用\"><a href=\"#查看端口是否被占用\" class=\"headerlink\" title=\"查看端口是否被占用\"></a>查看端口是否被占用</h1><p><a href=\"http://www.cnblogs.com/ggjucheng/archive/2012/01/08/2316661.html\" target=\"_blank\" rel=\"external\">参考文章</a></p>\n<h3 id=\"1-显示所有端口和所有对应的程序\"><a href=\"#1-显示所有端口和所有对应的程序\" class=\"headerlink\" title=\"1.显示所有端口和所有对应的程序\"></a>1.显示所有端口和所有对应的程序</h3><blockquote>\n<p>netstat -tunlp</p>\n</blockquote>\n<h3 id=\"2-用grep管道可以过滤出想要的关键字段。\"><a href=\"#2-用grep管道可以过滤出想要的关键字段。\" class=\"headerlink\" title=\"2.用grep管道可以过滤出想要的关键字段。\"></a>2.用grep管道可以过滤出想要的关键字段。</h3><blockquote>\n<p>netstat -tunlp |grep 5432</p>\n</blockquote>\n<p><em>参数</em><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">-a (all)显示所有选项，默认不显示LISTEN相关</div><div class=\"line\">-t (tcp)仅显示tcp相关选项</div><div class=\"line\">-u (udp)仅显示udp相关选项</div><div class=\"line\">-n 拒绝显示别名，能显示数字的全部转化成数字。</div><div class=\"line\">-l 仅列出有在 Listen (监听) 的服務状态</div><div class=\"line\"></div><div class=\"line\">-p 显示建立相关链接的程序名</div><div class=\"line\">-r 显示路由信息，路由表</div><div class=\"line\">-e 显示扩展信息，例如uid等</div><div class=\"line\">-s 按各个协议进行统计</div><div class=\"line\">-c 每隔一个固定时间，执行该netstat命令。</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-8b4c29d48645f4e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"测试\"></p>\n<h3 id=\"3-查看某一端口的占用情况：\"><a href=\"#3-查看某一端口的占用情况：\" class=\"headerlink\" title=\"3.查看某一端口的占用情况：\"></a>3.查看某一端口的占用情况：</h3><blockquote>\n<p>lsof -i:端口号</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-ff6376cd592a8a5d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"测试\"></p>\n<h1 id=\"tomcat\"><a href=\"#tomcat\" class=\"headerlink\" title=\"tomcat\"></a>tomcat</h1><p>修改端口为8088端口。<br><code>tomcat7/conf/server.xml</code> 文件里的：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8080\"</span> </span></div><div class=\"line\"><span class=\"attr\">protocol</span>=<span class=\"string\">\"HTTP/1.1\"</span>  <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">\"20000\"</span>  <span class=\"attr\">redirectPort</span>=<span class=\"string\">\"8443\"</span> /&gt;</div></pre></td></tr></table></figure></p>\n<p>将<code>port=&quot;8080&quot;</code>改为<code>port=&quot;8088&quot;</code>，保存。<br><strong> 如果想要添加远程访问的话，需要修改防火墙设置。修改方法参看下面防火墙部分</strong><br><code>-A INPUT -m state --state NEW -M tcp -p tcp --dport 8088 -j ACCEPT#开放tomcat端口</code></p>\n<p><strong>安装好后的启动和关闭方式：</strong></p>\n<blockquote>\n<p>sh /opt/apache-tomcat-8.0.23/bin/startup.sh<br>sh /opt/apache-tomcat-8.0.23/bin/shutdown.sh</p>\n</blockquote>\n<p>可以看出，路径太长，不好启动，所以将其设置成<strong>以服务方式启动</strong>，以后再启动就用⑥中的方式操作。<br>①. 在/etc/init.d目录下新建文件，命名为tomcat2. 对tomcat文件进行编辑，执行</p>\n<blockquote>\n<p>  cd /etc/init.d/<br> vi tomcat</p>\n</blockquote>\n<p>将下面代码粘上去<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\"># description: Tomcat7 Start Stop Restart</div><div class=\"line\"># processname: tomcat7</div><div class=\"line\"># chkconfig: 234 20 80</div><div class=\"line\"># JAVA_HOME要根据jdk的具体位置修改</div><div class=\"line\"></div><div class=\"line\">JAVA_HOME=/opt/jdk1.7.0_80</div><div class=\"line\">export JAVA_HOME</div><div class=\"line\">PATH=$JAVA_HOME/bin:$PATH</div><div class=\"line\">export PATH</div><div class=\"line\">CATALINA_HOME=/opt/apache-tomcat-8.0.23</div><div class=\"line\">case $1 in</div><div class=\"line\">start)</div><div class=\"line\">sh $CATALINA_HOME/bin/startup.sh</div><div class=\"line\">;;</div><div class=\"line\">stop)</div><div class=\"line\">sh $CATALINA_HOME/bin/shutdown.sh</div><div class=\"line\">;;</div><div class=\"line\">restart)</div><div class=\"line\">sh $CATALINA_HOME/bin/shutdown.sh</div><div class=\"line\">sh $CATALINA_HOME/bin/startup.sh</div><div class=\"line\">;;</div><div class=\"line\">esac</div><div class=\"line\">exit 0</div></pre></td></tr></table></figure></p>\n<p>②. 按ESC退出，并</p>\n<blockquote>\n<p>：wq</p>\n</blockquote>\n<p>③. 设置tomcat的文件属性，把tomcat 修改为可运行的文件，命令参考如下</p>\n<blockquote>\n<p>chmod a+x tomcat</p>\n</blockquote>\n<p>④. 添加服务</p>\n<blockquote>\n<p>chkconfig –add tomcat</p>\n</blockquote>\n<p>⑤. 服务就添加成功了<br>然后用 chkconfig –list 查看，在服务列表里就会出现自定义的服务了</p>\n<blockquote>\n<p> chkconfig –list</p>\n</blockquote>\n<p>⑥. 测试</p>\n<blockquote>\n<p>service tomcat start<br>service tomcat stop<br>service tomcat restart<br>service tomcat status</p>\n</blockquote>\n<h1 id=\"mysql\"><a href=\"#mysql\" class=\"headerlink\" title=\"mysql\"></a>mysql</h1><p>安装后需要更改初始密码（初始密码很复杂）</p>\n<blockquote>\n<p>grep ‘temporary password’ /var/log/mysqld.log</p>\n</blockquote>\n<p>看到密码后进入mysql修改密码</p>\n<blockquote>\n<p>mysql -uroot -p（回车后输入密码）</p>\n</blockquote>\n<p>进入后修改密码为123456</p>\n<blockquote>\n<p>mysql&gt; ALTER USER ‘root’@’localhost’ IDENTIFIED BY ‘123456’;</p>\n</blockquote>\n<p>默认只允许root帐户在本地登录，如果要在其它机器上连接mysql，必须修改root允许远程连接，或者添加一个允许远程连接的帐户，为了安全起见，添加一个新的帐户：</p>\n<blockquote>\n<p>mysql&gt; GRANT ALL PRIVILEGES ON <em>.</em> TO ‘look’@’%’ IDENTIFIED BY ‘123456’ WITH GRANT OPTION;</p>\n</blockquote>\n<p>修改防火墙设置（<em>参照“防火墙-更改防火墙配置”部分</em>）<br><code>-A INPUT -m state --state NEW -M tcp -p tcp --dport 3306 -j ACCEPT#开放mysql端口</code><br>启动mysql</p>\n<blockquote>\n<p>systemctl start mysqld</p>\n</blockquote>\n<p>或者</p>\n<blockquote>\n<p> service mysqld start</p>\n</blockquote>\n<p>关闭mysql</p>\n<blockquote>\n<p>systemctl stop mysqld</p>\n</blockquote>\n<p>或者</p>\n<blockquote>\n<p> service mysqld stop</p>\n</blockquote>\n<p>常用sql语句<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">进入</div><div class=\"line\">mysql -u root -p</div><div class=\"line\">创建数据库</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> <span class=\"keyword\">test</span>;</div><div class=\"line\"><span class=\"keyword\">use</span> <span class=\"keyword\">test</span>;</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> a(</div><div class=\"line\"><span class=\"keyword\">id</span> <span class=\"built_in\">int</span>(<span class=\"number\">4</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\"><span class=\"keyword\">name</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">10</span>),</div><div class=\"line\">primary ker(<span class=\"keyword\">id</span>)</div><div class=\"line\">) <span class=\"keyword\">default</span> <span class=\"keyword\">charset</span>=utf8;</div></pre></td></tr></table></figure></p>\n<h1 id=\"postgreSQL\"><a href=\"#postgreSQL\" class=\"headerlink\" title=\"postgreSQL\"></a>postgreSQL</h1><p><strong>常用命令</strong><br>启动</p>\n<blockquote>\n<p>systemctl start postgresql-9.5.service</p>\n</blockquote>\n<p>登录</p>\n<blockquote>\n<p>su - postgres<br>psql -U postgres</p>\n</blockquote>\n<p>安装过程<br>1.添加RPM    </p>\n<blockquote>\n<p>yum install <a href=\"https://download.postgresql.org/pub/repos/yum/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm\" target=\"_blank\" rel=\"external\">https://download.postgresql.org/pub/repos/yum/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm</a></p>\n</blockquote>\n<p>2.安装PostgreSQL 9.5    </p>\n<blockquote>\n<p>yum install postgresql95-server postgresql95-contrib</p>\n</blockquote>\n<p>3.初始化数据库   </p>\n<blockquote>\n<p> /usr/pgsql-9.5/bin/postgresql95-setup initdb</p>\n</blockquote>\n<p>4.设置开机自启动(有时候没反应，但是继续向下还是可以进行)    </p>\n<blockquote>\n<p>systemctl enable postgresql-9.5.service</p>\n</blockquote>\n<p><strong>5.启动服务</strong></p>\n<blockquote>\n<p>systemctl start postgresql-9.5.service</p>\n</blockquote>\n<p>6.修改用户密码<br>切换用户，执行后提示符会变为 ‘-bash-4.2$’ </p>\n<blockquote>\n<p>su - postgres  </p>\n</blockquote>\n<p>登录数据库</p>\n<blockquote>\n<p>psql -U postgres</p>\n</blockquote>\n<p>输入 <code>ALTER USER postgres WITH PASSWORD &#39;123456&#39;</code>，设置用户<code>postgres</code>密码 <code>123456</code>  ，\\q  退出数据库</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-7d1a96228fbe6ba0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"></p>\n<p>7.开启远程访问   </p>\n<blockquote>\n<p>vi /var/lib/pgsql/9.5/data/postgresql.conf    </p>\n</blockquote>\n<p>修改<code>#listen_addresses = &#39;localhost&#39;</code>为 <code>listen_addresses=&#39;*&#39;</code> 当然，此处‘*’也可以改为任何你想开放的服务器IP</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-275cea19c66876b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"></p>\n<p>8.信任远程连接   </p>\n<blockquote>\n<p>vi /var/lib/pgsql/9.5/data/pg_hba.conf    </p>\n</blockquote>\n<p>修改如下内容，信任指定服务器连接<br><code># IPv4 local connections:</code><br><code>host    all            all      127.0.0.1/32      trust</code><br><code>host    all            all      192.168.1.155/32  trust</code></p>\n<p><strong>注：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">192.168.1.155是指定这个ip可以连接到postgreSQL</div><div class=\"line\">     32 -&gt; 192.168.1.155/32 表示必须是来自这个IP地址的访问才合法；</div><div class=\"line\">     24 -&gt; 192.168.1.0/24 表示只要来自192.168.1.0 ~ 192.168.1.255的都合法；</div><div class=\"line\">     16 -&gt; 192.168.0.0/16 表示只要来自192.168.0.0 ~ 192.168.255.255的都合法；</div><div class=\"line\">     8   -&gt; 192.0.0.0/16 表示只要来自192.0.0.0 ~ 192.255.255.255的都合法；</div><div class=\"line\">     0   -&gt; 0.0.0.0/0 表示全部IP地址都合法，/左边的IP地址随便了只要是合法的IP地址即可</div><div class=\"line\"></div><div class=\"line\">trust</div><div class=\"line\">无条件地允许联接。这个方法允许任何可以与PostgreSQL 数据库服务器联接的用户以他们期望的任意 PostgreSQL 数据库用户身份进行联接，而不需要口令。</div><div class=\"line\">reject</div><div class=\"line\">联接无条件拒绝。常用于从一个组中&quot;过滤&quot;某些主机。</div><div class=\"line\">md5</div><div class=\"line\">要求客户端提供一个 MD5 加密的口令进行认证。</div><div class=\"line\">crypt</div><div class=\"line\">要求客户端提供一个 crypt() 加密的口令用于认证。 7.2 以前的客户端只能支持 crypt。 对于 7.2 以及以后的客户端，我们建议使用 md5。</div><div class=\"line\">password</div><div class=\"line\">要求客户端提供一个未加密的口令进行认证。 因为口令是以明文形式在网络上传递的， 所以我们不应该在不安全的网络上使用这个方式。</div><div class=\"line\">krb4</div><div class=\"line\">用 Kerberos V4 认证用户。只有在进行 TCP/IP 联接的时候才能用。  （译注：Kerberos，&quot;克尔波洛斯&quot;，故希腊神话冥王哈得斯的多头看门狗。 Kerberos 是 MIT 开发出来的基与对称加密算法的认证协议和/或密钥交换方法。 其特点是需要两个不同用途的服务器，一个用于认证身份， 一个用于通道两端用户的密钥交换。同时 Kerberos 对网络时间同步要求比较高，以防止回放攻击，因此通常伴随 NTP 服务。）</div><div class=\"line\">krb5</div><div class=\"line\">用 Kerberos V5 认证用户。只有在进行 TCP/IP 联接的时候才能用。  （译注：Kerberos V5 是上面 V4 的改良，主要是不再依赖 DES 算法， 同时增加了一些新特性。）</div><div class=\"line\">ident</div><div class=\"line\">获取客户的操作系统名（对于 TCP/IP 联接，用户的身份是通过与运行在客户端上的 ident 服务器联接进行判断的，对于本地联接，它是从操作系统获取的。） 然后检查一下，看看用户是否允许以要求的数据库用户进行联接， 方法是参照在 ident 关键字后面声明的映射。 </div><div class=\"line\">pam</div><div class=\"line\">使用操作系统提供的可插入的认证模块服务 （Pluggable Authentication Modules） （PAM）来认证。</div></pre></td></tr></table></figure></p>\n<p>远程连接配置完成，由于系统原因，还需要在防火墙中打开相应的端口。<br>9.修改防火墙配置，加上（<em>参照“防火墙-更改防火墙配置”部分</em>）<br><code>-A INPUT -m state --state NEW -M tcp -p tcp --dport 5432 -j ACCEPT#开放postgreSQL端口</code></p>\n<p><strong>10. 重启PostgreSQL数据服务</strong></p>\n<blockquote>\n<p>systemctl restart postgresql-9.5.service</p>\n</blockquote>\n<h1 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h1><p>查询防火墙状态:</p>\n<blockquote>\n<p>[root@localhost ~]# service   iptables status&lt;回车&gt;</p>\n</blockquote>\n<p>停止防火墙:</p>\n<blockquote>\n<p>[root@localhost ~]# service   iptables stop &lt;回车&gt;</p>\n</blockquote>\n<p>启动防火墙:</p>\n<blockquote>\n<p>[root@localhost ~]# service   iptables start &lt;回车&gt;</p>\n</blockquote>\n<p>重启防火墙:</p>\n<blockquote>\n<p>[root@localhost ~]# service   iptables restart &lt;回车&gt;</p>\n</blockquote>\n<p>永久关闭防火墙:</p>\n<blockquote>\n<p>[root@localhost ~]# chkconfig   iptables off&lt;回车&gt;</p>\n</blockquote>\n<p>永久关闭后启用:</p>\n<blockquote>\n<p>[root@localhost ~]# chkconfig   iptables on&lt;回车&gt;</p>\n</blockquote>\n<p>更改防火墙配置</p>\n<blockquote>\n<p>vi /etc/sysconfig/iptables </p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"># sample configuration for iptables service</div><div class=\"line\"># you can edit this manually or use system-config-firewall</div><div class=\"line\"># please do not ask us to add additional ports/services to this default \tconfiguration</div><div class=\"line\">*filter</div><div class=\"line\">:INPUT ACCEPT [0:0]</div><div class=\"line\">:FORWARD ACCEPT [0:0]</div><div class=\"line\">:OUTPUT ACCEPT [0:0]</div><div class=\"line\">-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</div><div class=\"line\">-A INPUT -p icmp -j ACCEPT</div><div class=\"line\">-A INPUT -i lo -j ACCEPT</div><div class=\"line\">-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT</div><div class=\"line\">-A INPUT -m state --state NEW -M tcp -p tcp --dport 8088 -j ACCEPT#开放tomcat端口</div><div class=\"line\">-A INPUT -m state --state NEW -M tcp -p tcp --dport 3306 -j ACCEPT#开放mysql端口</div><div class=\"line\">-A INPUT -m state --state NEW -M tcp -p tcp --dport 5432 -j ACCEPT#开放\tpostgreSQL端口</div><div class=\"line\">-A INPUT -j REJECT --reject-with icmp-host-prohibited</div><div class=\"line\">-A FORWARD -j REJECT --reject-with icmp-host-prohibited</div><div class=\"line\">COMMIT</div></pre></td></tr></table></figure>\n<p>#scp命令</p>\n<p>scp就是secure copy，一个在linux下用来进行远程拷贝文件的命令。</p>\n<p>有时我们需要获得远程服务器上的某个文件，该服务器既没有配置ftp服务器，也没有做共享，无法通过常规途径获得文件时，只需要通过简单的scp命令便可达到目的。</p>\n<h2 id=\"将本机文件复制到远程服务器上\"><a href=\"#将本机文件复制到远程服务器上\" class=\"headerlink\" title=\"将本机文件复制到远程服务器上\"></a>将本机文件复制到远程服务器上</h2><blockquote>\n<p>#scp /home/administrator/news.txt root@192.168.6.129:/etc/squid</p>\n</blockquote>\n<p>/home/administrator/      本地文件的绝对路径</p>\n<p>news.txt                          要复制到服务器上的本地文件</p>\n<p>root                                 通过root用户登录到远程服务器（也可以使用其他拥有同等权限的用户）</p>\n<p>192.168.6.129                远程服务器的ip地址（也可以使用域名或机器名）</p>\n<p>/etc/squid                       将本地文件复制到位于远程服务器上的路径</p>\n<h2 id=\"将远程服务器上的文件复制到本机\"><a href=\"#将远程服务器上的文件复制到本机\" class=\"headerlink\" title=\"将远程服务器上的文件复制到本机\"></a>将远程服务器上的文件复制到本机</h2><blockquote>\n<p>#scp remote@www.abc.com:/usr/local/sin.sh /home/administrator</p>\n</blockquote>\n<p>remote                       通过remote用户登录到远程服务器（也可以使用其他拥有同等权限的用户）</p>\n<p>www.abc.com              远程服务器的域名（当然也可以使用该服务器ip地址）</p>\n<p>/usr/local/sin.sh           欲复制到本机的位于远程服务器上的文件</p>\n<p>/home/administrator  将远程文件复制到本地的绝对路径</p>\n<p>注意两点：</p>\n<p>1.如果远程服务器防火墙有特殊限制，scp便要走特殊端口，具体用什么端口视情况而定，命令格式如下：</p>\n<blockquote>\n<p>#scp -p 4588 remote@www.abc.com:/usr/local/sin.sh /home/administrator</p>\n</blockquote>\n<p>2.使用scp要注意所使用的用户是否具有可读取远程服务器相应文件的权限。</p>\n","site":{"data":{}},"excerpt":"<p>首先要进入root用户</p>\n<blockquote>\n<p>su</p>\n</blockquote>","more":"<h1 id=\"ps\"><a href=\"#ps\" class=\"headerlink\" title=\"ps\"></a>ps</h1><p>查看某端口是否被占用(如查看8088）</p>\n<blockquote>\n<p>ps -ef|grep 8088</p>\n</blockquote>\n<p>显示java相关程序</p>\n<blockquote>\n<p>ps aux|grep java</p>\n</blockquote>\n<h1 id=\"kill\"><a href=\"#kill\" class=\"headerlink\" title=\"kill\"></a>kill</h1><p>kill命令用于关闭指定进程。</p>\n<p>格式：</p>\n<p>kill 参数 信号 进程ID</p>\n<p>参数：</p>\n<p>-s 指定发送信号</p>\n<p>-l 根据信号名显示信号编号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称</p>\n<p>-a 当处理当前进程时，不限制命令名和进程号的对应关系</p>\n<p>-p 指定kill 命令只打印相关进程的进程号，而不发送任何信号</p>\n<p>-u 指定用户<br>信号：</p>\n<p>信号名 信号编号 信号含义</p>\n<p>HUP 1 终端断线</p>\n<p>INT 2 中断</p>\n<p>QUIT 3 退出</p>\n<p>TERM 15 终止</p>\n<p>KILL 9 强制终止</p>\n<p>CONT 18 继续（与STOP相反）</p>\n<p>STOP 19 暂停（</p>\n<p>示例：</p>\n<p>显示信号KILL的信号编号</p>\n<p>kill -l KILL</p>\n<p>关闭apache用户下所有进程</p>\n<p>kill -u apache.apache</p>\n<p>强制关闭进程ID为1937的进程，参数s可以省略。</p>\n<p>kill -s 9 1937</p>\n<p>kill -9 1937</p>\n<h1 id=\"查看端口是否被占用\"><a href=\"#查看端口是否被占用\" class=\"headerlink\" title=\"查看端口是否被占用\"></a>查看端口是否被占用</h1><p><a href=\"http://www.cnblogs.com/ggjucheng/archive/2012/01/08/2316661.html\">参考文章</a></p>\n<h3 id=\"1-显示所有端口和所有对应的程序\"><a href=\"#1-显示所有端口和所有对应的程序\" class=\"headerlink\" title=\"1.显示所有端口和所有对应的程序\"></a>1.显示所有端口和所有对应的程序</h3><blockquote>\n<p>netstat -tunlp</p>\n</blockquote>\n<h3 id=\"2-用grep管道可以过滤出想要的关键字段。\"><a href=\"#2-用grep管道可以过滤出想要的关键字段。\" class=\"headerlink\" title=\"2.用grep管道可以过滤出想要的关键字段。\"></a>2.用grep管道可以过滤出想要的关键字段。</h3><blockquote>\n<p>netstat -tunlp |grep 5432</p>\n</blockquote>\n<p><em>参数</em><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">-a (all)显示所有选项，默认不显示LISTEN相关</div><div class=\"line\">-t (tcp)仅显示tcp相关选项</div><div class=\"line\">-u (udp)仅显示udp相关选项</div><div class=\"line\">-n 拒绝显示别名，能显示数字的全部转化成数字。</div><div class=\"line\">-l 仅列出有在 Listen (监听) 的服務状态</div><div class=\"line\"></div><div class=\"line\">-p 显示建立相关链接的程序名</div><div class=\"line\">-r 显示路由信息，路由表</div><div class=\"line\">-e 显示扩展信息，例如uid等</div><div class=\"line\">-s 按各个协议进行统计</div><div class=\"line\">-c 每隔一个固定时间，执行该netstat命令。</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-8b4c29d48645f4e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"测试\"></p>\n<h3 id=\"3-查看某一端口的占用情况：\"><a href=\"#3-查看某一端口的占用情况：\" class=\"headerlink\" title=\"3.查看某一端口的占用情况：\"></a>3.查看某一端口的占用情况：</h3><blockquote>\n<p>lsof -i:端口号</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-ff6376cd592a8a5d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"测试\"></p>\n<h1 id=\"tomcat\"><a href=\"#tomcat\" class=\"headerlink\" title=\"tomcat\"></a>tomcat</h1><p>修改端口为8088端口。<br><code>tomcat7/conf/server.xml</code> 文件里的：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8080\"</span> </div><div class=\"line\"><span class=\"attr\">protocol</span>=<span class=\"string\">\"HTTP/1.1\"</span>  <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">\"20000\"</span>  <span class=\"attr\">redirectPort</span>=<span class=\"string\">\"8443\"</span> /&gt;</span></div></pre></td></tr></table></figure></p>\n<p>将<code>port=&quot;8080&quot;</code>改为<code>port=&quot;8088&quot;</code>，保存。<br><strong> 如果想要添加远程访问的话，需要修改防火墙设置。修改方法参看下面防火墙部分</strong><br><code>-A INPUT -m state --state NEW -M tcp -p tcp --dport 8088 -j ACCEPT#开放tomcat端口</code></p>\n<p><strong>安装好后的启动和关闭方式：</strong></p>\n<blockquote>\n<p>sh /opt/apache-tomcat-8.0.23/bin/startup.sh<br>sh /opt/apache-tomcat-8.0.23/bin/shutdown.sh</p>\n</blockquote>\n<p>可以看出，路径太长，不好启动，所以将其设置成<strong>以服务方式启动</strong>，以后再启动就用⑥中的方式操作。<br>①. 在/etc/init.d目录下新建文件，命名为tomcat2. 对tomcat文件进行编辑，执行</p>\n<blockquote>\n<p>  cd /etc/init.d/<br> vi tomcat</p>\n</blockquote>\n<p>将下面代码粘上去<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\"># description: Tomcat7 Start Stop Restart</div><div class=\"line\"># processname: tomcat7</div><div class=\"line\"># chkconfig: 234 20 80</div><div class=\"line\"># JAVA_HOME要根据jdk的具体位置修改</div><div class=\"line\"></div><div class=\"line\">JAVA_HOME=/opt/jdk1.7.0_80</div><div class=\"line\">export JAVA_HOME</div><div class=\"line\">PATH=$JAVA_HOME/bin:$PATH</div><div class=\"line\">export PATH</div><div class=\"line\">CATALINA_HOME=/opt/apache-tomcat-8.0.23</div><div class=\"line\">case $1 in</div><div class=\"line\">start)</div><div class=\"line\">sh $CATALINA_HOME/bin/startup.sh</div><div class=\"line\">;;</div><div class=\"line\">stop)</div><div class=\"line\">sh $CATALINA_HOME/bin/shutdown.sh</div><div class=\"line\">;;</div><div class=\"line\">restart)</div><div class=\"line\">sh $CATALINA_HOME/bin/shutdown.sh</div><div class=\"line\">sh $CATALINA_HOME/bin/startup.sh</div><div class=\"line\">;;</div><div class=\"line\">esac</div><div class=\"line\">exit 0</div></pre></td></tr></table></figure></p>\n<p>②. 按ESC退出，并</p>\n<blockquote>\n<p>：wq</p>\n</blockquote>\n<p>③. 设置tomcat的文件属性，把tomcat 修改为可运行的文件，命令参考如下</p>\n<blockquote>\n<p>chmod a+x tomcat</p>\n</blockquote>\n<p>④. 添加服务</p>\n<blockquote>\n<p>chkconfig –add tomcat</p>\n</blockquote>\n<p>⑤. 服务就添加成功了<br>然后用 chkconfig –list 查看，在服务列表里就会出现自定义的服务了</p>\n<blockquote>\n<p> chkconfig –list</p>\n</blockquote>\n<p>⑥. 测试</p>\n<blockquote>\n<p>service tomcat start<br>service tomcat stop<br>service tomcat restart<br>service tomcat status</p>\n</blockquote>\n<h1 id=\"mysql\"><a href=\"#mysql\" class=\"headerlink\" title=\"mysql\"></a>mysql</h1><p>安装后需要更改初始密码（初始密码很复杂）</p>\n<blockquote>\n<p>grep ‘temporary password’ /var/log/mysqld.log</p>\n</blockquote>\n<p>看到密码后进入mysql修改密码</p>\n<blockquote>\n<p>mysql -uroot -p（回车后输入密码）</p>\n</blockquote>\n<p>进入后修改密码为123456</p>\n<blockquote>\n<p>mysql&gt; ALTER USER ‘root’@’localhost’ IDENTIFIED BY ‘123456’;</p>\n</blockquote>\n<p>默认只允许root帐户在本地登录，如果要在其它机器上连接mysql，必须修改root允许远程连接，或者添加一个允许远程连接的帐户，为了安全起见，添加一个新的帐户：</p>\n<blockquote>\n<p>mysql&gt; GRANT ALL PRIVILEGES ON <em>.</em> TO ‘look’@’%’ IDENTIFIED BY ‘123456’ WITH GRANT OPTION;</p>\n</blockquote>\n<p>修改防火墙设置（<em>参照“防火墙-更改防火墙配置”部分</em>）<br><code>-A INPUT -m state --state NEW -M tcp -p tcp --dport 3306 -j ACCEPT#开放mysql端口</code><br>启动mysql</p>\n<blockquote>\n<p>systemctl start mysqld</p>\n</blockquote>\n<p>或者</p>\n<blockquote>\n<p> service mysqld start</p>\n</blockquote>\n<p>关闭mysql</p>\n<blockquote>\n<p>systemctl stop mysqld</p>\n</blockquote>\n<p>或者</p>\n<blockquote>\n<p> service mysqld stop</p>\n</blockquote>\n<p>常用sql语句<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">进入</div><div class=\"line\">mysql -u root -p</div><div class=\"line\">创建数据库</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> <span class=\"keyword\">test</span>;</div><div class=\"line\"><span class=\"keyword\">use</span> <span class=\"keyword\">test</span>;</div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> a(</div><div class=\"line\"><span class=\"keyword\">id</span> <span class=\"built_in\">int</span>(<span class=\"number\">4</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\"><span class=\"keyword\">name</span> <span class=\"built_in\">varchar</span>(<span class=\"number\">10</span>),</div><div class=\"line\">primary ker(<span class=\"keyword\">id</span>)</div><div class=\"line\">) <span class=\"keyword\">default</span> <span class=\"keyword\">charset</span>=utf8;</div></pre></td></tr></table></figure></p>\n<h1 id=\"postgreSQL\"><a href=\"#postgreSQL\" class=\"headerlink\" title=\"postgreSQL\"></a>postgreSQL</h1><p><strong>常用命令</strong><br>启动</p>\n<blockquote>\n<p>systemctl start postgresql-9.5.service</p>\n</blockquote>\n<p>登录</p>\n<blockquote>\n<p>su - postgres<br>psql -U postgres</p>\n</blockquote>\n<p>安装过程<br>1.添加RPM    </p>\n<blockquote>\n<p>yum install <a href=\"https://download.postgresql.org/pub/repos/yum/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm\">https://download.postgresql.org/pub/repos/yum/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm</a></p>\n</blockquote>\n<p>2.安装PostgreSQL 9.5    </p>\n<blockquote>\n<p>yum install postgresql95-server postgresql95-contrib</p>\n</blockquote>\n<p>3.初始化数据库   </p>\n<blockquote>\n<p> /usr/pgsql-9.5/bin/postgresql95-setup initdb</p>\n</blockquote>\n<p>4.设置开机自启动(有时候没反应，但是继续向下还是可以进行)    </p>\n<blockquote>\n<p>systemctl enable postgresql-9.5.service</p>\n</blockquote>\n<p><strong>5.启动服务</strong></p>\n<blockquote>\n<p>systemctl start postgresql-9.5.service</p>\n</blockquote>\n<p>6.修改用户密码<br>切换用户，执行后提示符会变为 ‘-bash-4.2$’ </p>\n<blockquote>\n<p>su - postgres  </p>\n</blockquote>\n<p>登录数据库</p>\n<blockquote>\n<p>psql -U postgres</p>\n</blockquote>\n<p>输入 <code>ALTER USER postgres WITH PASSWORD &#39;123456&#39;</code>，设置用户<code>postgres</code>密码 <code>123456</code>  ，\\q  退出数据库</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-7d1a96228fbe6ba0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"></p>\n<p>7.开启远程访问   </p>\n<blockquote>\n<p>vi /var/lib/pgsql/9.5/data/postgresql.conf    </p>\n</blockquote>\n<p>修改<code>#listen_addresses = &#39;localhost&#39;</code>为 <code>listen_addresses=&#39;*&#39;</code> 当然，此处‘*’也可以改为任何你想开放的服务器IP</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-275cea19c66876b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"Paste_Image.png\"></p>\n<p>8.信任远程连接   </p>\n<blockquote>\n<p>vi /var/lib/pgsql/9.5/data/pg_hba.conf    </p>\n</blockquote>\n<p>修改如下内容，信任指定服务器连接<br><code># IPv4 local connections:</code><br><code>host    all            all      127.0.0.1/32      trust</code><br><code>host    all            all      192.168.1.155/32  trust</code></p>\n<p><strong>注：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">192.168.1.155是指定这个ip可以连接到postgreSQL</div><div class=\"line\">     32 -&gt; 192.168.1.155/32 表示必须是来自这个IP地址的访问才合法；</div><div class=\"line\">     24 -&gt; 192.168.1.0/24 表示只要来自192.168.1.0 ~ 192.168.1.255的都合法；</div><div class=\"line\">     16 -&gt; 192.168.0.0/16 表示只要来自192.168.0.0 ~ 192.168.255.255的都合法；</div><div class=\"line\">     8   -&gt; 192.0.0.0/16 表示只要来自192.0.0.0 ~ 192.255.255.255的都合法；</div><div class=\"line\">     0   -&gt; 0.0.0.0/0 表示全部IP地址都合法，/左边的IP地址随便了只要是合法的IP地址即可</div><div class=\"line\"></div><div class=\"line\">trust</div><div class=\"line\">无条件地允许联接。这个方法允许任何可以与PostgreSQL 数据库服务器联接的用户以他们期望的任意 PostgreSQL 数据库用户身份进行联接，而不需要口令。</div><div class=\"line\">reject</div><div class=\"line\">联接无条件拒绝。常用于从一个组中&quot;过滤&quot;某些主机。</div><div class=\"line\">md5</div><div class=\"line\">要求客户端提供一个 MD5 加密的口令进行认证。</div><div class=\"line\">crypt</div><div class=\"line\">要求客户端提供一个 crypt() 加密的口令用于认证。 7.2 以前的客户端只能支持 crypt。 对于 7.2 以及以后的客户端，我们建议使用 md5。</div><div class=\"line\">password</div><div class=\"line\">要求客户端提供一个未加密的口令进行认证。 因为口令是以明文形式在网络上传递的， 所以我们不应该在不安全的网络上使用这个方式。</div><div class=\"line\">krb4</div><div class=\"line\">用 Kerberos V4 认证用户。只有在进行 TCP/IP 联接的时候才能用。  （译注：Kerberos，&quot;克尔波洛斯&quot;，故希腊神话冥王哈得斯的多头看门狗。 Kerberos 是 MIT 开发出来的基与对称加密算法的认证协议和/或密钥交换方法。 其特点是需要两个不同用途的服务器，一个用于认证身份， 一个用于通道两端用户的密钥交换。同时 Kerberos 对网络时间同步要求比较高，以防止回放攻击，因此通常伴随 NTP 服务。）</div><div class=\"line\">krb5</div><div class=\"line\">用 Kerberos V5 认证用户。只有在进行 TCP/IP 联接的时候才能用。  （译注：Kerberos V5 是上面 V4 的改良，主要是不再依赖 DES 算法， 同时增加了一些新特性。）</div><div class=\"line\">ident</div><div class=\"line\">获取客户的操作系统名（对于 TCP/IP 联接，用户的身份是通过与运行在客户端上的 ident 服务器联接进行判断的，对于本地联接，它是从操作系统获取的。） 然后检查一下，看看用户是否允许以要求的数据库用户进行联接， 方法是参照在 ident 关键字后面声明的映射。 </div><div class=\"line\">pam</div><div class=\"line\">使用操作系统提供的可插入的认证模块服务 （Pluggable Authentication Modules） （PAM）来认证。</div></pre></td></tr></table></figure></p>\n<p>远程连接配置完成，由于系统原因，还需要在防火墙中打开相应的端口。<br>9.修改防火墙配置，加上（<em>参照“防火墙-更改防火墙配置”部分</em>）<br><code>-A INPUT -m state --state NEW -M tcp -p tcp --dport 5432 -j ACCEPT#开放postgreSQL端口</code></p>\n<p><strong>10. 重启PostgreSQL数据服务</strong></p>\n<blockquote>\n<p>systemctl restart postgresql-9.5.service</p>\n</blockquote>\n<h1 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h1><p>查询防火墙状态:</p>\n<blockquote>\n<p>[root@localhost ~]# service   iptables status&lt;回车&gt;</p>\n</blockquote>\n<p>停止防火墙:</p>\n<blockquote>\n<p>[root@localhost ~]# service   iptables stop &lt;回车&gt;</p>\n</blockquote>\n<p>启动防火墙:</p>\n<blockquote>\n<p>[root@localhost ~]# service   iptables start &lt;回车&gt;</p>\n</blockquote>\n<p>重启防火墙:</p>\n<blockquote>\n<p>[root@localhost ~]# service   iptables restart &lt;回车&gt;</p>\n</blockquote>\n<p>永久关闭防火墙:</p>\n<blockquote>\n<p>[root@localhost ~]# chkconfig   iptables off&lt;回车&gt;</p>\n</blockquote>\n<p>永久关闭后启用:</p>\n<blockquote>\n<p>[root@localhost ~]# chkconfig   iptables on&lt;回车&gt;</p>\n</blockquote>\n<p>更改防火墙配置</p>\n<blockquote>\n<p>vi /etc/sysconfig/iptables </p>\n</blockquote>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"># sample configuration for iptables service</div><div class=\"line\"># you can edit this manually or use system-config-firewall</div><div class=\"line\"># please do not ask us to add additional ports/services to this default \tconfiguration</div><div class=\"line\">*filter</div><div class=\"line\">:INPUT ACCEPT [0:0]</div><div class=\"line\">:FORWARD ACCEPT [0:0]</div><div class=\"line\">:OUTPUT ACCEPT [0:0]</div><div class=\"line\">-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</div><div class=\"line\">-A INPUT -p icmp -j ACCEPT</div><div class=\"line\">-A INPUT -i lo -j ACCEPT</div><div class=\"line\">-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT</div><div class=\"line\">-A INPUT -m state --state NEW -M tcp -p tcp --dport 8088 -j ACCEPT#开放tomcat端口</div><div class=\"line\">-A INPUT -m state --state NEW -M tcp -p tcp --dport 3306 -j ACCEPT#开放mysql端口</div><div class=\"line\">-A INPUT -m state --state NEW -M tcp -p tcp --dport 5432 -j ACCEPT#开放\tpostgreSQL端口</div><div class=\"line\">-A INPUT -j REJECT --reject-with icmp-host-prohibited</div><div class=\"line\">-A FORWARD -j REJECT --reject-with icmp-host-prohibited</div><div class=\"line\">COMMIT</div></pre></td></tr></table></figure>\n<p>#scp命令</p>\n<p>scp就是secure copy，一个在linux下用来进行远程拷贝文件的命令。</p>\n<p>有时我们需要获得远程服务器上的某个文件，该服务器既没有配置ftp服务器，也没有做共享，无法通过常规途径获得文件时，只需要通过简单的scp命令便可达到目的。</p>\n<h2 id=\"将本机文件复制到远程服务器上\"><a href=\"#将本机文件复制到远程服务器上\" class=\"headerlink\" title=\"将本机文件复制到远程服务器上\"></a>将本机文件复制到远程服务器上</h2><blockquote>\n<p>#scp /home/administrator/news.txt root@192.168.6.129:/etc/squid</p>\n</blockquote>\n<p>/home/administrator/      本地文件的绝对路径</p>\n<p>news.txt                          要复制到服务器上的本地文件</p>\n<p>root                                 通过root用户登录到远程服务器（也可以使用其他拥有同等权限的用户）</p>\n<p>192.168.6.129                远程服务器的ip地址（也可以使用域名或机器名）</p>\n<p>/etc/squid                       将本地文件复制到位于远程服务器上的路径</p>\n<h2 id=\"将远程服务器上的文件复制到本机\"><a href=\"#将远程服务器上的文件复制到本机\" class=\"headerlink\" title=\"将远程服务器上的文件复制到本机\"></a>将远程服务器上的文件复制到本机</h2><blockquote>\n<p>#scp remote@www.abc.com:/usr/local/sin.sh /home/administrator</p>\n</blockquote>\n<p>remote                       通过remote用户登录到远程服务器（也可以使用其他拥有同等权限的用户）</p>\n<p>www.abc.com              远程服务器的域名（当然也可以使用该服务器ip地址）</p>\n<p>/usr/local/sin.sh           欲复制到本机的位于远程服务器上的文件</p>\n<p>/home/administrator  将远程文件复制到本地的绝对路径</p>\n<p>注意两点：</p>\n<p>1.如果远程服务器防火墙有特殊限制，scp便要走特殊端口，具体用什么端口视情况而定，命令格式如下：</p>\n<blockquote>\n<p>#scp -p 4588 remote@www.abc.com:/usr/local/sin.sh /home/administrator</p>\n</blockquote>\n<p>2.使用scp要注意所使用的用户是否具有可读取远程服务器相应文件的权限。</p>"},{"title":"jsp传参方法小结","date":"2016-10-08T12:10:00.000Z","_content":"\n## jsp页面到jsp页面##\n\n1.从a.jsp传递\n\n   `<a href=\"b.jsp?test=aaa\"/>//将参数值为aaa，参数名test的参数传递到b.jsp页面中`\n\n2.在b.jsp接收\n\n    <% String info=request.getParameter(\"test\");\n       System.out.println(\"test的值是\"+test); %>\n <!-- more -->   \n## jsp页面到servlet##\n1.首先需要新建一个Servlet，包的层次结构如下：\n  >     demo\n  >     --src\n  >     ----servlet\n  >     ------test.java\n\n2.配置web.xml\n```xml\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"    xmlns=\"http://java.sun.com/xml/ns/javaee\" xsi:schemaLocation=\"http:// java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-      app_3_0.xsd\" version=\"3.0\">\n      <servlet>\n         <!--别名-->\n         <servlet-name>b</servlet-name>\n         <!--包名.类名-->\n         <servlet-class>servlet.test</servlet-class>\n      </servlet>\n    \n      <servlet-mapping>\n         <!--别名-->\n         <servlet-name>b</servlet-name>\n         <!--访问映射名-->\n         <url-pattern>/aa</url-pattern>\n      </servlet-mapping>\n    </web-app>   \n```\n> 注：\n> \n>  `1.<servlet></servlet>`\n> \n> &nbsp;&nbsp;在向servlet或JSP页面制定初始化参数或定制URL时，必须首先命名servlet或JSP页面。Servlet元素就是用来完成此项任务的。\n> \n> `2.<servlet-mapping></servlet-mapping>`\n> \n> &nbsp;&nbsp;服务器一般为servlet提供一个缺省的URL：`http://host/webAppPrefix/servlet/ServletName。`\n> \n>   但是，常常会更改这个URL，以便servlet可以访问初始化参数或更容易地处理相对URL。在更改缺省URL时，使用servlet-mapping元素。\n\n3.从a.jsp中传参\n\n `<a href=\"aa?test=123\"/>//将参数值为123，参数名test的参数传递到aa映射的servlet，即test.java中`\n\n4.在test.java中接收值\n\n       String info=request.getParameter(\"test\");\n       System.out.println(\"test的值是\"+test); \n    \n","source":"_posts/jsp传参方法小结.md","raw":"title: jsp传参方法小结\ncategories: Java\ntags: jsp\ndate: 2016-10-8 20:10\n---\n\n## jsp页面到jsp页面##\n\n1.从a.jsp传递\n\n   `<a href=\"b.jsp?test=aaa\"/>//将参数值为aaa，参数名test的参数传递到b.jsp页面中`\n\n2.在b.jsp接收\n\n    <% String info=request.getParameter(\"test\");\n       System.out.println(\"test的值是\"+test); %>\n <!-- more -->   \n## jsp页面到servlet##\n1.首先需要新建一个Servlet，包的层次结构如下：\n  >     demo\n  >     --src\n  >     ----servlet\n  >     ------test.java\n\n2.配置web.xml\n```xml\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"    xmlns=\"http://java.sun.com/xml/ns/javaee\" xsi:schemaLocation=\"http:// java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-      app_3_0.xsd\" version=\"3.0\">\n      <servlet>\n         <!--别名-->\n         <servlet-name>b</servlet-name>\n         <!--包名.类名-->\n         <servlet-class>servlet.test</servlet-class>\n      </servlet>\n    \n      <servlet-mapping>\n         <!--别名-->\n         <servlet-name>b</servlet-name>\n         <!--访问映射名-->\n         <url-pattern>/aa</url-pattern>\n      </servlet-mapping>\n    </web-app>   \n```\n> 注：\n> \n>  `1.<servlet></servlet>`\n> \n> &nbsp;&nbsp;在向servlet或JSP页面制定初始化参数或定制URL时，必须首先命名servlet或JSP页面。Servlet元素就是用来完成此项任务的。\n> \n> `2.<servlet-mapping></servlet-mapping>`\n> \n> &nbsp;&nbsp;服务器一般为servlet提供一个缺省的URL：`http://host/webAppPrefix/servlet/ServletName。`\n> \n>   但是，常常会更改这个URL，以便servlet可以访问初始化参数或更容易地处理相对URL。在更改缺省URL时，使用servlet-mapping元素。\n\n3.从a.jsp中传参\n\n `<a href=\"aa?test=123\"/>//将参数值为123，参数名test的参数传递到aa映射的servlet，即test.java中`\n\n4.在test.java中接收值\n\n       String info=request.getParameter(\"test\");\n       System.out.println(\"test的值是\"+test); \n    \n","slug":"jsp传参方法小结","published":1,"updated":"2017-04-22T01:23:33.379Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1u7zpni000399pv0zgc32wo","content":"<h2 id=\"jsp页面到jsp页面\"><a href=\"#jsp页面到jsp页面\" class=\"headerlink\" title=\"jsp页面到jsp页面\"></a>jsp页面到jsp页面</h2><p>1.从a.jsp传递</p>\n<p>   <code>&lt;a href=&quot;b.jsp?test=aaa&quot;/&gt;//将参数值为aaa，参数名test的参数传递到b.jsp页面中</code></p>\n<p>2.在b.jsp接收</p>\n<pre><code>&lt;% String info=request.getParameter(&quot;test&quot;);\n   System.out.println(&quot;test的值是&quot;+test); %&gt;\n</code></pre> <a id=\"more\"></a>   \n<h2 id=\"jsp页面到servlet\"><a href=\"#jsp页面到servlet\" class=\"headerlink\" title=\"jsp页面到servlet\"></a>jsp页面到servlet</h2><p>1.首先需要新建一个Servlet，包的层次结构如下：</p>\n<blockquote>\n<pre><code>demo\n--src\n----servlet\n------test.java\n</code></pre></blockquote>\n<p>2.配置web.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>    <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee\"</span> <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http:// java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-      app_3_0.xsd\"</span> <span class=\"attr\">version</span>=<span class=\"string\">\"3.0\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></div><div class=\"line\">     <span class=\"comment\">&lt;!--别名--&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>b<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></div><div class=\"line\">     <span class=\"comment\">&lt;!--包名.类名--&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>servlet.test<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></div><div class=\"line\">     <span class=\"comment\">&lt;!--别名--&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>b<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></div><div class=\"line\">     <span class=\"comment\">&lt;!--访问映射名--&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/aa<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>注：</p>\n<p> <code>1.&lt;servlet&gt;&lt;/servlet&gt;</code></p>\n<p>&nbsp;&nbsp;在向servlet或JSP页面制定初始化参数或定制URL时，必须首先命名servlet或JSP页面。Servlet元素就是用来完成此项任务的。</p>\n<p><code>2.&lt;servlet-mapping&gt;&lt;/servlet-mapping&gt;</code></p>\n<p>&nbsp;&nbsp;服务器一般为servlet提供一个缺省的URL：<code>http://host/webAppPrefix/servlet/ServletName。</code></p>\n<p>  但是，常常会更改这个URL，以便servlet可以访问初始化参数或更容易地处理相对URL。在更改缺省URL时，使用servlet-mapping元素。</p>\n</blockquote>\n<p>3.从a.jsp中传参</p>\n<p> <code>&lt;a href=&quot;aa?test=123&quot;/&gt;//将参数值为123，参数名test的参数传递到aa映射的servlet，即test.java中</code></p>\n<p>4.在test.java中接收值</p>\n<pre><code>String info=request.getParameter(&quot;test&quot;);\nSystem.out.println(&quot;test的值是&quot;+test); \n</code></pre>","site":{"data":{}},"excerpt":"<h2 id=\"jsp页面到jsp页面\"><a href=\"#jsp页面到jsp页面\" class=\"headerlink\" title=\"jsp页面到jsp页面\"></a>jsp页面到jsp页面</h2><p>1.从a.jsp传递</p>\n<p>   <code>&lt;a href=&quot;b.jsp?test=aaa&quot;/&gt;//将参数值为aaa，参数名test的参数传递到b.jsp页面中</code></p>\n<p>2.在b.jsp接收</p>\n<pre><code>&lt;% String info=request.getParameter(&quot;test&quot;);\n   System.out.println(&quot;test的值是&quot;+test); %&gt;\n</code></pre>","more":"<h2 id=\"jsp页面到servlet\"><a href=\"#jsp页面到servlet\" class=\"headerlink\" title=\"jsp页面到servlet\"></a>jsp页面到servlet</h2><p>1.首先需要新建一个Servlet，包的层次结构如下：</p>\n<blockquote>\n<pre><code>demo\n--src\n----servlet\n------test.java\n</code></pre></blockquote>\n<p>2.配置web.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span>    <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee\"</span> <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http:// java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-      app_3_0.xsd\"</span> <span class=\"attr\">version</span>=<span class=\"string\">\"3.0\"</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></div><div class=\"line\">     <span class=\"comment\">&lt;!--别名--&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>b<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></div><div class=\"line\">     <span class=\"comment\">&lt;!--包名.类名--&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>servlet.test<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></div><div class=\"line\">     <span class=\"comment\">&lt;!--别名--&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>b<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></div><div class=\"line\">     <span class=\"comment\">&lt;!--访问映射名--&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/aa<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>注：</p>\n<p> <code>1.&lt;servlet&gt;&lt;/servlet&gt;</code></p>\n<p>&nbsp;&nbsp;在向servlet或JSP页面制定初始化参数或定制URL时，必须首先命名servlet或JSP页面。Servlet元素就是用来完成此项任务的。</p>\n<p><code>2.&lt;servlet-mapping&gt;&lt;/servlet-mapping&gt;</code></p>\n<p>&nbsp;&nbsp;服务器一般为servlet提供一个缺省的URL：<code>http://host/webAppPrefix/servlet/ServletName。</code></p>\n<p>  但是，常常会更改这个URL，以便servlet可以访问初始化参数或更容易地处理相对URL。在更改缺省URL时，使用servlet-mapping元素。</p>\n</blockquote>\n<p>3.从a.jsp中传参</p>\n<p> <code>&lt;a href=&quot;aa?test=123&quot;/&gt;//将参数值为123，参数名test的参数传递到aa映射的servlet，即test.java中</code></p>\n<p>4.在test.java中接收值</p>\n<pre><code>String info=request.getParameter(&quot;test&quot;);\nSystem.out.println(&quot;test的值是&quot;+test); \n</code></pre>"},{"title":"jsp动态创建mysql数据表","date":"2017-02-10T16:00:00.000Z","_content":"\n\n以下是我自己想到的实现方法，如果读者有更好的方法实现，恳请指点。\n![指定.gif](http://upload-images.jianshu.io/upload_images/1837782-46aec85362e9486c.gif?imageMogr2/auto-orient/strip)\n\n<!-- more -->\n![数据表.gif](http://upload-images.jianshu.io/upload_images/1837782-cad4d456f859053f.gif?imageMogr2/auto-orient/strip)\n\n## 1.简单的jsp表单\n`index.jsp`获取希望创建的数据表名称和列数\n```java\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%>\n<%\n\tString path = request.getContextPath();\n\tString basePath = request.getScheme() + \"://\"\n\t\t\t+ request.getServerName() + \":\" + request.getServerPort()\n\t\t\t+ path + \"/\";\n%>\n\n<!DOCTYPE HTML>\n<html>\n<head>\n<base href=\"<%=basePath%>\">\n\n<title>动态创建数据表</title>\n<meta charset=\"utf-8\">\n\n</head>\n\n<body>\n\t<form action=\"createTableSlt\" method=\"post\">\n\t\t表名<input type=\"text\" name=\"tablename\" /><br> \n        列数<input type=\"number\" name=\"length\" /> <input type=\"submit\" value=\"提交\" />\n\t</form>\n</body>\n</html>\n\n```\n## 2.servlet\n### 2.1新建createTableSlt.java文件\n```java\npackage servlet;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport bean.Create;\n\npublic class createTableSlt extends HttpServlet {\n\tpublic createTableSlt() {\n\t\tsuper();\n\t}\n\n\tpublic void destroy() {\n\t\tsuper.destroy(); // Just puts \"destroy\" string in log\n\t\t// Put your code here\n\t}\n\n\tpublic void doGet(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows ServletException, IOException {\n\t\tdoPost(request, response);\n\t}\n\n\t/**\n\t * 获取传递来的数据表名和列数，调用创建数据表的方法\n\t * \n\t * @param request\n\t *            the request send by the client to the server\n\t * @param response\n\t *            the response send by the server to the client\n\t * @throws ServletException\n\t *             if an error occurred\n\t * @throws IOException\n\t *             if an error occurred\n\t */\n\tpublic void doPost(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows ServletException, IOException {\n\t\tresponse.setContentType(\"text/html\");\n\t\trequest.setCharacterEncoding(\"utf-8\");\n\t\tresponse.setCharacterEncoding(\"utf-8\");\n\t\tPrintWriter out = response.getWriter();\n\n        //以下是关键代码\n\t\tString tablename = request.getParameter(\"tablename\");\n\t\tint length = Integer.valueOf(request.getParameter(\"length\"));\n\t\tCreate.createTable(tablename, length);\n\n\t\tout.print(\"<!DOCTYPE html><html><body>成功</body></html>\");\n\t}\n\n\tpublic void init() throws ServletException {\n\t}\n\n}\n\n```\n### 2.2修改web.xml文件\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n\t<servlet>\n\t\t<servlet-name>createTableSlt</servlet-name>\n\t\t<servlet-class>servlet.createTableSlt</servlet-class>\n\t</servlet>\n\n\t<servlet-mapping>\n\t\t<servlet-name>createTableSlt</servlet-name>\n\t\t<url-pattern>/createTableSlt</url-pattern>\n\t</servlet-mapping>\n\n</web-app>\n```\n\n## 3.为了省事，bean与连接数据库合并在一个类里写了\n```java\npackage bean;\n\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\n\npublic class Create {\n\tstatic String user = \"root\";\n\tstatic String pw = \"123456\";\n    //数据库名为tables\n\tstatic String url = \"jdbc:mysql://localhost:3306/tables\";\n\n\t/**\n\t * 创建连接\n\t * \n\t * @return\n\t */\n\tpublic static Connection getConnection() {\n\t\tConnection connection = null;\n\t\ttry {\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tconnection = DriverManager.getConnection(url, user, pw);\n\t\t} catch (ClassNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (SQLException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn connection;\n\t}\n\n\t/**\n\t * 关闭连接\n\t * \n\t * @param connection\n\t */\n\tpublic static void close(Connection connection) {\n\t\ttry {\n\t\t\tconnection.close();\n\t\t} catch (SQLException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\t/**\n\t * 创建指定数据表名和属性总数的数据表\n\t * \n\t * @param tablename\n\t * @param length\n\t */\n\tpublic static void createTable(String tablename, int length) {\n\t\tConnection connection = getConnection();\n\t\tString sql = sql(tablename, length);\n\t\ttry {\n\t\t\tPreparedStatement psStatement = (PreparedStatement) connection\n\t\t\t\t\t.prepareStatement(sql);\n\t\t\tpsStatement.executeUpdate();\n\t\t} catch (SQLException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\t/**\n\t * 动态生成sql建表语句，数据表为指定名称、指定属性长度（属性类型为String，主键为自动增长的id）\n\t * \n\t * @param tablename\n\t * @param length\n\t * @return sql\n\t */\n\tpublic static String sql(String tablename, int length) {\n\t\tStringBuffer sql = new StringBuffer();\n\t\tsql.append(\"create table \" + tablename + \"(\");\n\t\tsql.append(\"id int(10) not null primary key auto_increment,\");\n\t\tString columns[] = columnsName(length);\n\t\tfor (int i = 0; i < columns.length; i++) {\n\t\t\tif (i == columns.length - 1) {\n\t\t\t\tsql.append(columns[i] + \" varchar(20) not null\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tsql.append(columns[i] + \" varchar(20) not null,\");\n\t\t}\n\t\tsql.append(\");\");\n\t\treturn sql.toString();\n\t}\n\n\t/**\n\t * 动态生成形如column_A形式的列名\n\t * \n\t * @param length\n\t * @return\n\t */\n\tpublic static String[] columnsName(int length) {\n\t\tString columnsName[] = new String[length];\n\t\tfor (int i = 0; i < length; i++) {\n\t\t\tchar a = (char) (65 + i);\n\t\t\tcolumnsName[i] = \"columns_\" + String.valueOf(a);\n\t\t}\n\t\treturn columnsName;\n\t}\n\n}\n\n\n```\n\n[源码](https://github.com/lukeaust/createTable.git)\n","source":"_posts/jsp动态创建mysql数据表.md","raw":"title: jsp动态创建mysql数据表\ncategories: JavaEE\ntags: \n- jsp\n- mysql\n- code\ndate: 2017-2-11\n---\n\n\n以下是我自己想到的实现方法，如果读者有更好的方法实现，恳请指点。\n![指定.gif](http://upload-images.jianshu.io/upload_images/1837782-46aec85362e9486c.gif?imageMogr2/auto-orient/strip)\n\n<!-- more -->\n![数据表.gif](http://upload-images.jianshu.io/upload_images/1837782-cad4d456f859053f.gif?imageMogr2/auto-orient/strip)\n\n## 1.简单的jsp表单\n`index.jsp`获取希望创建的数据表名称和列数\n```java\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%>\n<%\n\tString path = request.getContextPath();\n\tString basePath = request.getScheme() + \"://\"\n\t\t\t+ request.getServerName() + \":\" + request.getServerPort()\n\t\t\t+ path + \"/\";\n%>\n\n<!DOCTYPE HTML>\n<html>\n<head>\n<base href=\"<%=basePath%>\">\n\n<title>动态创建数据表</title>\n<meta charset=\"utf-8\">\n\n</head>\n\n<body>\n\t<form action=\"createTableSlt\" method=\"post\">\n\t\t表名<input type=\"text\" name=\"tablename\" /><br> \n        列数<input type=\"number\" name=\"length\" /> <input type=\"submit\" value=\"提交\" />\n\t</form>\n</body>\n</html>\n\n```\n## 2.servlet\n### 2.1新建createTableSlt.java文件\n```java\npackage servlet;\n\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport bean.Create;\n\npublic class createTableSlt extends HttpServlet {\n\tpublic createTableSlt() {\n\t\tsuper();\n\t}\n\n\tpublic void destroy() {\n\t\tsuper.destroy(); // Just puts \"destroy\" string in log\n\t\t// Put your code here\n\t}\n\n\tpublic void doGet(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows ServletException, IOException {\n\t\tdoPost(request, response);\n\t}\n\n\t/**\n\t * 获取传递来的数据表名和列数，调用创建数据表的方法\n\t * \n\t * @param request\n\t *            the request send by the client to the server\n\t * @param response\n\t *            the response send by the server to the client\n\t * @throws ServletException\n\t *             if an error occurred\n\t * @throws IOException\n\t *             if an error occurred\n\t */\n\tpublic void doPost(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows ServletException, IOException {\n\t\tresponse.setContentType(\"text/html\");\n\t\trequest.setCharacterEncoding(\"utf-8\");\n\t\tresponse.setCharacterEncoding(\"utf-8\");\n\t\tPrintWriter out = response.getWriter();\n\n        //以下是关键代码\n\t\tString tablename = request.getParameter(\"tablename\");\n\t\tint length = Integer.valueOf(request.getParameter(\"length\"));\n\t\tCreate.createTable(tablename, length);\n\n\t\tout.print(\"<!DOCTYPE html><html><body>成功</body></html>\");\n\t}\n\n\tpublic void init() throws ServletException {\n\t}\n\n}\n\n```\n### 2.2修改web.xml文件\n```java\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n\t<servlet>\n\t\t<servlet-name>createTableSlt</servlet-name>\n\t\t<servlet-class>servlet.createTableSlt</servlet-class>\n\t</servlet>\n\n\t<servlet-mapping>\n\t\t<servlet-name>createTableSlt</servlet-name>\n\t\t<url-pattern>/createTableSlt</url-pattern>\n\t</servlet-mapping>\n\n</web-app>\n```\n\n## 3.为了省事，bean与连接数据库合并在一个类里写了\n```java\npackage bean;\n\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\n\npublic class Create {\n\tstatic String user = \"root\";\n\tstatic String pw = \"123456\";\n    //数据库名为tables\n\tstatic String url = \"jdbc:mysql://localhost:3306/tables\";\n\n\t/**\n\t * 创建连接\n\t * \n\t * @return\n\t */\n\tpublic static Connection getConnection() {\n\t\tConnection connection = null;\n\t\ttry {\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\");\n\t\t\tconnection = DriverManager.getConnection(url, user, pw);\n\t\t} catch (ClassNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (SQLException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn connection;\n\t}\n\n\t/**\n\t * 关闭连接\n\t * \n\t * @param connection\n\t */\n\tpublic static void close(Connection connection) {\n\t\ttry {\n\t\t\tconnection.close();\n\t\t} catch (SQLException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\t/**\n\t * 创建指定数据表名和属性总数的数据表\n\t * \n\t * @param tablename\n\t * @param length\n\t */\n\tpublic static void createTable(String tablename, int length) {\n\t\tConnection connection = getConnection();\n\t\tString sql = sql(tablename, length);\n\t\ttry {\n\t\t\tPreparedStatement psStatement = (PreparedStatement) connection\n\t\t\t\t\t.prepareStatement(sql);\n\t\t\tpsStatement.executeUpdate();\n\t\t} catch (SQLException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\t/**\n\t * 动态生成sql建表语句，数据表为指定名称、指定属性长度（属性类型为String，主键为自动增长的id）\n\t * \n\t * @param tablename\n\t * @param length\n\t * @return sql\n\t */\n\tpublic static String sql(String tablename, int length) {\n\t\tStringBuffer sql = new StringBuffer();\n\t\tsql.append(\"create table \" + tablename + \"(\");\n\t\tsql.append(\"id int(10) not null primary key auto_increment,\");\n\t\tString columns[] = columnsName(length);\n\t\tfor (int i = 0; i < columns.length; i++) {\n\t\t\tif (i == columns.length - 1) {\n\t\t\t\tsql.append(columns[i] + \" varchar(20) not null\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tsql.append(columns[i] + \" varchar(20) not null,\");\n\t\t}\n\t\tsql.append(\");\");\n\t\treturn sql.toString();\n\t}\n\n\t/**\n\t * 动态生成形如column_A形式的列名\n\t * \n\t * @param length\n\t * @return\n\t */\n\tpublic static String[] columnsName(int length) {\n\t\tString columnsName[] = new String[length];\n\t\tfor (int i = 0; i < length; i++) {\n\t\t\tchar a = (char) (65 + i);\n\t\t\tcolumnsName[i] = \"columns_\" + String.valueOf(a);\n\t\t}\n\t\treturn columnsName;\n\t}\n\n}\n\n\n```\n\n[源码](https://github.com/lukeaust/createTable.git)\n","slug":"jsp动态创建mysql数据表","published":1,"updated":"2017-04-22T01:24:39.922Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1u7zpo1000799pvy1pe1yng","content":"<p>以下是我自己想到的实现方法，如果读者有更好的方法实现，恳请指点。<br><img src=\"http://upload-images.jianshu.io/upload_images/1837782-46aec85362e9486c.gif?imageMogr2/auto-orient/strip\" alt=\"指定.gif\"></p>\n<a id=\"more\"></a>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-cad4d456f859053f.gif?imageMogr2/auto-orient/strip\" alt=\"数据表.gif\"></p>\n<h2 id=\"1-简单的jsp表单\"><a href=\"#1-简单的jsp表单\" class=\"headerlink\" title=\"1.简单的jsp表单\"></a>1.简单的jsp表单</h2><p><code>index.jsp</code>获取希望创建的数据表名称和列数<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%&gt;</div><div class=\"line\">&lt;%</div><div class=\"line\">\tString path = request.getContextPath();</div><div class=\"line\">\tString basePath = request.getScheme() + \"://\"</div><div class=\"line\">\t\t\t+ request.getServerName() + \":\" + request.getServerPort()</div><div class=\"line\">\t\t\t+ path + \"/\";</div><div class=\"line\">%&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!DOCTYPE HTML&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;base href=\"&lt;%=basePath%&gt;\"&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;title&gt;动态创建数据表&lt;/title&gt;</div><div class=\"line\">&lt;meta charset=\"utf-8\"&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">\t&lt;form action=\"createTableSlt\" method=\"post\"&gt;</div><div class=\"line\">\t\t表名&lt;input type=\"text\" name=\"tablename\" /&gt;&lt;br&gt; </div><div class=\"line\">        列数&lt;input type=\"number\" name=\"length\" /&gt; &lt;input type=\"submit\" value=\"提交\" /&gt;</div><div class=\"line\">\t&lt;/form&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"2-servlet\"><a href=\"#2-servlet\" class=\"headerlink\" title=\"2.servlet\"></a>2.servlet</h2><h3 id=\"2-1新建createTableSlt-java文件\"><a href=\"#2-1新建createTableSlt-java文件\" class=\"headerlink\" title=\"2.1新建createTableSlt.java文件\"></a>2.1新建createTableSlt.java文件</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> servlet;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> bean.Create;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">createTableSlt</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">createTableSlt</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">destroy</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>.destroy(); <span class=\"comment\">// Just puts \"destroy\" string in log</span></div><div class=\"line\">\t\t<span class=\"comment\">// Put your code here</span></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span></span></div><div class=\"line\">\t\t\t<span class=\"keyword\">throws</span> ServletException, IOException &#123;</div><div class=\"line\">\t\tdoPost(request, response);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 获取传递来的数据表名和列数，调用创建数据表的方法</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> request</div><div class=\"line\">\t *            the request send by the client to the server</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> response</div><div class=\"line\">\t *            the response send by the server to the client</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> ServletException</div><div class=\"line\">\t *             if an error occurred</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> IOException</div><div class=\"line\">\t *             if an error occurred</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span></span></div><div class=\"line\">\t\t\t<span class=\"keyword\">throws</span> ServletException, IOException &#123;</div><div class=\"line\">\t\tresponse.setContentType(<span class=\"string\">\"text/html\"</span>);</div><div class=\"line\">\t\trequest.setCharacterEncoding(<span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">\t\tresponse.setCharacterEncoding(<span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">\t\tPrintWriter out = response.getWriter();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//以下是关键代码</span></div><div class=\"line\">\t\tString tablename = request.getParameter(<span class=\"string\">\"tablename\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> length = Integer.valueOf(request.getParameter(<span class=\"string\">\"length\"</span>));</div><div class=\"line\">\t\tCreate.createTable(tablename, length);</div><div class=\"line\"></div><div class=\"line\">\t\tout.print(<span class=\"string\">\"&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;成功&lt;/body&gt;&lt;/html&gt;\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> ServletException </span>&#123;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"2-2修改web-xml文件\"><a href=\"#2-2修改web-xml文件\" class=\"headerlink\" title=\"2.2修改web.xml文件\"></a>2.2修改web.xml文件</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\">&lt;web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"</div><div class=\"line\">\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"</div><div class=\"line\">\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"&gt;</div><div class=\"line\">\t&lt;servlet&gt;</div><div class=\"line\">\t\t&lt;servlet-name&gt;createTableSlt&lt;/servlet-name&gt;</div><div class=\"line\">\t\t&lt;servlet-class&gt;servlet.createTableSlt&lt;/servlet-class&gt;</div><div class=\"line\">\t&lt;/servlet&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;servlet-mapping&gt;</div><div class=\"line\">\t\t&lt;servlet-name&gt;createTableSlt&lt;/servlet-name&gt;</div><div class=\"line\">\t\t&lt;url-pattern&gt;/createTableSlt&lt;/url-pattern&gt;</div><div class=\"line\">\t&lt;/servlet-mapping&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/web-app&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"3-为了省事，bean与连接数据库合并在一个类里写了\"><a href=\"#3-为了省事，bean与连接数据库合并在一个类里写了\" class=\"headerlink\" title=\"3.为了省事，bean与连接数据库合并在一个类里写了\"></a>3.为了省事，bean与连接数据库合并在一个类里写了</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> bean;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.DriverManager;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Create</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">static</span> String user = <span class=\"string\">\"root\"</span>;</div><div class=\"line\">\t<span class=\"keyword\">static</span> String pw = <span class=\"string\">\"123456\"</span>;</div><div class=\"line\">    <span class=\"comment\">//数据库名为tables</span></div><div class=\"line\">\t<span class=\"keyword\">static</span> String url = <span class=\"string\">\"jdbc:mysql://localhost:3306/tables\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 创建连接</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConnection</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tConnection connection = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tClass.forName(<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>);</div><div class=\"line\">\t\t\tconnection = DriverManager.getConnection(url, user, pw);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> connection;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 关闭连接</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> connection</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">(Connection connection)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tconnection.close();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 创建指定数据表名和属性总数的数据表</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> tablename</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> length</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">createTable</span><span class=\"params\">(String tablename, <span class=\"keyword\">int</span> length)</span> </span>&#123;</div><div class=\"line\">\t\tConnection connection = getConnection();</div><div class=\"line\">\t\tString sql = sql(tablename, length);</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tPreparedStatement psStatement = (PreparedStatement) connection</div><div class=\"line\">\t\t\t\t\t.prepareStatement(sql);</div><div class=\"line\">\t\t\tpsStatement.executeUpdate();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 动态生成sql建表语句，数据表为指定名称、指定属性长度（属性类型为String，主键为自动增长的id）</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> tablename</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> length</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> sql</div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">sql</span><span class=\"params\">(String tablename, <span class=\"keyword\">int</span> length)</span> </span>&#123;</div><div class=\"line\">\t\tStringBuffer sql = <span class=\"keyword\">new</span> StringBuffer();</div><div class=\"line\">\t\tsql.append(<span class=\"string\">\"create table \"</span> + tablename + <span class=\"string\">\"(\"</span>);</div><div class=\"line\">\t\tsql.append(<span class=\"string\">\"id int(10) not null primary key auto_increment,\"</span>);</div><div class=\"line\">\t\tString columns[] = columnsName(length);</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; columns.length; i++) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (i == columns.length - <span class=\"number\">1</span>) &#123;</div><div class=\"line\">\t\t\t\tsql.append(columns[i] + <span class=\"string\">\" varchar(20) not null\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tsql.append(columns[i] + <span class=\"string\">\" varchar(20) not null,\"</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tsql.append(<span class=\"string\">\");\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> sql.toString();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</span></div><div class=\"line\">\t * 动态生成形如column_A形式的列名</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> length</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String[] columnsName(<span class=\"keyword\">int</span> length) &#123;</div><div class=\"line\">\t\tString columnsName[] = <span class=\"keyword\">new</span> String[length];</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">char</span> a = (<span class=\"keyword\">char</span>) (<span class=\"number\">65</span> + i);</div><div class=\"line\">\t\t\tcolumnsName[i] = <span class=\"string\">\"columns_\"</span> + String.valueOf(a);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> columnsName;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/lukeaust/createTable.git\" target=\"_blank\" rel=\"external\">源码</a></p>\n","site":{"data":{}},"excerpt":"<p>以下是我自己想到的实现方法，如果读者有更好的方法实现，恳请指点。<br><img src=\"http://upload-images.jianshu.io/upload_images/1837782-46aec85362e9486c.gif?imageMogr2/auto-orient/strip\" alt=\"指定.gif\"></p>","more":"<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-cad4d456f859053f.gif?imageMogr2/auto-orient/strip\" alt=\"数据表.gif\"></p>\n<h2 id=\"1-简单的jsp表单\"><a href=\"#1-简单的jsp表单\" class=\"headerlink\" title=\"1.简单的jsp表单\"></a>1.简单的jsp表单</h2><p><code>index.jsp</code>获取希望创建的数据表名称和列数<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%&gt;</div><div class=\"line\">&lt;%</div><div class=\"line\">\tString path = request.getContextPath();</div><div class=\"line\">\tString basePath = request.getScheme() + \"://\"</div><div class=\"line\">\t\t\t+ request.getServerName() + \":\" + request.getServerPort()</div><div class=\"line\">\t\t\t+ path + \"/\";</div><div class=\"line\">%&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!DOCTYPE HTML&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;base href=\"&lt;%=basePath%&gt;\"&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;title&gt;动态创建数据表&lt;/title&gt;</div><div class=\"line\">&lt;meta charset=\"utf-8\"&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">\t&lt;form action=\"createTableSlt\" method=\"post\"&gt;</div><div class=\"line\">\t\t表名&lt;input type=\"text\" name=\"tablename\" /&gt;&lt;br&gt; </div><div class=\"line\">        列数&lt;input type=\"number\" name=\"length\" /&gt; &lt;input type=\"submit\" value=\"提交\" /&gt;</div><div class=\"line\">\t&lt;/form&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"2-servlet\"><a href=\"#2-servlet\" class=\"headerlink\" title=\"2.servlet\"></a>2.servlet</h2><h3 id=\"2-1新建createTableSlt-java文件\"><a href=\"#2-1新建createTableSlt-java文件\" class=\"headerlink\" title=\"2.1新建createTableSlt.java文件\"></a>2.1新建createTableSlt.java文件</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> servlet;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> bean.Create;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">createTableSlt</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">createTableSlt</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">destroy</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">super</span>.destroy(); <span class=\"comment\">// Just puts \"destroy\" string in log</span></div><div class=\"line\">\t\t<span class=\"comment\">// Put your code here</span></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</div><div class=\"line\">\t\tdoPost(request, response);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 获取传递来的数据表名和列数，调用创建数据表的方法</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> request</div><div class=\"line\">\t *            the request send by the client to the server</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> response</div><div class=\"line\">\t *            the response send by the server to the client</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> ServletException</div><div class=\"line\">\t *             if an error occurred</div><div class=\"line\">\t * <span class=\"doctag\">@throws</span> IOException</div><div class=\"line\">\t *             if an error occurred</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</div><div class=\"line\">\t\tresponse.setContentType(<span class=\"string\">\"text/html\"</span>);</div><div class=\"line\">\t\trequest.setCharacterEncoding(<span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">\t\tresponse.setCharacterEncoding(<span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">\t\tPrintWriter out = response.getWriter();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//以下是关键代码</span></div><div class=\"line\">\t\tString tablename = request.getParameter(<span class=\"string\">\"tablename\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> length = Integer.valueOf(request.getParameter(<span class=\"string\">\"length\"</span>));</div><div class=\"line\">\t\tCreate.createTable(tablename, length);</div><div class=\"line\"></div><div class=\"line\">\t\tout.print(<span class=\"string\">\"&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;成功&lt;/body&gt;&lt;/html&gt;\"</span>);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> ServletException </span>&#123;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"2-2修改web-xml文件\"><a href=\"#2-2修改web-xml文件\" class=\"headerlink\" title=\"2.2修改web.xml文件\"></a>2.2修改web.xml文件</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\">&lt;web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"</div><div class=\"line\">\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"</div><div class=\"line\">\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"&gt;</div><div class=\"line\">\t&lt;servlet&gt;</div><div class=\"line\">\t\t&lt;servlet-name&gt;createTableSlt&lt;/servlet-name&gt;</div><div class=\"line\">\t\t&lt;servlet-class&gt;servlet.createTableSlt&lt;/servlet-class&gt;</div><div class=\"line\">\t&lt;/servlet&gt;</div><div class=\"line\"></div><div class=\"line\">\t&lt;servlet-mapping&gt;</div><div class=\"line\">\t\t&lt;servlet-name&gt;createTableSlt&lt;/servlet-name&gt;</div><div class=\"line\">\t\t&lt;url-pattern&gt;/createTableSlt&lt;/url-pattern&gt;</div><div class=\"line\">\t&lt;/servlet-mapping&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/web-app&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"3-为了省事，bean与连接数据库合并在一个类里写了\"><a href=\"#3-为了省事，bean与连接数据库合并在一个类里写了\" class=\"headerlink\" title=\"3.为了省事，bean与连接数据库合并在一个类里写了\"></a>3.为了省事，bean与连接数据库合并在一个类里写了</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> bean;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.Connection;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.DriverManager;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.PreparedStatement;</div><div class=\"line\"><span class=\"keyword\">import</span> java.sql.SQLException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Create</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">static</span> String user = <span class=\"string\">\"root\"</span>;</div><div class=\"line\">\t<span class=\"keyword\">static</span> String pw = <span class=\"string\">\"123456\"</span>;</div><div class=\"line\">    <span class=\"comment\">//数据库名为tables</span></div><div class=\"line\">\t<span class=\"keyword\">static</span> String url = <span class=\"string\">\"jdbc:mysql://localhost:3306/tables\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 创建连接</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Connection <span class=\"title\">getConnection</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\tConnection connection = <span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tClass.forName(<span class=\"string\">\"com.mysql.jdbc.Driver\"</span>);</div><div class=\"line\">\t\t\tconnection = DriverManager.getConnection(url, user, pw);</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> connection;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 关闭连接</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> connection</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">close</span><span class=\"params\">(Connection connection)</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tconnection.close();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 创建指定数据表名和属性总数的数据表</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> tablename</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> length</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">createTable</span><span class=\"params\">(String tablename, <span class=\"keyword\">int</span> length)</span> </span>&#123;</div><div class=\"line\">\t\tConnection connection = getConnection();</div><div class=\"line\">\t\tString sql = sql(tablename, length);</div><div class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\t\tPreparedStatement psStatement = (PreparedStatement) connection</div><div class=\"line\">\t\t\t\t\t.prepareStatement(sql);</div><div class=\"line\">\t\t\tpsStatement.executeUpdate();</div><div class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</div><div class=\"line\">\t\t\te.printStackTrace();</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 动态生成sql建表语句，数据表为指定名称、指定属性长度（属性类型为String，主键为自动增长的id）</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> tablename</div><div class=\"line\">\t * <span class=\"doctag\">@param</span> length</div><div class=\"line\">\t * <span class=\"doctag\">@return</span> sql</div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">sql</span><span class=\"params\">(String tablename, <span class=\"keyword\">int</span> length)</span> </span>&#123;</div><div class=\"line\">\t\tStringBuffer sql = <span class=\"keyword\">new</span> StringBuffer();</div><div class=\"line\">\t\tsql.append(<span class=\"string\">\"create table \"</span> + tablename + <span class=\"string\">\"(\"</span>);</div><div class=\"line\">\t\tsql.append(<span class=\"string\">\"id int(10) not null primary key auto_increment,\"</span>);</div><div class=\"line\">\t\tString columns[] = columnsName(length);</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; columns.length; i++) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (i == columns.length - <span class=\"number\">1</span>) &#123;</div><div class=\"line\">\t\t\t\tsql.append(columns[i] + <span class=\"string\">\" varchar(20) not null\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\tsql.append(columns[i] + <span class=\"string\">\" varchar(20) not null,\"</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tsql.append(<span class=\"string\">\");\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> sql.toString();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">/**</div><div class=\"line\">\t * 动态生成形如column_A形式的列名</div><div class=\"line\">\t * </div><div class=\"line\">\t * <span class=\"doctag\">@param</span> length</div><div class=\"line\">\t * <span class=\"doctag\">@return</span></div><div class=\"line\">\t */</span></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String[] columnsName(<span class=\"keyword\">int</span> length) &#123;</div><div class=\"line\">\t\tString columnsName[] = <span class=\"keyword\">new</span> String[length];</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">char</span> a = (<span class=\"keyword\">char</span>) (<span class=\"number\">65</span> + i);</div><div class=\"line\">\t\t\tcolumnsName[i] = <span class=\"string\">\"columns_\"</span> + String.valueOf(a);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> columnsName;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/lukeaust/createTable.git\">源码</a></p>"},{"title":"jsp页面下载文件","date":"2016-10-25T11:40:00.000Z","_content":"\n\n目标：将文件放在某路径下（如D:/src.zip），在网页中点击超链接下载文件。\n\n\n![演示.gif](http://upload-images.jianshu.io/upload_images/1837782-732ba175902294f2.gif?imageMogr2/auto-orient/strip)\n<!-- more -->\n准备文件：\n> 1、index.jsp\n> 2、download.jsp\n> 3、待下载文件：“src.zip”(路径为D:/src.zip)\n> 4、程序结构\n![程序结构.png](http://upload-images.jianshu.io/upload_images/1837782-9b514b5f7e9af8de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n- `index.jsp`\n\n\n     <%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%>\n    \n    <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n    <html>\n      <head>\n              <title>首页</title>\n      </head>\n      <body>\n              <a href=\"download.jsp\">点击下载</a>\n      </body>\n    </html>\n  \n  - `download.jsp`\n\n\n    <%@page language=\"java\" contentType=\"application/x-msdownload\"\n        pageEncoding=\"gb2312\"%>\n    <%\n        String filename = \"src.zip\";\n        String filepath = \"D:\";\n        response.setContentType(\"APPLICATION/OCTET-STREAM\");\n        response.setHeader(\"Content-Disposition\", \"attachment; filename=\\\"\"\n                + filename + \"\\\"\");\n    \n        java.io.FileInputStream fileInputStream = new java.io.FileInputStream(\n                filepath + filename);\n    \n        int i;\n        while ((i = fileInputStream.read()) != -1) {\n            out.write(i);\n        }\n        fileInputStream.close();\n    %>\n    \n注：index.jsp文件很灵活，超链接可以替换为按钮等等；待下载文件可以多样化，压缩包、jsp文件、图片等等各种文件都可以。\n","source":"_posts/jsp页面下载文件.md","raw":"title: jsp页面下载文件\ncategories: JavaEE\ntags: jsp\ndate: 2016-10-25 19:40\n---\n\n\n目标：将文件放在某路径下（如D:/src.zip），在网页中点击超链接下载文件。\n\n\n![演示.gif](http://upload-images.jianshu.io/upload_images/1837782-732ba175902294f2.gif?imageMogr2/auto-orient/strip)\n<!-- more -->\n准备文件：\n> 1、index.jsp\n> 2、download.jsp\n> 3、待下载文件：“src.zip”(路径为D:/src.zip)\n> 4、程序结构\n![程序结构.png](http://upload-images.jianshu.io/upload_images/1837782-9b514b5f7e9af8de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n- `index.jsp`\n\n\n     <%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"UTF-8\"%>\n    \n    <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n    <html>\n      <head>\n              <title>首页</title>\n      </head>\n      <body>\n              <a href=\"download.jsp\">点击下载</a>\n      </body>\n    </html>\n  \n  - `download.jsp`\n\n\n    <%@page language=\"java\" contentType=\"application/x-msdownload\"\n        pageEncoding=\"gb2312\"%>\n    <%\n        String filename = \"src.zip\";\n        String filepath = \"D:\";\n        response.setContentType(\"APPLICATION/OCTET-STREAM\");\n        response.setHeader(\"Content-Disposition\", \"attachment; filename=\\\"\"\n                + filename + \"\\\"\");\n    \n        java.io.FileInputStream fileInputStream = new java.io.FileInputStream(\n                filepath + filename);\n    \n        int i;\n        while ((i = fileInputStream.read()) != -1) {\n            out.write(i);\n        }\n        fileInputStream.close();\n    %>\n    \n注：index.jsp文件很灵活，超链接可以替换为按钮等等；待下载文件可以多样化，压缩包、jsp文件、图片等等各种文件都可以。\n","slug":"jsp页面下载文件","published":1,"updated":"2017-04-22T01:25:16.454Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1u7zpod000999pv44sq84o7","content":"<p>目标：将文件放在某路径下（如D:/src.zip），在网页中点击超链接下载文件。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-732ba175902294f2.gif?imageMogr2/auto-orient/strip\" alt=\"演示.gif\"><br><a id=\"more\"></a><br>准备文件：</p>\n<blockquote>\n<p>1、index.jsp<br>2、download.jsp<br>3、待下载文件：“src.zip”(路径为D:/src.zip)<br>4、程序结构<br><img src=\"http://upload-images.jianshu.io/upload_images/1837782-9b514b5f7e9af8de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"程序结构.png\"></p>\n</blockquote>\n<ul>\n<li><code>index.jsp</code></li>\n</ul>\n<pre><code> &lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt;\n\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n  &lt;head&gt;\n          &lt;title&gt;首页&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n          &lt;a href=&quot;download.jsp&quot;&gt;点击下载&lt;/a&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><ul>\n<li><code>download.jsp</code></li>\n</ul>\n<pre><code>&lt;%@page language=&quot;java&quot; contentType=&quot;application/x-msdownload&quot;\n    pageEncoding=&quot;gb2312&quot;%&gt;\n&lt;%\n    String filename = &quot;src.zip&quot;;\n    String filepath = &quot;D:&quot;;\n    response.setContentType(&quot;APPLICATION/OCTET-STREAM&quot;);\n    response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment; filename=\\&quot;&quot;\n            + filename + &quot;\\&quot;&quot;);\n\n    java.io.FileInputStream fileInputStream = new java.io.FileInputStream(\n            filepath + filename);\n\n    int i;\n    while ((i = fileInputStream.read()) != -1) {\n        out.write(i);\n    }\n    fileInputStream.close();\n%&gt;\n</code></pre><p>注：index.jsp文件很灵活，超链接可以替换为按钮等等；待下载文件可以多样化，压缩包、jsp文件、图片等等各种文件都可以。</p>\n","site":{"data":{}},"excerpt":"<p>目标：将文件放在某路径下（如D:/src.zip），在网页中点击超链接下载文件。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-732ba175902294f2.gif?imageMogr2/auto-orient/strip\" alt=\"演示.gif\"><br>","more":"<br>准备文件：</p>\n<blockquote>\n<p>1、index.jsp<br>2、download.jsp<br>3、待下载文件：“src.zip”(路径为D:/src.zip)<br>4、程序结构<br><img src=\"http://upload-images.jianshu.io/upload_images/1837782-9b514b5f7e9af8de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"程序结构.png\"></p>\n</blockquote>\n<ul>\n<li><code>index.jsp</code></li>\n</ul>\n<pre><code> &lt;%@ page language=&quot;java&quot; import=&quot;java.util.*&quot; pageEncoding=&quot;UTF-8&quot;%&gt;\n\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n  &lt;head&gt;\n          &lt;title&gt;首页&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n          &lt;a href=&quot;download.jsp&quot;&gt;点击下载&lt;/a&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><ul>\n<li><code>download.jsp</code></li>\n</ul>\n<pre><code>&lt;%@page language=&quot;java&quot; contentType=&quot;application/x-msdownload&quot;\n    pageEncoding=&quot;gb2312&quot;%&gt;\n&lt;%\n    String filename = &quot;src.zip&quot;;\n    String filepath = &quot;D:&quot;;\n    response.setContentType(&quot;APPLICATION/OCTET-STREAM&quot;);\n    response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment; filename=\\&quot;&quot;\n            + filename + &quot;\\&quot;&quot;);\n\n    java.io.FileInputStream fileInputStream = new java.io.FileInputStream(\n            filepath + filename);\n\n    int i;\n    while ((i = fileInputStream.read()) != -1) {\n        out.write(i);\n    }\n    fileInputStream.close();\n%&gt;\n</code></pre><p>注：index.jsp文件很灵活，超链接可以替换为按钮等等；待下载文件可以多样化，压缩包、jsp文件、图片等等各种文件都可以。</p>"},{"title":"ubuntu下php环境搭建","date":"2016-12-13T16:00:00.000Z","_content":"\n将要安装的软件：\nApache+mysql+php（+phpMyAdmin用于管理数据库）  \n<!-- more -->\n# 1.安装 Apache\n ## （1）安装apache命令\n   >  sudo apt-get install apache\n\n## (2)测试 Apache安装是否成功\n\n浏览器输入[http://localhost/](http://localhost/)，如果成功：\n![安装成功](http://upload-images.jianshu.io/upload_images/1837782-2ffbfc73feb0c6e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n # 2.安装 PHP\n [关于Ubuntu16.04不能安装libapache2-mod-php5](http://www.linuxdiyf.com/linux/20550.html)\n>  ubuntu16.04已经选择PHP7.0作为新的基础包了，所以不能再Ubuntu16.04上安装PHP5，如果硬要安装，则会出现依赖问题，而且一般无法解决：\n比如，Ubuntu16.04上的软件需要的是一个较高版本的库，而PHP5需要的是一个较低版本的库，系统会提示：libapache2-mod-php5依赖于某某库，但该库不能被安装。因为php5基于较低版本的库文件，如果安装的话有其他软件将不能运行。\n故，推荐安装PHP7.0，并且用“libapache2-mod-php”代替“libapache2-mod-php5”。\n最后，如果阁下非要使用PHP5，那就只好回到Ubuntu14.04LTC（推荐）了！\n\n简言之\n *  (1)命令行安装php7\n> sudo apt-get install php7\nsudo apt-get libapache2-mod-php\n\n*  (2)重启一下apache\n\n > sudo /etc/init.d/apache2 restart\n\n* (3)准备一个测试文件`first.php`放在`/var/www/html/`目录下,内容为\n`<?php phpinfo();?>`\n\n* (4)测试php文件是否能被解析。在浏览器输入\n> localhost/first.php\n\n到这一步，我不能正常访问，出现了404错误，非常感谢[http://blog.csdn.net/hitabc141592/article/details/23556079](http://blog.csdn.net/hitabc141592/article/details/23556079)这篇文章。\n将这两个文件链接到mods-enabled目录下：\n\n > sudo ln -s /etc/apache2/mods-available/php7.0.load /etc/apache2/mods-enabled/php7.load\n > sudo ln -s /etc/apache2/mods-available/php7.0.conf /etc/apache2/mods-enabled/php.conf\n\n注：`/etc/apache2/mods-available/php7.0.load`是文件路径，可以沿着路径打开去看看，`/etc/apache2/mods-enabled/php7.load`是链接到的路径。意思就是将这两个文件加入apache配置中。\n* (5)准备的php文件为什么放在`/var/www/html/`下面？\n查看apache配置文件就清楚了，apache2的默认目录配置在/etc/apache2/sites-enabled/00default文件中，里面有一句\n```\nDocumentRoot /var/www/html\n```\n说明这个目录(`/var/www/html/`)是默认开发目录。\n#  3.安装mysql\n> sudo apt-get install mysql-server\n\n 设置用户root及密码。\n  # 4.更改`/var/www/html/`的权限\n> sudo chmod 777 /var/www/html\n\n 注：我是运行`sudo nautilus`，以管理员身份打开文件夹，直接更改了这个文件的属性中的权限。\n   #  5.安装phpMyAdmin，用于管理mysql，属于mysql的可视化界面。\n## （1）安装\n  > sudo apt-get install phpmyadmin\n\n   这里需要输入root用户的密码（两次）。\n ##（2）把`phpmyadmin中`的`apache.conf`（apache配置文件）复制到`apache2/sites-available`下的`phpmyadmin`文件下。\n > cp /etc/phpmyadmin/apache.conf /etc/apache2/sites-available/phpmyadmin\n\n ##（3）创建phpMyAdmin链接。\n  > sudo ln -s /usr/share/phpmyadmin /var/www/html/\n\n 输入`localhost/phpmyadmin/`,成功访问。\n![phpMyAdmin首页](http://upload-images.jianshu.io/upload_images/1837782-05b9901c8976707f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n```\n*****************如果失败了，继续4,5,6步，成功的话就可以结束了。*****************\n```\n ## （4）接着输入，进入sites-enabled文件夹下：\n  > cd /etc/apache2/sites-enabled/ \n\n ##（5）进入之后，要建立一个通往配置文件的链接以便能利用它。\n > sudo ln -s ../sites-available/phpmyadmin\n\n ##（6）重启apache2\n > sudo /etc/init.d/apache2 restart\n\n\n \n\n\n\n\n\n\n\n\n\n\n","source":"_posts/ubuntu下php环境搭建.md","raw":"title: ubuntu下php环境搭建\ncategories: Linux\ntags: ubuntu\ndate: 2016-12-14 00:00\n---\n\n将要安装的软件：\nApache+mysql+php（+phpMyAdmin用于管理数据库）  \n<!-- more -->\n# 1.安装 Apache\n ## （1）安装apache命令\n   >  sudo apt-get install apache\n\n## (2)测试 Apache安装是否成功\n\n浏览器输入[http://localhost/](http://localhost/)，如果成功：\n![安装成功](http://upload-images.jianshu.io/upload_images/1837782-2ffbfc73feb0c6e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n # 2.安装 PHP\n [关于Ubuntu16.04不能安装libapache2-mod-php5](http://www.linuxdiyf.com/linux/20550.html)\n>  ubuntu16.04已经选择PHP7.0作为新的基础包了，所以不能再Ubuntu16.04上安装PHP5，如果硬要安装，则会出现依赖问题，而且一般无法解决：\n比如，Ubuntu16.04上的软件需要的是一个较高版本的库，而PHP5需要的是一个较低版本的库，系统会提示：libapache2-mod-php5依赖于某某库，但该库不能被安装。因为php5基于较低版本的库文件，如果安装的话有其他软件将不能运行。\n故，推荐安装PHP7.0，并且用“libapache2-mod-php”代替“libapache2-mod-php5”。\n最后，如果阁下非要使用PHP5，那就只好回到Ubuntu14.04LTC（推荐）了！\n\n简言之\n *  (1)命令行安装php7\n> sudo apt-get install php7\nsudo apt-get libapache2-mod-php\n\n*  (2)重启一下apache\n\n > sudo /etc/init.d/apache2 restart\n\n* (3)准备一个测试文件`first.php`放在`/var/www/html/`目录下,内容为\n`<?php phpinfo();?>`\n\n* (4)测试php文件是否能被解析。在浏览器输入\n> localhost/first.php\n\n到这一步，我不能正常访问，出现了404错误，非常感谢[http://blog.csdn.net/hitabc141592/article/details/23556079](http://blog.csdn.net/hitabc141592/article/details/23556079)这篇文章。\n将这两个文件链接到mods-enabled目录下：\n\n > sudo ln -s /etc/apache2/mods-available/php7.0.load /etc/apache2/mods-enabled/php7.load\n > sudo ln -s /etc/apache2/mods-available/php7.0.conf /etc/apache2/mods-enabled/php.conf\n\n注：`/etc/apache2/mods-available/php7.0.load`是文件路径，可以沿着路径打开去看看，`/etc/apache2/mods-enabled/php7.load`是链接到的路径。意思就是将这两个文件加入apache配置中。\n* (5)准备的php文件为什么放在`/var/www/html/`下面？\n查看apache配置文件就清楚了，apache2的默认目录配置在/etc/apache2/sites-enabled/00default文件中，里面有一句\n```\nDocumentRoot /var/www/html\n```\n说明这个目录(`/var/www/html/`)是默认开发目录。\n#  3.安装mysql\n> sudo apt-get install mysql-server\n\n 设置用户root及密码。\n  # 4.更改`/var/www/html/`的权限\n> sudo chmod 777 /var/www/html\n\n 注：我是运行`sudo nautilus`，以管理员身份打开文件夹，直接更改了这个文件的属性中的权限。\n   #  5.安装phpMyAdmin，用于管理mysql，属于mysql的可视化界面。\n## （1）安装\n  > sudo apt-get install phpmyadmin\n\n   这里需要输入root用户的密码（两次）。\n ##（2）把`phpmyadmin中`的`apache.conf`（apache配置文件）复制到`apache2/sites-available`下的`phpmyadmin`文件下。\n > cp /etc/phpmyadmin/apache.conf /etc/apache2/sites-available/phpmyadmin\n\n ##（3）创建phpMyAdmin链接。\n  > sudo ln -s /usr/share/phpmyadmin /var/www/html/\n\n 输入`localhost/phpmyadmin/`,成功访问。\n![phpMyAdmin首页](http://upload-images.jianshu.io/upload_images/1837782-05b9901c8976707f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n```\n*****************如果失败了，继续4,5,6步，成功的话就可以结束了。*****************\n```\n ## （4）接着输入，进入sites-enabled文件夹下：\n  > cd /etc/apache2/sites-enabled/ \n\n ##（5）进入之后，要建立一个通往配置文件的链接以便能利用它。\n > sudo ln -s ../sites-available/phpmyadmin\n\n ##（6）重启apache2\n > sudo /etc/init.d/apache2 restart\n\n\n \n\n\n\n\n\n\n\n\n\n\n","slug":"ubuntu下php环境搭建","published":1,"updated":"2017-04-22T01:27:36.160Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1u7zpom000a99pvh0pz96sl","content":"<p>将要安装的软件：<br>Apache+mysql+php（+phpMyAdmin用于管理数据库）<br><a id=\"more\"></a></p>\n<h1 id=\"1-安装-Apache\"><a href=\"#1-安装-Apache\" class=\"headerlink\" title=\"1.安装 Apache\"></a>1.安装 Apache</h1><h2 id=\"（1）安装apache命令\"><a href=\"#（1）安装apache命令\" class=\"headerlink\" title=\"（1）安装apache命令\"></a>（1）安装apache命令</h2><blockquote>\n<p> sudo apt-get install apache</p>\n</blockquote>\n<h2 id=\"2-测试-Apache安装是否成功\"><a href=\"#2-测试-Apache安装是否成功\" class=\"headerlink\" title=\"(2)测试 Apache安装是否成功\"></a>(2)测试 Apache安装是否成功</h2><p>浏览器输入<a href=\"http://localhost/\" target=\"_blank\" rel=\"external\">http://localhost/</a>，如果成功：<br><img src=\"http://upload-images.jianshu.io/upload_images/1837782-2ffbfc73feb0c6e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"安装成功\"></p>\n<h1 id=\"2-安装-PHP\"><a href=\"#2-安装-PHP\" class=\"headerlink\" title=\"2.安装 PHP\"></a>2.安装 PHP</h1><p> <a href=\"http://www.linuxdiyf.com/linux/20550.html\" target=\"_blank\" rel=\"external\">关于Ubuntu16.04不能安装libapache2-mod-php5</a></p>\n<blockquote>\n<p> ubuntu16.04已经选择PHP7.0作为新的基础包了，所以不能再Ubuntu16.04上安装PHP5，如果硬要安装，则会出现依赖问题，而且一般无法解决：<br>比如，Ubuntu16.04上的软件需要的是一个较高版本的库，而PHP5需要的是一个较低版本的库，系统会提示：libapache2-mod-php5依赖于某某库，但该库不能被安装。因为php5基于较低版本的库文件，如果安装的话有其他软件将不能运行。<br>故，推荐安装PHP7.0，并且用“libapache2-mod-php”代替“libapache2-mod-php5”。<br>最后，如果阁下非要使用PHP5，那就只好回到Ubuntu14.04LTC（推荐）了！</p>\n</blockquote>\n<p>简言之</p>\n<ul>\n<li>(1)命令行安装php7<blockquote>\n<p>sudo apt-get install php7<br>sudo apt-get libapache2-mod-php</p>\n</blockquote>\n</li>\n</ul>\n<ul>\n<li><p>(2)重启一下apache</p>\n<blockquote>\n<p>sudo /etc/init.d/apache2 restart</p>\n</blockquote>\n</li>\n<li><p>(3)准备一个测试文件<code>first.php</code>放在<code>/var/www/html/</code>目录下,内容为<br><code>&lt;?php phpinfo();?&gt;</code></p>\n</li>\n<li><p>(4)测试php文件是否能被解析。在浏览器输入</p>\n<blockquote>\n<p>localhost/first.php</p>\n</blockquote>\n</li>\n</ul>\n<p>到这一步，我不能正常访问，出现了404错误，非常感谢<a href=\"http://blog.csdn.net/hitabc141592/article/details/23556079\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/hitabc141592/article/details/23556079</a>这篇文章。<br>将这两个文件链接到mods-enabled目录下：</p>\n<blockquote>\n<p>sudo ln -s /etc/apache2/mods-available/php7.0.load /etc/apache2/mods-enabled/php7.load<br>sudo ln -s /etc/apache2/mods-available/php7.0.conf /etc/apache2/mods-enabled/php.conf</p>\n</blockquote>\n<p>注：<code>/etc/apache2/mods-available/php7.0.load</code>是文件路径，可以沿着路径打开去看看，<code>/etc/apache2/mods-enabled/php7.load</code>是链接到的路径。意思就是将这两个文件加入apache配置中。</p>\n<ul>\n<li>(5)准备的php文件为什么放在<code>/var/www/html/</code>下面？<br>查看apache配置文件就清楚了，apache2的默认目录配置在/etc/apache2/sites-enabled/00default文件中，里面有一句<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">DocumentRoot /var/www/html</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>说明这个目录(<code>/var/www/html/</code>)是默认开发目录。</p>\n<h1 id=\"3-安装mysql\"><a href=\"#3-安装mysql\" class=\"headerlink\" title=\"3.安装mysql\"></a>3.安装mysql</h1><blockquote>\n<p>sudo apt-get install mysql-server</p>\n</blockquote>\n<p> 设置用户root及密码。</p>\n<h1 id=\"4-更改-var-www-html-的权限\"><a href=\"#4-更改-var-www-html-的权限\" class=\"headerlink\" title=\"4.更改/var/www/html/的权限\"></a>4.更改<code>/var/www/html/</code>的权限</h1><blockquote>\n<p>sudo chmod 777 /var/www/html</p>\n</blockquote>\n<p> 注：我是运行<code>sudo nautilus</code>，以管理员身份打开文件夹，直接更改了这个文件的属性中的权限。</p>\n<h1 id=\"5-安装phpMyAdmin，用于管理mysql，属于mysql的可视化界面。\"><a href=\"#5-安装phpMyAdmin，用于管理mysql，属于mysql的可视化界面。\" class=\"headerlink\" title=\"5.安装phpMyAdmin，用于管理mysql，属于mysql的可视化界面。\"></a>5.安装phpMyAdmin，用于管理mysql，属于mysql的可视化界面。</h1><h2 id=\"（1）安装\"><a href=\"#（1）安装\" class=\"headerlink\" title=\"（1）安装\"></a>（1）安装</h2><blockquote>\n<p>sudo apt-get install phpmyadmin</p>\n</blockquote>\n<p>   这里需要输入root用户的密码（两次）。</p>\n<p> ##（2）把<code>phpmyadmin中</code>的<code>apache.conf</code>（apache配置文件）复制到<code>apache2/sites-available</code>下的<code>phpmyadmin</code>文件下。</p>\n<blockquote>\n<p>cp /etc/phpmyadmin/apache.conf /etc/apache2/sites-available/phpmyadmin</p>\n</blockquote>\n<p> ##（3）创建phpMyAdmin链接。</p>\n<blockquote>\n<p>sudo ln -s /usr/share/phpmyadmin /var/www/html/</p>\n</blockquote>\n<p> 输入<code>localhost/phpmyadmin/</code>,成功访问。<br><img src=\"http://upload-images.jianshu.io/upload_images/1837782-05b9901c8976707f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"phpMyAdmin首页\"><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">*****************如果失败了，继续4,5,6步，成功的话就可以结束了。*****************</div></pre></td></tr></table></figure></p>\n<h2 id=\"（4）接着输入，进入sites-enabled文件夹下：\"><a href=\"#（4）接着输入，进入sites-enabled文件夹下：\" class=\"headerlink\" title=\"（4）接着输入，进入sites-enabled文件夹下：\"></a>（4）接着输入，进入sites-enabled文件夹下：</h2><blockquote>\n<p>cd /etc/apache2/sites-enabled/ </p>\n</blockquote>\n<p> ##（5）进入之后，要建立一个通往配置文件的链接以便能利用它。</p>\n<blockquote>\n<p>sudo ln -s ../sites-available/phpmyadmin</p>\n</blockquote>\n<p> ##（6）重启apache2</p>\n<blockquote>\n<p>sudo /etc/init.d/apache2 restart</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>将要安装的软件：<br>Apache+mysql+php（+phpMyAdmin用于管理数据库）<br>","more":"</p>\n<h1 id=\"1-安装-Apache\"><a href=\"#1-安装-Apache\" class=\"headerlink\" title=\"1.安装 Apache\"></a>1.安装 Apache</h1><h2 id=\"（1）安装apache命令\"><a href=\"#（1）安装apache命令\" class=\"headerlink\" title=\"（1）安装apache命令\"></a>（1）安装apache命令</h2><blockquote>\n<p> sudo apt-get install apache</p>\n</blockquote>\n<h2 id=\"2-测试-Apache安装是否成功\"><a href=\"#2-测试-Apache安装是否成功\" class=\"headerlink\" title=\"(2)测试 Apache安装是否成功\"></a>(2)测试 Apache安装是否成功</h2><p>浏览器输入<a href=\"http://localhost/\">http://localhost/</a>，如果成功：<br><img src=\"http://upload-images.jianshu.io/upload_images/1837782-2ffbfc73feb0c6e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"安装成功\"></p>\n<h1 id=\"2-安装-PHP\"><a href=\"#2-安装-PHP\" class=\"headerlink\" title=\"2.安装 PHP\"></a>2.安装 PHP</h1><p> <a href=\"http://www.linuxdiyf.com/linux/20550.html\">关于Ubuntu16.04不能安装libapache2-mod-php5</a></p>\n<blockquote>\n<p> ubuntu16.04已经选择PHP7.0作为新的基础包了，所以不能再Ubuntu16.04上安装PHP5，如果硬要安装，则会出现依赖问题，而且一般无法解决：<br>比如，Ubuntu16.04上的软件需要的是一个较高版本的库，而PHP5需要的是一个较低版本的库，系统会提示：libapache2-mod-php5依赖于某某库，但该库不能被安装。因为php5基于较低版本的库文件，如果安装的话有其他软件将不能运行。<br>故，推荐安装PHP7.0，并且用“libapache2-mod-php”代替“libapache2-mod-php5”。<br>最后，如果阁下非要使用PHP5，那就只好回到Ubuntu14.04LTC（推荐）了！</p>\n</blockquote>\n<p>简言之</p>\n<ul>\n<li>(1)命令行安装php7<blockquote>\n<p>sudo apt-get install php7<br>sudo apt-get libapache2-mod-php</p>\n</blockquote>\n</li>\n</ul>\n<ul>\n<li><p>(2)重启一下apache</p>\n<blockquote>\n<p>sudo /etc/init.d/apache2 restart</p>\n</blockquote>\n</li>\n<li><p>(3)准备一个测试文件<code>first.php</code>放在<code>/var/www/html/</code>目录下,内容为<br><code>&lt;?php phpinfo();?&gt;</code></p>\n</li>\n<li><p>(4)测试php文件是否能被解析。在浏览器输入</p>\n<blockquote>\n<p>localhost/first.php</p>\n</blockquote>\n</li>\n</ul>\n<p>到这一步，我不能正常访问，出现了404错误，非常感谢<a href=\"http://blog.csdn.net/hitabc141592/article/details/23556079\">http://blog.csdn.net/hitabc141592/article/details/23556079</a>这篇文章。<br>将这两个文件链接到mods-enabled目录下：</p>\n<blockquote>\n<p>sudo ln -s /etc/apache2/mods-available/php7.0.load /etc/apache2/mods-enabled/php7.load<br>sudo ln -s /etc/apache2/mods-available/php7.0.conf /etc/apache2/mods-enabled/php.conf</p>\n</blockquote>\n<p>注：<code>/etc/apache2/mods-available/php7.0.load</code>是文件路径，可以沿着路径打开去看看，<code>/etc/apache2/mods-enabled/php7.load</code>是链接到的路径。意思就是将这两个文件加入apache配置中。</p>\n<ul>\n<li>(5)准备的php文件为什么放在<code>/var/www/html/</code>下面？<br>查看apache配置文件就清楚了，apache2的默认目录配置在/etc/apache2/sites-enabled/00default文件中，里面有一句<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">DocumentRoot /var/www/html</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>说明这个目录(<code>/var/www/html/</code>)是默认开发目录。</p>\n<h1 id=\"3-安装mysql\"><a href=\"#3-安装mysql\" class=\"headerlink\" title=\"3.安装mysql\"></a>3.安装mysql</h1><blockquote>\n<p>sudo apt-get install mysql-server</p>\n</blockquote>\n<p> 设置用户root及密码。</p>\n<h1 id=\"4-更改-var-www-html-的权限\"><a href=\"#4-更改-var-www-html-的权限\" class=\"headerlink\" title=\"4.更改/var/www/html/的权限\"></a>4.更改<code>/var/www/html/</code>的权限</h1><blockquote>\n<p>sudo chmod 777 /var/www/html</p>\n</blockquote>\n<p> 注：我是运行<code>sudo nautilus</code>，以管理员身份打开文件夹，直接更改了这个文件的属性中的权限。</p>\n<h1 id=\"5-安装phpMyAdmin，用于管理mysql，属于mysql的可视化界面。\"><a href=\"#5-安装phpMyAdmin，用于管理mysql，属于mysql的可视化界面。\" class=\"headerlink\" title=\"5.安装phpMyAdmin，用于管理mysql，属于mysql的可视化界面。\"></a>5.安装phpMyAdmin，用于管理mysql，属于mysql的可视化界面。</h1><h2 id=\"（1）安装\"><a href=\"#（1）安装\" class=\"headerlink\" title=\"（1）安装\"></a>（1）安装</h2><blockquote>\n<p>sudo apt-get install phpmyadmin</p>\n</blockquote>\n<p>   这里需要输入root用户的密码（两次）。</p>\n<p> ##（2）把<code>phpmyadmin中</code>的<code>apache.conf</code>（apache配置文件）复制到<code>apache2/sites-available</code>下的<code>phpmyadmin</code>文件下。</p>\n<blockquote>\n<p>cp /etc/phpmyadmin/apache.conf /etc/apache2/sites-available/phpmyadmin</p>\n</blockquote>\n<p> ##（3）创建phpMyAdmin链接。</p>\n<blockquote>\n<p>sudo ln -s /usr/share/phpmyadmin /var/www/html/</p>\n</blockquote>\n<p> 输入<code>localhost/phpmyadmin/</code>,成功访问。<br><img src=\"http://upload-images.jianshu.io/upload_images/1837782-05b9901c8976707f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"phpMyAdmin首页\"><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">*****************如果失败了，继续4,5,6步，成功的话就可以结束了。*****************</div></pre></td></tr></table></figure></p>\n<h2 id=\"（4）接着输入，进入sites-enabled文件夹下：\"><a href=\"#（4）接着输入，进入sites-enabled文件夹下：\" class=\"headerlink\" title=\"（4）接着输入，进入sites-enabled文件夹下：\"></a>（4）接着输入，进入sites-enabled文件夹下：</h2><blockquote>\n<p>cd /etc/apache2/sites-enabled/ </p>\n</blockquote>\n<p> ##（5）进入之后，要建立一个通往配置文件的链接以便能利用它。</p>\n<blockquote>\n<p>sudo ln -s ../sites-available/phpmyadmin</p>\n</blockquote>\n<p> ##（6）重启apache2</p>\n<blockquote>\n<p>sudo /etc/init.d/apache2 restart</p>\n</blockquote>"},{"title":"ubuntu下编程环境的搭建","date":"2016-10-31T13:00:00.000Z","_content":"\n[安装教程点击此处](http://www.linuxidc.com/Linux/2015-08/122140.htm)\n安装好ubuntu之后，第一件事就是更新服务器列表来下载最新的软件\n> sudo apt-get update\n\n然后安装vim编辑器\n> sudo apt-get install vim\n\n接下来就是搭建Java，c等的开发环境。\n<!-- more -->\n\n#一、下载并安装jdk\n\n![QQ截图20161031191627.png](http://upload-images.jianshu.io/upload_images/1837782-5e897bbc07664675.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n选择下载目录`/opt/software`,下载到这里。\n下载完成后进行安装。\n1、打开终端，进入到该目录\n> cd /opt/software\n\n2.解压压缩包\n> tar -zxvf jdk-8u111-linux-x64.tar.gz\n\n3.配置环境变量\n(1)首先进入profile所在的目录，并打开profile文件\n> sudo vim /etc/profile\n\n\n![进入目录](http://upload-images.jianshu.io/upload_images/1837782-1edf1c05fdd722b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n刚打开文件时的状态：\n\n\n![1.png](http://upload-images.jianshu.io/upload_images/1837782-d598990eceda58f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n回车后输入`i`进入vim的编辑模式（和windows里面用记事本打开一个道理，只是需要输入i才由命令行进入编辑状态），此时显示插入两字\n\n![插入状态](http://upload-images.jianshu.io/upload_images/1837782-b34a82e040813455.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n(2)将鼠标移动文件末尾，配置环境变量，即在文件末尾加上以下几句：\n> export JAVA_HOME=/opt/software/java/jdk1.8.0_111\n> export JRE_HOME=/opt/software/java/jdk1.8.0_111/jre\n> export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib\n> export PATH=$JAVA_HOME/bin:$JRE_HOME/bin\n\n(3)按键盘左上角Esc键退出编辑状态，输入\n> :wq\n\n回车，即退出vim编辑器并保存修改内容。\n(4)使配置生效，输入：\n> source /etc/profile\n\n(5)验证，这个相信大家都会。成功后将显示jdk的版本号。\n> javac -version\n\n# 二、eclipse\n我是在官网稀里糊涂的下载的，就在download的那里，系统会默认下载linux版本的。下载目录选择和jdk的一样，好找。\n1、进入目录\n> cd /opt/software\n\n2、解压\n> tar -zxvf eclipse........\n注：省略号部分是完整名称，记不住没事，按Tab键就自动补全了。\n\n3、输入\n> ./eclipse\n\n运行成功。\n如果常用的话就将其固定在启动器（任务栏），获取按window徽标键，输入eclipse即可运行。\n\n# 三、MySQL\n##下载安装mysql\n很方便，几句话。\n> sudo apt-get install mysql-server\n \n> sudo apt-get install mysql-client\n \n> sudo apt-get install libmysqlclient-dev\n\n可以参考这篇文章[ubuntu安装mysql和简单操作](http://www.cnblogs.com/zhuyp1015/p/3561470.html)\n\n## 如何启动/停止/重启MySQL\n（在终端输入）\n1、使用 service 启动：service mysql start\n\n2、使用 service 停止：service mysql stop\n\n3、使用 service 重启：service mysql restart\n\n[CentOS7 64位下MySQL5.7安装与配置（YUM）](http://www.linuxidc.com/Linux/2016-09/135288.htm)\n\n# 四、c语言\n(本段系引用别人的原话·[原文在这](http://blog.163.com/zhangjinqing1234@126/blog/static/307302602009538137113/))\nlinux操作系统上面开发程序， 光有了gcc 是不行的,它还需要一个   `build-essential`软件包。\n作用是提供编译程序必须软件包的列表信息，也就是说，编译程序有了这个软件包它才知道头文件在哪， 才知道库函数在哪，还会下载依赖的软件包，最后才组成一个开发环境。\nbuild-essential 安装方法：\n> sudo apt-get install build-essential\n\n安装后我测试了一下，很好。\n在桌面新建一个c语言文件`first.c`\n> cd 桌面\n> vim first.c\n\n输入i后进行编辑，输入以下代码\n```\n#include<stdio.h>\nint main(){\nprintf(\"hello ubuntu\");\nreturn 0;\n}\n```\n按`Esc`退出编辑模式，输入`:wq`回车保存退出。\n输入下面一句进行编译\n> gcc first.c -o first\n\n再输入\n> ./first\n\n\n# 五、tomcat\n官网下载，不多说了，选择tar.gz后缀的下载就行了。仍然放在`/opt/software`目录下。\n(1)进入文件所在目录\n> cd /opt/software\n\n(2)解压\n> tar -zxvf apache-tomcat-7.0.72\n\n(3)修改配置文件\n进到`apache-tomcat-7.0.72/bin`目录下\n> cd bin\n\n打开`catalina.sh `\n> vim catalina.sh \n\n插入以下代码\n\n```\nJAVA_HOME=/opt/software/java/jdk1.8.0_111\n JAVA_OPTS=\"-server -Xms512m \n-Xmx1024m -XX:PermSize=600M\n -XX:MaxPermSize=600m\n  -Dcom.sun.management.jmxremote\" \n\n```\n按下`Esc`，输入`:wq`保存退出。\n(4)修改端口，习惯了用8080端口，默认是8009。\n`tomcat7/conf/server.xml` 文件里的：\n```\n<Connector port=\"8009\" \nprotocol=\"HTTP/1.1\"  connectionTimeout=\"20000\"  redirectPort=\"8443\" /> \n```\n将`port=\"8009\"`改为`port=\"8080\"`，保存。\n(5)在`apache-tomcat-7.0.72/bin`运行\n> sudo ./startup.sh \n\n运行成功。\n(6)以服务方式启动\n①. 在/etc/init.d目录下新建文件，命名为tomcat2. 对tomcat文件进行编辑，执行**\n >   cd /etc/init.d/\n >  vi tomcat\n\n将下面代码粘上去\n``` \n#!/bin/bash  \n# description: Tomcat7 Start Stop Restart  \n# processname: tomcat7  \n# chkconfig: 234 20 80  \nJAVA_HOME=/opt/software/java/jdk1.8.0_111\nexport JAVA_HOME  \nPATH=$JAVA_HOME/bin:$PATH  \nexport PATH  \nCATALINA_HOME=/usr/local/tomcat\ncase $1 in  \nstart)  \nsh $CATALINA_HOME/bin/startup.sh  \n;;   \nstop)     \nsh $CATALINA_HOME/bin/shutdown.sh  \n;;   \nrestart)  \nsh $CATALINA_HOME/bin/shutdown.sh  \nsh $CATALINA_HOME/bin/startup.sh  \n;;   \nesac      \nexit 0\n```\n②. 按ESC退出，并\n> ：wq\n\n③. 设置tomcat的文件属性，把tomcat 修改为可运行的文件，命令参考如下\n> chmod a+x tomcat\n\n④. 设置服务运行级别\n> chkconfig --add tomcat\n\n⑤. 服务就添加成功了\n然后用 chkconfig --list 查看，在服务列表里就会出现自定义的服务了\n>  chkconfig --list\n\n⑥. 测试\n> service tomcat start\nservice tomcat stop\nservice tomcat restart\nservice tomcat status\n\n# 六、jdbc连接桥\n[下载地址](http://dev.mysql.com/downloads/connector/j/6.0.html)\n\n下载*.tar.gz格式的文件，解压，将其中的`mysql-connector-java-6.0.5-bin.jar`文件拿出来，就和平常使用的一样了，加载到程序中就行了。\n# 七、centOs安装postgreSQL\n```\n# vi /etc/yum.repos.d/CentOS-Base.repo\n# yum localinstall http://yum.postgresql.org/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm\n# yum list postgres*\n# yum install -y postgresql95-server.x86_64 postgresql95-contrib.x86_64 postgresql95-libs.x86_64 \n# /usr/pgsql-9.5/bin/postgresql95-setup initdb\n# systemctl enable postgresql-9.5.service\n# systemctl start postgresql-9.5.service \n```\n详见[CentOS 6.3下PostgreSQL 的安装与配置](http://www.linuxidc.com/Linux/2014-05/101725.htm)\n或者[CentOS 7 安装、配置、使用 PostgreSQL 9.5（一）安装及基础配置](http://www.jianshu.com/p/7e95fd0bc91a)\n# 小结\n总结一下，其实ubuntu下配置这些东西并不难，以前只是在虚拟机上接触了以下ubuntu，当时感觉很难的样子。现在的ubuntu界面很友好，操作比起windows也复杂不太多。\n     主要困惑是因为没弄清ubuntu下目录结构和vim部分，其实文件结构和windows类似，而vim就相当于是一个更加强大、功能丰富的记事本（编辑器），凡是用vim操作的部分都可以按照windows下的方式，找到文件，直接打开进行操作。\n不过ubuntu下的权限更为苛刻，修改文件都需要管理员权限，可以输入\n\n> sudo nautilus\n\n来以管理员身份打开文件夹，然后复制、剪切、粘贴、删除、移动、修改、安装等等都当做win7、win8来操作即可。\n","source":"_posts/ubuntu下编程环境的搭建.md","raw":"title: ubuntu下编程环境的搭建\ncategories: Linux\ntags: ubuntu\ndate: 2016-10-31 21:00\n---\n\n[安装教程点击此处](http://www.linuxidc.com/Linux/2015-08/122140.htm)\n安装好ubuntu之后，第一件事就是更新服务器列表来下载最新的软件\n> sudo apt-get update\n\n然后安装vim编辑器\n> sudo apt-get install vim\n\n接下来就是搭建Java，c等的开发环境。\n<!-- more -->\n\n#一、下载并安装jdk\n\n![QQ截图20161031191627.png](http://upload-images.jianshu.io/upload_images/1837782-5e897bbc07664675.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n选择下载目录`/opt/software`,下载到这里。\n下载完成后进行安装。\n1、打开终端，进入到该目录\n> cd /opt/software\n\n2.解压压缩包\n> tar -zxvf jdk-8u111-linux-x64.tar.gz\n\n3.配置环境变量\n(1)首先进入profile所在的目录，并打开profile文件\n> sudo vim /etc/profile\n\n\n![进入目录](http://upload-images.jianshu.io/upload_images/1837782-1edf1c05fdd722b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n刚打开文件时的状态：\n\n\n![1.png](http://upload-images.jianshu.io/upload_images/1837782-d598990eceda58f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n回车后输入`i`进入vim的编辑模式（和windows里面用记事本打开一个道理，只是需要输入i才由命令行进入编辑状态），此时显示插入两字\n\n![插入状态](http://upload-images.jianshu.io/upload_images/1837782-b34a82e040813455.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n(2)将鼠标移动文件末尾，配置环境变量，即在文件末尾加上以下几句：\n> export JAVA_HOME=/opt/software/java/jdk1.8.0_111\n> export JRE_HOME=/opt/software/java/jdk1.8.0_111/jre\n> export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib\n> export PATH=$JAVA_HOME/bin:$JRE_HOME/bin\n\n(3)按键盘左上角Esc键退出编辑状态，输入\n> :wq\n\n回车，即退出vim编辑器并保存修改内容。\n(4)使配置生效，输入：\n> source /etc/profile\n\n(5)验证，这个相信大家都会。成功后将显示jdk的版本号。\n> javac -version\n\n# 二、eclipse\n我是在官网稀里糊涂的下载的，就在download的那里，系统会默认下载linux版本的。下载目录选择和jdk的一样，好找。\n1、进入目录\n> cd /opt/software\n\n2、解压\n> tar -zxvf eclipse........\n注：省略号部分是完整名称，记不住没事，按Tab键就自动补全了。\n\n3、输入\n> ./eclipse\n\n运行成功。\n如果常用的话就将其固定在启动器（任务栏），获取按window徽标键，输入eclipse即可运行。\n\n# 三、MySQL\n##下载安装mysql\n很方便，几句话。\n> sudo apt-get install mysql-server\n \n> sudo apt-get install mysql-client\n \n> sudo apt-get install libmysqlclient-dev\n\n可以参考这篇文章[ubuntu安装mysql和简单操作](http://www.cnblogs.com/zhuyp1015/p/3561470.html)\n\n## 如何启动/停止/重启MySQL\n（在终端输入）\n1、使用 service 启动：service mysql start\n\n2、使用 service 停止：service mysql stop\n\n3、使用 service 重启：service mysql restart\n\n[CentOS7 64位下MySQL5.7安装与配置（YUM）](http://www.linuxidc.com/Linux/2016-09/135288.htm)\n\n# 四、c语言\n(本段系引用别人的原话·[原文在这](http://blog.163.com/zhangjinqing1234@126/blog/static/307302602009538137113/))\nlinux操作系统上面开发程序， 光有了gcc 是不行的,它还需要一个   `build-essential`软件包。\n作用是提供编译程序必须软件包的列表信息，也就是说，编译程序有了这个软件包它才知道头文件在哪， 才知道库函数在哪，还会下载依赖的软件包，最后才组成一个开发环境。\nbuild-essential 安装方法：\n> sudo apt-get install build-essential\n\n安装后我测试了一下，很好。\n在桌面新建一个c语言文件`first.c`\n> cd 桌面\n> vim first.c\n\n输入i后进行编辑，输入以下代码\n```\n#include<stdio.h>\nint main(){\nprintf(\"hello ubuntu\");\nreturn 0;\n}\n```\n按`Esc`退出编辑模式，输入`:wq`回车保存退出。\n输入下面一句进行编译\n> gcc first.c -o first\n\n再输入\n> ./first\n\n\n# 五、tomcat\n官网下载，不多说了，选择tar.gz后缀的下载就行了。仍然放在`/opt/software`目录下。\n(1)进入文件所在目录\n> cd /opt/software\n\n(2)解压\n> tar -zxvf apache-tomcat-7.0.72\n\n(3)修改配置文件\n进到`apache-tomcat-7.0.72/bin`目录下\n> cd bin\n\n打开`catalina.sh `\n> vim catalina.sh \n\n插入以下代码\n\n```\nJAVA_HOME=/opt/software/java/jdk1.8.0_111\n JAVA_OPTS=\"-server -Xms512m \n-Xmx1024m -XX:PermSize=600M\n -XX:MaxPermSize=600m\n  -Dcom.sun.management.jmxremote\" \n\n```\n按下`Esc`，输入`:wq`保存退出。\n(4)修改端口，习惯了用8080端口，默认是8009。\n`tomcat7/conf/server.xml` 文件里的：\n```\n<Connector port=\"8009\" \nprotocol=\"HTTP/1.1\"  connectionTimeout=\"20000\"  redirectPort=\"8443\" /> \n```\n将`port=\"8009\"`改为`port=\"8080\"`，保存。\n(5)在`apache-tomcat-7.0.72/bin`运行\n> sudo ./startup.sh \n\n运行成功。\n(6)以服务方式启动\n①. 在/etc/init.d目录下新建文件，命名为tomcat2. 对tomcat文件进行编辑，执行**\n >   cd /etc/init.d/\n >  vi tomcat\n\n将下面代码粘上去\n``` \n#!/bin/bash  \n# description: Tomcat7 Start Stop Restart  \n# processname: tomcat7  \n# chkconfig: 234 20 80  \nJAVA_HOME=/opt/software/java/jdk1.8.0_111\nexport JAVA_HOME  \nPATH=$JAVA_HOME/bin:$PATH  \nexport PATH  \nCATALINA_HOME=/usr/local/tomcat\ncase $1 in  \nstart)  \nsh $CATALINA_HOME/bin/startup.sh  \n;;   \nstop)     \nsh $CATALINA_HOME/bin/shutdown.sh  \n;;   \nrestart)  \nsh $CATALINA_HOME/bin/shutdown.sh  \nsh $CATALINA_HOME/bin/startup.sh  \n;;   \nesac      \nexit 0\n```\n②. 按ESC退出，并\n> ：wq\n\n③. 设置tomcat的文件属性，把tomcat 修改为可运行的文件，命令参考如下\n> chmod a+x tomcat\n\n④. 设置服务运行级别\n> chkconfig --add tomcat\n\n⑤. 服务就添加成功了\n然后用 chkconfig --list 查看，在服务列表里就会出现自定义的服务了\n>  chkconfig --list\n\n⑥. 测试\n> service tomcat start\nservice tomcat stop\nservice tomcat restart\nservice tomcat status\n\n# 六、jdbc连接桥\n[下载地址](http://dev.mysql.com/downloads/connector/j/6.0.html)\n\n下载*.tar.gz格式的文件，解压，将其中的`mysql-connector-java-6.0.5-bin.jar`文件拿出来，就和平常使用的一样了，加载到程序中就行了。\n# 七、centOs安装postgreSQL\n```\n# vi /etc/yum.repos.d/CentOS-Base.repo\n# yum localinstall http://yum.postgresql.org/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm\n# yum list postgres*\n# yum install -y postgresql95-server.x86_64 postgresql95-contrib.x86_64 postgresql95-libs.x86_64 \n# /usr/pgsql-9.5/bin/postgresql95-setup initdb\n# systemctl enable postgresql-9.5.service\n# systemctl start postgresql-9.5.service \n```\n详见[CentOS 6.3下PostgreSQL 的安装与配置](http://www.linuxidc.com/Linux/2014-05/101725.htm)\n或者[CentOS 7 安装、配置、使用 PostgreSQL 9.5（一）安装及基础配置](http://www.jianshu.com/p/7e95fd0bc91a)\n# 小结\n总结一下，其实ubuntu下配置这些东西并不难，以前只是在虚拟机上接触了以下ubuntu，当时感觉很难的样子。现在的ubuntu界面很友好，操作比起windows也复杂不太多。\n     主要困惑是因为没弄清ubuntu下目录结构和vim部分，其实文件结构和windows类似，而vim就相当于是一个更加强大、功能丰富的记事本（编辑器），凡是用vim操作的部分都可以按照windows下的方式，找到文件，直接打开进行操作。\n不过ubuntu下的权限更为苛刻，修改文件都需要管理员权限，可以输入\n\n> sudo nautilus\n\n来以管理员身份打开文件夹，然后复制、剪切、粘贴、删除、移动、修改、安装等等都当做win7、win8来操作即可。\n","slug":"ubuntu下编程环境的搭建","published":1,"updated":"2017-04-22T01:28:27.897Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1u7zpop000d99pvt9e90p5g","content":"<p><a href=\"http://www.linuxidc.com/Linux/2015-08/122140.htm\" target=\"_blank\" rel=\"external\">安装教程点击此处</a><br>安装好ubuntu之后，第一件事就是更新服务器列表来下载最新的软件</p>\n<blockquote>\n<p>sudo apt-get update</p>\n</blockquote>\n<p>然后安装vim编辑器</p>\n<blockquote>\n<p>sudo apt-get install vim</p>\n</blockquote>\n<p>接下来就是搭建Java，c等的开发环境。<br><a id=\"more\"></a></p>\n<p>#一、下载并安装jdk</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-5e897bbc07664675.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"QQ截图20161031191627.png\"><br>选择下载目录<code>/opt/software</code>,下载到这里。<br>下载完成后进行安装。<br>1、打开终端，进入到该目录</p>\n<blockquote>\n<p>cd /opt/software</p>\n</blockquote>\n<p>2.解压压缩包</p>\n<blockquote>\n<p>tar -zxvf jdk-8u111-linux-x64.tar.gz</p>\n</blockquote>\n<p>3.配置环境变量<br>(1)首先进入profile所在的目录，并打开profile文件</p>\n<blockquote>\n<p>sudo vim /etc/profile</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-1edf1c05fdd722b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"进入目录\"></p>\n<p>刚打开文件时的状态：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-d598990eceda58f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1.png\"></p>\n<p>回车后输入<code>i</code>进入vim的编辑模式（和windows里面用记事本打开一个道理，只是需要输入i才由命令行进入编辑状态），此时显示插入两字</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-b34a82e040813455.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"插入状态\"></p>\n<p>(2)将鼠标移动文件末尾，配置环境变量，即在文件末尾加上以下几句：</p>\n<blockquote>\n<p>export JAVA_HOME=/opt/software/java/jdk1.8.0_111<br>export JRE_HOME=/opt/software/java/jdk1.8.0_111/jre<br>export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib<br>export PATH=$JAVA_HOME/bin:$JRE_HOME/bin</p>\n</blockquote>\n<p>(3)按键盘左上角Esc键退出编辑状态，输入</p>\n<blockquote>\n<p>:wq</p>\n</blockquote>\n<p>回车，即退出vim编辑器并保存修改内容。<br>(4)使配置生效，输入：</p>\n<blockquote>\n<p>source /etc/profile</p>\n</blockquote>\n<p>(5)验证，这个相信大家都会。成功后将显示jdk的版本号。</p>\n<blockquote>\n<p>javac -version</p>\n</blockquote>\n<h1 id=\"二、eclipse\"><a href=\"#二、eclipse\" class=\"headerlink\" title=\"二、eclipse\"></a>二、eclipse</h1><p>我是在官网稀里糊涂的下载的，就在download的那里，系统会默认下载linux版本的。下载目录选择和jdk的一样，好找。<br>1、进入目录</p>\n<blockquote>\n<p>cd /opt/software</p>\n</blockquote>\n<p>2、解压</p>\n<blockquote>\n<p>tar -zxvf eclipse……..<br>注：省略号部分是完整名称，记不住没事，按Tab键就自动补全了。</p>\n</blockquote>\n<p>3、输入</p>\n<blockquote>\n<p>./eclipse</p>\n</blockquote>\n<p>运行成功。<br>如果常用的话就将其固定在启动器（任务栏），获取按window徽标键，输入eclipse即可运行。</p>\n<h1 id=\"三、MySQL\"><a href=\"#三、MySQL\" class=\"headerlink\" title=\"三、MySQL\"></a>三、MySQL</h1><p>##下载安装mysql<br>很方便，几句话。</p>\n<blockquote>\n<p>sudo apt-get install mysql-server</p>\n<p>sudo apt-get install mysql-client</p>\n<p>sudo apt-get install libmysqlclient-dev</p>\n</blockquote>\n<p>可以参考这篇文章<a href=\"http://www.cnblogs.com/zhuyp1015/p/3561470.html\" target=\"_blank\" rel=\"external\">ubuntu安装mysql和简单操作</a></p>\n<h2 id=\"如何启动-停止-重启MySQL\"><a href=\"#如何启动-停止-重启MySQL\" class=\"headerlink\" title=\"如何启动/停止/重启MySQL\"></a>如何启动/停止/重启MySQL</h2><p>（在终端输入）<br>1、使用 service 启动：service mysql start</p>\n<p>2、使用 service 停止：service mysql stop</p>\n<p>3、使用 service 重启：service mysql restart</p>\n<p><a href=\"http://www.linuxidc.com/Linux/2016-09/135288.htm\" target=\"_blank\" rel=\"external\">CentOS7 64位下MySQL5.7安装与配置（YUM）</a></p>\n<h1 id=\"四、c语言\"><a href=\"#四、c语言\" class=\"headerlink\" title=\"四、c语言\"></a>四、c语言</h1><p>(本段系引用别人的原话·<a href=\"http://blog.163.com/zhangjinqing1234@126/blog/static/307302602009538137113/\" target=\"_blank\" rel=\"external\">原文在这</a>)<br>linux操作系统上面开发程序， 光有了gcc 是不行的,它还需要一个   <code>build-essential</code>软件包。<br>作用是提供编译程序必须软件包的列表信息，也就是说，编译程序有了这个软件包它才知道头文件在哪， 才知道库函数在哪，还会下载依赖的软件包，最后才组成一个开发环境。<br>build-essential 安装方法：</p>\n<blockquote>\n<p>sudo apt-get install build-essential</p>\n</blockquote>\n<p>安装后我测试了一下，很好。<br>在桌面新建一个c语言文件<code>first.c</code></p>\n<blockquote>\n<p>cd 桌面<br>vim first.c</p>\n</blockquote>\n<p>输入i后进行编辑，输入以下代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;stdio.h&gt;</div><div class=\"line\">int main()&#123;</div><div class=\"line\">printf(&quot;hello ubuntu&quot;);</div><div class=\"line\">return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>按<code>Esc</code>退出编辑模式，输入<code>:wq</code>回车保存退出。<br>输入下面一句进行编译</p>\n<blockquote>\n<p>gcc first.c -o first</p>\n</blockquote>\n<p>再输入</p>\n<blockquote>\n<p>./first</p>\n</blockquote>\n<h1 id=\"五、tomcat\"><a href=\"#五、tomcat\" class=\"headerlink\" title=\"五、tomcat\"></a>五、tomcat</h1><p>官网下载，不多说了，选择tar.gz后缀的下载就行了。仍然放在<code>/opt/software</code>目录下。<br>(1)进入文件所在目录</p>\n<blockquote>\n<p>cd /opt/software</p>\n</blockquote>\n<p>(2)解压</p>\n<blockquote>\n<p>tar -zxvf apache-tomcat-7.0.72</p>\n</blockquote>\n<p>(3)修改配置文件<br>进到<code>apache-tomcat-7.0.72/bin</code>目录下</p>\n<blockquote>\n<p>cd bin</p>\n</blockquote>\n<p>打开<code>catalina.sh</code></p>\n<blockquote>\n<p>vim catalina.sh </p>\n</blockquote>\n<p>插入以下代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">JAVA_HOME=/opt/software/java/jdk1.8.0_111</div><div class=\"line\"> JAVA_OPTS=&quot;-server -Xms512m </div><div class=\"line\">-Xmx1024m -XX:PermSize=600M</div><div class=\"line\"> -XX:MaxPermSize=600m</div><div class=\"line\">  -Dcom.sun.management.jmxremote&quot;</div></pre></td></tr></table></figure>\n<p>按下<code>Esc</code>，输入<code>:wq</code>保存退出。<br>(4)修改端口，习惯了用8080端口，默认是8009。<br><code>tomcat7/conf/server.xml</code> 文件里的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connector port=&quot;8009&quot; </div><div class=\"line\">protocol=&quot;HTTP/1.1&quot;  connectionTimeout=&quot;20000&quot;  redirectPort=&quot;8443&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>将<code>port=&quot;8009&quot;</code>改为<code>port=&quot;8080&quot;</code>，保存。<br>(5)在<code>apache-tomcat-7.0.72/bin</code>运行</p>\n<blockquote>\n<p>sudo ./startup.sh </p>\n</blockquote>\n<p>运行成功。<br>(6)以服务方式启动<br>①. 在/etc/init.d目录下新建文件，命名为tomcat2. 对tomcat文件进行编辑，执行**</p>\n<blockquote>\n<p>  cd /etc/init.d/<br> vi tomcat</p>\n</blockquote>\n<p>将下面代码粘上去<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash  </div><div class=\"line\"># description: Tomcat7 Start Stop Restart  </div><div class=\"line\"># processname: tomcat7  </div><div class=\"line\"># chkconfig: 234 20 80  </div><div class=\"line\">JAVA_HOME=/opt/software/java/jdk1.8.0_111</div><div class=\"line\">export JAVA_HOME  </div><div class=\"line\">PATH=$JAVA_HOME/bin:$PATH  </div><div class=\"line\">export PATH  </div><div class=\"line\">CATALINA_HOME=/usr/local/tomcat</div><div class=\"line\">case $1 in  </div><div class=\"line\">start)  </div><div class=\"line\">sh $CATALINA_HOME/bin/startup.sh  </div><div class=\"line\">;;   </div><div class=\"line\">stop)     </div><div class=\"line\">sh $CATALINA_HOME/bin/shutdown.sh  </div><div class=\"line\">;;   </div><div class=\"line\">restart)  </div><div class=\"line\">sh $CATALINA_HOME/bin/shutdown.sh  </div><div class=\"line\">sh $CATALINA_HOME/bin/startup.sh  </div><div class=\"line\">;;   </div><div class=\"line\">esac      </div><div class=\"line\">exit 0</div></pre></td></tr></table></figure></p>\n<p>②. 按ESC退出，并</p>\n<blockquote>\n<p>：wq</p>\n</blockquote>\n<p>③. 设置tomcat的文件属性，把tomcat 修改为可运行的文件，命令参考如下</p>\n<blockquote>\n<p>chmod a+x tomcat</p>\n</blockquote>\n<p>④. 设置服务运行级别</p>\n<blockquote>\n<p>chkconfig –add tomcat</p>\n</blockquote>\n<p>⑤. 服务就添加成功了<br>然后用 chkconfig –list 查看，在服务列表里就会出现自定义的服务了</p>\n<blockquote>\n<p> chkconfig –list</p>\n</blockquote>\n<p>⑥. 测试</p>\n<blockquote>\n<p>service tomcat start<br>service tomcat stop<br>service tomcat restart<br>service tomcat status</p>\n</blockquote>\n<h1 id=\"六、jdbc连接桥\"><a href=\"#六、jdbc连接桥\" class=\"headerlink\" title=\"六、jdbc连接桥\"></a>六、jdbc连接桥</h1><p><a href=\"http://dev.mysql.com/downloads/connector/j/6.0.html\" target=\"_blank\" rel=\"external\">下载地址</a></p>\n<p>下载*.tar.gz格式的文件，解压，将其中的<code>mysql-connector-java-6.0.5-bin.jar</code>文件拿出来，就和平常使用的一样了，加载到程序中就行了。</p>\n<h1 id=\"七、centOs安装postgreSQL\"><a href=\"#七、centOs安装postgreSQL\" class=\"headerlink\" title=\"七、centOs安装postgreSQL\"></a>七、centOs安装postgreSQL</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"># vi /etc/yum.repos.d/CentOS-Base.repo</div><div class=\"line\"># yum localinstall http://yum.postgresql.org/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm</div><div class=\"line\"># yum list postgres*</div><div class=\"line\"># yum install -y postgresql95-server.x86_64 postgresql95-contrib.x86_64 postgresql95-libs.x86_64 </div><div class=\"line\"># /usr/pgsql-9.5/bin/postgresql95-setup initdb</div><div class=\"line\"># systemctl enable postgresql-9.5.service</div><div class=\"line\"># systemctl start postgresql-9.5.service</div></pre></td></tr></table></figure>\n<p>详见<a href=\"http://www.linuxidc.com/Linux/2014-05/101725.htm\" target=\"_blank\" rel=\"external\">CentOS 6.3下PostgreSQL 的安装与配置</a><br>或者<a href=\"http://www.jianshu.com/p/7e95fd0bc91a\" target=\"_blank\" rel=\"external\">CentOS 7 安装、配置、使用 PostgreSQL 9.5（一）安装及基础配置</a></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>总结一下，其实ubuntu下配置这些东西并不难，以前只是在虚拟机上接触了以下ubuntu，当时感觉很难的样子。现在的ubuntu界面很友好，操作比起windows也复杂不太多。<br>     主要困惑是因为没弄清ubuntu下目录结构和vim部分，其实文件结构和windows类似，而vim就相当于是一个更加强大、功能丰富的记事本（编辑器），凡是用vim操作的部分都可以按照windows下的方式，找到文件，直接打开进行操作。<br>不过ubuntu下的权限更为苛刻，修改文件都需要管理员权限，可以输入</p>\n<blockquote>\n<p>sudo nautilus</p>\n</blockquote>\n<p>来以管理员身份打开文件夹，然后复制、剪切、粘贴、删除、移动、修改、安装等等都当做win7、win8来操作即可。</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"http://www.linuxidc.com/Linux/2015-08/122140.htm\">安装教程点击此处</a><br>安装好ubuntu之后，第一件事就是更新服务器列表来下载最新的软件</p>\n<blockquote>\n<p>sudo apt-get update</p>\n</blockquote>\n<p>然后安装vim编辑器</p>\n<blockquote>\n<p>sudo apt-get install vim</p>\n</blockquote>\n<p>接下来就是搭建Java，c等的开发环境。<br>","more":"</p>\n<p>#一、下载并安装jdk</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-5e897bbc07664675.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"QQ截图20161031191627.png\"><br>选择下载目录<code>/opt/software</code>,下载到这里。<br>下载完成后进行安装。<br>1、打开终端，进入到该目录</p>\n<blockquote>\n<p>cd /opt/software</p>\n</blockquote>\n<p>2.解压压缩包</p>\n<blockquote>\n<p>tar -zxvf jdk-8u111-linux-x64.tar.gz</p>\n</blockquote>\n<p>3.配置环境变量<br>(1)首先进入profile所在的目录，并打开profile文件</p>\n<blockquote>\n<p>sudo vim /etc/profile</p>\n</blockquote>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-1edf1c05fdd722b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"进入目录\"></p>\n<p>刚打开文件时的状态：</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-d598990eceda58f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"1.png\"></p>\n<p>回车后输入<code>i</code>进入vim的编辑模式（和windows里面用记事本打开一个道理，只是需要输入i才由命令行进入编辑状态），此时显示插入两字</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-b34a82e040813455.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"插入状态\"></p>\n<p>(2)将鼠标移动文件末尾，配置环境变量，即在文件末尾加上以下几句：</p>\n<blockquote>\n<p>export JAVA_HOME=/opt/software/java/jdk1.8.0_111<br>export JRE_HOME=/opt/software/java/jdk1.8.0_111/jre<br>export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib<br>export PATH=$JAVA_HOME/bin:$JRE_HOME/bin</p>\n</blockquote>\n<p>(3)按键盘左上角Esc键退出编辑状态，输入</p>\n<blockquote>\n<p>:wq</p>\n</blockquote>\n<p>回车，即退出vim编辑器并保存修改内容。<br>(4)使配置生效，输入：</p>\n<blockquote>\n<p>source /etc/profile</p>\n</blockquote>\n<p>(5)验证，这个相信大家都会。成功后将显示jdk的版本号。</p>\n<blockquote>\n<p>javac -version</p>\n</blockquote>\n<h1 id=\"二、eclipse\"><a href=\"#二、eclipse\" class=\"headerlink\" title=\"二、eclipse\"></a>二、eclipse</h1><p>我是在官网稀里糊涂的下载的，就在download的那里，系统会默认下载linux版本的。下载目录选择和jdk的一样，好找。<br>1、进入目录</p>\n<blockquote>\n<p>cd /opt/software</p>\n</blockquote>\n<p>2、解压</p>\n<blockquote>\n<p>tar -zxvf eclipse……..<br>注：省略号部分是完整名称，记不住没事，按Tab键就自动补全了。</p>\n</blockquote>\n<p>3、输入</p>\n<blockquote>\n<p>./eclipse</p>\n</blockquote>\n<p>运行成功。<br>如果常用的话就将其固定在启动器（任务栏），获取按window徽标键，输入eclipse即可运行。</p>\n<h1 id=\"三、MySQL\"><a href=\"#三、MySQL\" class=\"headerlink\" title=\"三、MySQL\"></a>三、MySQL</h1><p>##下载安装mysql<br>很方便，几句话。</p>\n<blockquote>\n<p>sudo apt-get install mysql-server</p>\n<p>sudo apt-get install mysql-client</p>\n<p>sudo apt-get install libmysqlclient-dev</p>\n</blockquote>\n<p>可以参考这篇文章<a href=\"http://www.cnblogs.com/zhuyp1015/p/3561470.html\">ubuntu安装mysql和简单操作</a></p>\n<h2 id=\"如何启动-停止-重启MySQL\"><a href=\"#如何启动-停止-重启MySQL\" class=\"headerlink\" title=\"如何启动/停止/重启MySQL\"></a>如何启动/停止/重启MySQL</h2><p>（在终端输入）<br>1、使用 service 启动：service mysql start</p>\n<p>2、使用 service 停止：service mysql stop</p>\n<p>3、使用 service 重启：service mysql restart</p>\n<p><a href=\"http://www.linuxidc.com/Linux/2016-09/135288.htm\">CentOS7 64位下MySQL5.7安装与配置（YUM）</a></p>\n<h1 id=\"四、c语言\"><a href=\"#四、c语言\" class=\"headerlink\" title=\"四、c语言\"></a>四、c语言</h1><p>(本段系引用别人的原话·<a href=\"http://blog.163.com/zhangjinqing1234@126/blog/static/307302602009538137113/\">原文在这</a>)<br>linux操作系统上面开发程序， 光有了gcc 是不行的,它还需要一个   <code>build-essential</code>软件包。<br>作用是提供编译程序必须软件包的列表信息，也就是说，编译程序有了这个软件包它才知道头文件在哪， 才知道库函数在哪，还会下载依赖的软件包，最后才组成一个开发环境。<br>build-essential 安装方法：</p>\n<blockquote>\n<p>sudo apt-get install build-essential</p>\n</blockquote>\n<p>安装后我测试了一下，很好。<br>在桌面新建一个c语言文件<code>first.c</code></p>\n<blockquote>\n<p>cd 桌面<br>vim first.c</p>\n</blockquote>\n<p>输入i后进行编辑，输入以下代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">#include&lt;stdio.h&gt;</div><div class=\"line\">int main()&#123;</div><div class=\"line\">printf(&quot;hello ubuntu&quot;);</div><div class=\"line\">return 0;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>按<code>Esc</code>退出编辑模式，输入<code>:wq</code>回车保存退出。<br>输入下面一句进行编译</p>\n<blockquote>\n<p>gcc first.c -o first</p>\n</blockquote>\n<p>再输入</p>\n<blockquote>\n<p>./first</p>\n</blockquote>\n<h1 id=\"五、tomcat\"><a href=\"#五、tomcat\" class=\"headerlink\" title=\"五、tomcat\"></a>五、tomcat</h1><p>官网下载，不多说了，选择tar.gz后缀的下载就行了。仍然放在<code>/opt/software</code>目录下。<br>(1)进入文件所在目录</p>\n<blockquote>\n<p>cd /opt/software</p>\n</blockquote>\n<p>(2)解压</p>\n<blockquote>\n<p>tar -zxvf apache-tomcat-7.0.72</p>\n</blockquote>\n<p>(3)修改配置文件<br>进到<code>apache-tomcat-7.0.72/bin</code>目录下</p>\n<blockquote>\n<p>cd bin</p>\n</blockquote>\n<p>打开<code>catalina.sh</code></p>\n<blockquote>\n<p>vim catalina.sh </p>\n</blockquote>\n<p>插入以下代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">JAVA_HOME=/opt/software/java/jdk1.8.0_111</div><div class=\"line\"> JAVA_OPTS=&quot;-server -Xms512m </div><div class=\"line\">-Xmx1024m -XX:PermSize=600M</div><div class=\"line\"> -XX:MaxPermSize=600m</div><div class=\"line\">  -Dcom.sun.management.jmxremote&quot;</div></pre></td></tr></table></figure>\n<p>按下<code>Esc</code>，输入<code>:wq</code>保存退出。<br>(4)修改端口，习惯了用8080端口，默认是8009。<br><code>tomcat7/conf/server.xml</code> 文件里的：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connector port=&quot;8009&quot; </div><div class=\"line\">protocol=&quot;HTTP/1.1&quot;  connectionTimeout=&quot;20000&quot;  redirectPort=&quot;8443&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>将<code>port=&quot;8009&quot;</code>改为<code>port=&quot;8080&quot;</code>，保存。<br>(5)在<code>apache-tomcat-7.0.72/bin</code>运行</p>\n<blockquote>\n<p>sudo ./startup.sh </p>\n</blockquote>\n<p>运行成功。<br>(6)以服务方式启动<br>①. 在/etc/init.d目录下新建文件，命名为tomcat2. 对tomcat文件进行编辑，执行**</p>\n<blockquote>\n<p>  cd /etc/init.d/<br> vi tomcat</p>\n</blockquote>\n<p>将下面代码粘上去<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash  </div><div class=\"line\"># description: Tomcat7 Start Stop Restart  </div><div class=\"line\"># processname: tomcat7  </div><div class=\"line\"># chkconfig: 234 20 80  </div><div class=\"line\">JAVA_HOME=/opt/software/java/jdk1.8.0_111</div><div class=\"line\">export JAVA_HOME  </div><div class=\"line\">PATH=$JAVA_HOME/bin:$PATH  </div><div class=\"line\">export PATH  </div><div class=\"line\">CATALINA_HOME=/usr/local/tomcat</div><div class=\"line\">case $1 in  </div><div class=\"line\">start)  </div><div class=\"line\">sh $CATALINA_HOME/bin/startup.sh  </div><div class=\"line\">;;   </div><div class=\"line\">stop)     </div><div class=\"line\">sh $CATALINA_HOME/bin/shutdown.sh  </div><div class=\"line\">;;   </div><div class=\"line\">restart)  </div><div class=\"line\">sh $CATALINA_HOME/bin/shutdown.sh  </div><div class=\"line\">sh $CATALINA_HOME/bin/startup.sh  </div><div class=\"line\">;;   </div><div class=\"line\">esac      </div><div class=\"line\">exit 0</div></pre></td></tr></table></figure></p>\n<p>②. 按ESC退出，并</p>\n<blockquote>\n<p>：wq</p>\n</blockquote>\n<p>③. 设置tomcat的文件属性，把tomcat 修改为可运行的文件，命令参考如下</p>\n<blockquote>\n<p>chmod a+x tomcat</p>\n</blockquote>\n<p>④. 设置服务运行级别</p>\n<blockquote>\n<p>chkconfig –add tomcat</p>\n</blockquote>\n<p>⑤. 服务就添加成功了<br>然后用 chkconfig –list 查看，在服务列表里就会出现自定义的服务了</p>\n<blockquote>\n<p> chkconfig –list</p>\n</blockquote>\n<p>⑥. 测试</p>\n<blockquote>\n<p>service tomcat start<br>service tomcat stop<br>service tomcat restart<br>service tomcat status</p>\n</blockquote>\n<h1 id=\"六、jdbc连接桥\"><a href=\"#六、jdbc连接桥\" class=\"headerlink\" title=\"六、jdbc连接桥\"></a>六、jdbc连接桥</h1><p><a href=\"http://dev.mysql.com/downloads/connector/j/6.0.html\">下载地址</a></p>\n<p>下载*.tar.gz格式的文件，解压，将其中的<code>mysql-connector-java-6.0.5-bin.jar</code>文件拿出来，就和平常使用的一样了，加载到程序中就行了。</p>\n<h1 id=\"七、centOs安装postgreSQL\"><a href=\"#七、centOs安装postgreSQL\" class=\"headerlink\" title=\"七、centOs安装postgreSQL\"></a>七、centOs安装postgreSQL</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"># vi /etc/yum.repos.d/CentOS-Base.repo</div><div class=\"line\"># yum localinstall http://yum.postgresql.org/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-2.noarch.rpm</div><div class=\"line\"># yum list postgres*</div><div class=\"line\"># yum install -y postgresql95-server.x86_64 postgresql95-contrib.x86_64 postgresql95-libs.x86_64 </div><div class=\"line\"># /usr/pgsql-9.5/bin/postgresql95-setup initdb</div><div class=\"line\"># systemctl enable postgresql-9.5.service</div><div class=\"line\"># systemctl start postgresql-9.5.service</div></pre></td></tr></table></figure>\n<p>详见<a href=\"http://www.linuxidc.com/Linux/2014-05/101725.htm\">CentOS 6.3下PostgreSQL 的安装与配置</a><br>或者<a href=\"http://www.jianshu.com/p/7e95fd0bc91a\">CentOS 7 安装、配置、使用 PostgreSQL 9.5（一）安装及基础配置</a></p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>总结一下，其实ubuntu下配置这些东西并不难，以前只是在虚拟机上接触了以下ubuntu，当时感觉很难的样子。现在的ubuntu界面很友好，操作比起windows也复杂不太多。<br>     主要困惑是因为没弄清ubuntu下目录结构和vim部分，其实文件结构和windows类似，而vim就相当于是一个更加强大、功能丰富的记事本（编辑器），凡是用vim操作的部分都可以按照windows下的方式，找到文件，直接打开进行操作。<br>不过ubuntu下的权限更为苛刻，修改文件都需要管理员权限，可以输入</p>\n<blockquote>\n<p>sudo nautilus</p>\n</blockquote>\n<p>来以管理员身份打开文件夹，然后复制、剪切、粘贴、删除、移动、修改、安装等等都当做win7、win8来操作即可。</p>"},{"title":"ubuntu安装及初始化","date":"2016-12-11T05:35:00.000Z","_content":"\n参考文章[Ubuntu 16.04 U盘安装图文教程](http://www.linuxidc.com/Linux/2016-04/130520.htm)\n* 问题\n\n![图1.jpg](http://upload-images.jianshu.io/upload_images/1837782-2729c17d5a1914d9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n<!-- more -->\n按照以上文章结束时，我的电脑提示`无法将grub-efi-amd64-signed安装到/target/`，重装好多次都是卡在这一步。\n解决\n之前的步骤中电脑会提示电脑是以UEFI启动什么的，不选在UEFI模式中运行，选择后退一项，也能正常安装。（当时没有截图，现在记不清了）\n* 后续\n1.创建root用户\n> sudo passwd\n2. 更新系统\n> sudo apt update\n> sudo apt dist-upgrade\n\n3.配置输入法快捷键\n4.设置`系统设置-键盘-快捷键-启动器-启动终端`快捷键为`super+R`\n5.安装vim\n\n> sudo apt install vim\n\n配置\n\n> sudo vim /etc/vim/vimrc\n\n插入(用jk代替Esc退出编辑模式)\n\n> :imap jk <Esc> \n\n6.将文件夹改为英文路径\n首先修改现有主文件夹下各文件夹名称：\ndesktop、 documents、 download、 music、 pictures、 public、  video ……\n然后编辑配置文件：\n\n> gedit ~/.config/user-dirs.dirs\n\n把文件夹指向改掉，例如：\n```xml\nXDG_DESKTOP_DIR=\"$HOME/desktop\"\nXDG_DOWNLOAD_DIR=\"$HOME/download\"\nXDG_PUBLICSHARE_DIR=\"$HOME/public\"\nXDG_DOCUMENTS_DIR=\"$HOME/documents\"\nXDG_MUSIC_DIR=\"$HOME/music\"\nXDG_PICTURES_DIR=\"$HOME/pictures\"\nXDG_VIDEOS_DIR=\"$HOME/video\"\n```\n\n7.在系统启动界面，Win8.1系统处于最后一项，如果需要让Win8.1处于第一项，可以这样设置：\n\n1、进入Ubuntu系统。\n\n2、Ctrl+Alt+T打开终端，输入“sudo nautilus”，以root权限打开资源管理器。\n\n3、找到“计算机/etc/grub.d/30_os-prober”文件，将其名称修改为“06_os-prober”即可：\n\n8.ubuntu16.04的软件中心应该是有bug，安装不了第三方.deb文件，我们只有使用dpkg -i 或者gdebi的方式安装，我使用的是后者，因为后者功能更加强大。要使用gdebi命令先要安装它：\n\n> sudo apt install gdebi-core\n\n\n然后就可以安装.deb文件了。安装过程如下：先切换到你下载的lantern的安装文件目录下，直接使用：\n\n> sudo gdebi xxxxxx.deb\n\n9.安装git\n> sudo apt-get install git\n\n10.安装lantern\n> git clone [https://github.com/getlantern/lantern.git](https://github.com/getlantern/lantern.git)\n> cd lantern\n> make lantern\n> ./lantern\n","source":"_posts/ubuntu安装及初始化.md","raw":"title: ubuntu安装及初始化\ncategories: Linux\ntags: ubuntu\ndate: 2016-12-11 13:35\n---\n\n参考文章[Ubuntu 16.04 U盘安装图文教程](http://www.linuxidc.com/Linux/2016-04/130520.htm)\n* 问题\n\n![图1.jpg](http://upload-images.jianshu.io/upload_images/1837782-2729c17d5a1914d9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n<!-- more -->\n按照以上文章结束时，我的电脑提示`无法将grub-efi-amd64-signed安装到/target/`，重装好多次都是卡在这一步。\n解决\n之前的步骤中电脑会提示电脑是以UEFI启动什么的，不选在UEFI模式中运行，选择后退一项，也能正常安装。（当时没有截图，现在记不清了）\n* 后续\n1.创建root用户\n> sudo passwd\n2. 更新系统\n> sudo apt update\n> sudo apt dist-upgrade\n\n3.配置输入法快捷键\n4.设置`系统设置-键盘-快捷键-启动器-启动终端`快捷键为`super+R`\n5.安装vim\n\n> sudo apt install vim\n\n配置\n\n> sudo vim /etc/vim/vimrc\n\n插入(用jk代替Esc退出编辑模式)\n\n> :imap jk <Esc> \n\n6.将文件夹改为英文路径\n首先修改现有主文件夹下各文件夹名称：\ndesktop、 documents、 download、 music、 pictures、 public、  video ……\n然后编辑配置文件：\n\n> gedit ~/.config/user-dirs.dirs\n\n把文件夹指向改掉，例如：\n```xml\nXDG_DESKTOP_DIR=\"$HOME/desktop\"\nXDG_DOWNLOAD_DIR=\"$HOME/download\"\nXDG_PUBLICSHARE_DIR=\"$HOME/public\"\nXDG_DOCUMENTS_DIR=\"$HOME/documents\"\nXDG_MUSIC_DIR=\"$HOME/music\"\nXDG_PICTURES_DIR=\"$HOME/pictures\"\nXDG_VIDEOS_DIR=\"$HOME/video\"\n```\n\n7.在系统启动界面，Win8.1系统处于最后一项，如果需要让Win8.1处于第一项，可以这样设置：\n\n1、进入Ubuntu系统。\n\n2、Ctrl+Alt+T打开终端，输入“sudo nautilus”，以root权限打开资源管理器。\n\n3、找到“计算机/etc/grub.d/30_os-prober”文件，将其名称修改为“06_os-prober”即可：\n\n8.ubuntu16.04的软件中心应该是有bug，安装不了第三方.deb文件，我们只有使用dpkg -i 或者gdebi的方式安装，我使用的是后者，因为后者功能更加强大。要使用gdebi命令先要安装它：\n\n> sudo apt install gdebi-core\n\n\n然后就可以安装.deb文件了。安装过程如下：先切换到你下载的lantern的安装文件目录下，直接使用：\n\n> sudo gdebi xxxxxx.deb\n\n9.安装git\n> sudo apt-get install git\n\n10.安装lantern\n> git clone [https://github.com/getlantern/lantern.git](https://github.com/getlantern/lantern.git)\n> cd lantern\n> make lantern\n> ./lantern\n","slug":"ubuntu安装及初始化","published":1,"updated":"2017-04-22T01:20:32.743Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1u7zpos000f99pv5lnodrfo","content":"<p>参考文章<a href=\"http://www.linuxidc.com/Linux/2016-04/130520.htm\" target=\"_blank\" rel=\"external\">Ubuntu 16.04 U盘安装图文教程</a></p>\n<ul>\n<li>问题</li>\n</ul>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-2729c17d5a1914d9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图1.jpg\"><br><a id=\"more\"></a><br>按照以上文章结束时，我的电脑提示<code>无法将grub-efi-amd64-signed安装到/target/</code>，重装好多次都是卡在这一步。<br>解决<br>之前的步骤中电脑会提示电脑是以UEFI启动什么的，不选在UEFI模式中运行，选择后退一项，也能正常安装。（当时没有截图，现在记不清了）</p>\n<ul>\n<li>后续<br>1.创建root用户<blockquote>\n<p>sudo passwd</p>\n</blockquote>\n</li>\n</ul>\n<ol>\n<li>更新系统<blockquote>\n<p>sudo apt update<br>sudo apt dist-upgrade</p>\n</blockquote>\n</li>\n</ol>\n<p>3.配置输入法快捷键<br>4.设置<code>系统设置-键盘-快捷键-启动器-启动终端</code>快捷键为<code>super+R</code><br>5.安装vim</p>\n<blockquote>\n<p>sudo apt install vim</p>\n</blockquote>\n<p>配置</p>\n<blockquote>\n<p>sudo vim /etc/vim/vimrc</p>\n</blockquote>\n<p>插入(用jk代替Esc退出编辑模式)</p>\n<blockquote>\n<p>:imap jk <esc> </esc></p>\n</blockquote>\n<p>6.将文件夹改为英文路径<br>首先修改现有主文件夹下各文件夹名称：<br>desktop、 documents、 download、 music、 pictures、 public、  video ……<br>然后编辑配置文件：</p>\n<blockquote>\n<p>gedit ~/.config/user-dirs.dirs</p>\n</blockquote>\n<p>把文件夹指向改掉，例如：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">XDG_DESKTOP_DIR=\"$HOME/desktop\"</div><div class=\"line\">XDG_DOWNLOAD_DIR=\"$HOME/download\"</div><div class=\"line\">XDG_PUBLICSHARE_DIR=\"$HOME/public\"</div><div class=\"line\">XDG_DOCUMENTS_DIR=\"$HOME/documents\"</div><div class=\"line\">XDG_MUSIC_DIR=\"$HOME/music\"</div><div class=\"line\">XDG_PICTURES_DIR=\"$HOME/pictures\"</div><div class=\"line\">XDG_VIDEOS_DIR=\"$HOME/video\"</div></pre></td></tr></table></figure></p>\n<p>7.在系统启动界面，Win8.1系统处于最后一项，如果需要让Win8.1处于第一项，可以这样设置：</p>\n<p>1、进入Ubuntu系统。</p>\n<p>2、Ctrl+Alt+T打开终端，输入“sudo nautilus”，以root权限打开资源管理器。</p>\n<p>3、找到“计算机/etc/grub.d/30_os-prober”文件，将其名称修改为“06_os-prober”即可：</p>\n<p>8.ubuntu16.04的软件中心应该是有bug，安装不了第三方.deb文件，我们只有使用dpkg -i 或者gdebi的方式安装，我使用的是后者，因为后者功能更加强大。要使用gdebi命令先要安装它：</p>\n<blockquote>\n<p>sudo apt install gdebi-core</p>\n</blockquote>\n<p>然后就可以安装.deb文件了。安装过程如下：先切换到你下载的lantern的安装文件目录下，直接使用：</p>\n<blockquote>\n<p>sudo gdebi xxxxxx.deb</p>\n</blockquote>\n<p>9.安装git</p>\n<blockquote>\n<p>sudo apt-get install git</p>\n</blockquote>\n<p>10.安装lantern</p>\n<blockquote>\n<p>git clone <a href=\"https://github.com/getlantern/lantern.git\" target=\"_blank\" rel=\"external\">https://github.com/getlantern/lantern.git</a><br>cd lantern<br>make lantern<br>./lantern</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>参考文章<a href=\"http://www.linuxidc.com/Linux/2016-04/130520.htm\">Ubuntu 16.04 U盘安装图文教程</a></p>\n<ul>\n<li>问题</li>\n</ul>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-2729c17d5a1914d9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图1.jpg\"><br>","more":"<br>按照以上文章结束时，我的电脑提示<code>无法将grub-efi-amd64-signed安装到/target/</code>，重装好多次都是卡在这一步。<br>解决<br>之前的步骤中电脑会提示电脑是以UEFI启动什么的，不选在UEFI模式中运行，选择后退一项，也能正常安装。（当时没有截图，现在记不清了）</p>\n<ul>\n<li>后续<br>1.创建root用户<blockquote>\n<p>sudo passwd</p>\n</blockquote>\n</li>\n</ul>\n<ol>\n<li>更新系统<blockquote>\n<p>sudo apt update<br>sudo apt dist-upgrade</p>\n</blockquote>\n</li>\n</ol>\n<p>3.配置输入法快捷键<br>4.设置<code>系统设置-键盘-快捷键-启动器-启动终端</code>快捷键为<code>super+R</code><br>5.安装vim</p>\n<blockquote>\n<p>sudo apt install vim</p>\n</blockquote>\n<p>配置</p>\n<blockquote>\n<p>sudo vim /etc/vim/vimrc</p>\n</blockquote>\n<p>插入(用jk代替Esc退出编辑模式)</p>\n<blockquote>\n<p>:imap jk <Esc> </p>\n</blockquote>\n<p>6.将文件夹改为英文路径<br>首先修改现有主文件夹下各文件夹名称：<br>desktop、 documents、 download、 music、 pictures、 public、  video ……<br>然后编辑配置文件：</p>\n<blockquote>\n<p>gedit ~/.config/user-dirs.dirs</p>\n</blockquote>\n<p>把文件夹指向改掉，例如：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">XDG_DESKTOP_DIR=\"$HOME/desktop\"</div><div class=\"line\">XDG_DOWNLOAD_DIR=\"$HOME/download\"</div><div class=\"line\">XDG_PUBLICSHARE_DIR=\"$HOME/public\"</div><div class=\"line\">XDG_DOCUMENTS_DIR=\"$HOME/documents\"</div><div class=\"line\">XDG_MUSIC_DIR=\"$HOME/music\"</div><div class=\"line\">XDG_PICTURES_DIR=\"$HOME/pictures\"</div><div class=\"line\">XDG_VIDEOS_DIR=\"$HOME/video\"</div></pre></td></tr></table></figure></p>\n<p>7.在系统启动界面，Win8.1系统处于最后一项，如果需要让Win8.1处于第一项，可以这样设置：</p>\n<p>1、进入Ubuntu系统。</p>\n<p>2、Ctrl+Alt+T打开终端，输入“sudo nautilus”，以root权限打开资源管理器。</p>\n<p>3、找到“计算机/etc/grub.d/30_os-prober”文件，将其名称修改为“06_os-prober”即可：</p>\n<p>8.ubuntu16.04的软件中心应该是有bug，安装不了第三方.deb文件，我们只有使用dpkg -i 或者gdebi的方式安装，我使用的是后者，因为后者功能更加强大。要使用gdebi命令先要安装它：</p>\n<blockquote>\n<p>sudo apt install gdebi-core</p>\n</blockquote>\n<p>然后就可以安装.deb文件了。安装过程如下：先切换到你下载的lantern的安装文件目录下，直接使用：</p>\n<blockquote>\n<p>sudo gdebi xxxxxx.deb</p>\n</blockquote>\n<p>9.安装git</p>\n<blockquote>\n<p>sudo apt-get install git</p>\n</blockquote>\n<p>10.安装lantern</p>\n<blockquote>\n<p>git clone <a href=\"https://github.com/getlantern/lantern.git\">https://github.com/getlantern/lantern.git</a><br>cd lantern<br>make lantern<br>./lantern</p>\n</blockquote>"},{"title":"ubuntu常用命令及部分快捷键","date":"2016-12-10T16:00:00.000Z","_content":"\n\n# 查看系统和硬件相关信息的命令简介\n### 查看内核/操作系统/CPU信息\n` # uname -a `\n` # head -n 1 /etc/issue` # 查看操作系统版本\n\n`# cat /etc/redhat-release` # 查看操作系统版本（redhat，centos，fedora）\n\n`# cat /proc/cpuinfo` # 查看CPU信息\n\n`# hostname` # 查看计算机名\n\n`# lspci -tv`# 列出所有PCI设备\n\n`# lsusb -tv `# 列出所有USB设备\n\n<!-- more -->\n\n`# lsmod `# 列出加载的内核模块\n\n`# env` # 查看环境变量资源\n\n`# free -m`# 查看内存使用量和交换区使用量\n\n`# df -h` # 查看各分区使用情况\n\n`# du -sh <目录名>` # 查看指定目录的大小\n\n`# grep MemTotal /proc/meminfo` # 查看内存总量\n\n`# grep MemFree /proc/meminfo` # 查看空闲内存量\n\n`# uptime` # 查看系统运行时间、用户数、负载\n\n`# cat /proc/loadavg` # 查看系统负载磁盘和分区\n\n`# mount | column -t `# 查看挂接的分区状态\n\n`# fdisk -l` # 查看所有分区\n\n`# swapon -s` # 查看所有交换分区\n\n`# hdparm -i /dev/hda` # 查看磁盘参数(仅适用于IDE设备)\n\n`# dmesg | grep IDE` # 查看启动时IDE设备检测状况网络\n\n`# ifconfig` # 查看所有网络接口的属性\n\n`# iptables -L` # 查看防火墙设置\n\n`# route -n` # 查看路由表\n\n`# netstat -lntp` # 查看所有监听端口\n\n`# netstat -antp` # 查看所有已经建立的连接\n\n`# netstat -s` # 查看网络统计信息进程\n\n`# ps -ef` # 查看所有进程\n\n`# top` # 实时显示进程状态用户\n\n`# w` # 查看活动用户\n\n`# id <用户名>` # 查看指定用户信息\n\n`# last` # 查看用户登录日志\n\n`# cut -d: -f1 /etc/passwd` # 查看系统所有用户\n\n`# cut -d: -f1 /etc/group` # 查看系统所有组\n\n`# crontab -l` # 查看当前用户的计划任务服务\n\n`# chkconfig –list` # 列出所有系统服务\n\n`# chkconfig –list | grep on` # 列出所有启动的系统服务程序\n\n`# rpm -qa` # 查看所有安装的软件包\n\n# VI模式切换和退出\n\n## 进入vi编辑文件内容：\n\nvi 文件名\n\nvi 目录/文件名\n\nvi进入编辑模式：\n\nShift+字母i\n\n## 从编辑模式返回命令模式：\n\nESC\n\n## 从命令模式vi退出：\n\n:w 保存文件但不退出vi\n\n:w file 将修改另外保存到file中，不退出vi\n\n:w! 强制保存，不推出vi\n\n:wq 保存文件并退出vi\n\n:wq! 强制保存文件，并退出vi\n\n:q 不保存文件，退出vi\n\n:q! 不保存文件，强制退出vi\n\n:e! 放弃所有修改，从上次保存文件开始再编辑\n\n*注意：千万别将英文冒号”:”敲成中文冒号”：”。*\n\nVI前进后退操作\n\n在vi中按u可以撤销一次操作\n\nu 撤销上一步的操作\n\nCtrl+r 恢复上一步被撤销的操作\n\n注意：\n\n如果你输入“u”两次，你的文本恢复原样，那应该是你的Vim被配置在Vi兼容模式了。\n\n# 重做\n\n如果你撤销得太多，你可以输入CTRL-R（redo）回退前一个命令。换句话说，它撤销一个撤销。要看执行的例子，输入CTRL-R两次。字符A和它后面的空格就出现了：\n\nyoung intelligent turtle\n\n有一个特殊版本的撤销命令：“U”（行撤销）。行撤销命令撤销所有在前一个编辑行\n\n上的操作。 输入这些命令两次取消前一个“U”：\n\nA very intelligent turtle\n\nxxxx 删除very\n\nA intelligent turtle\n\nxxxxxx 删除turtle\n\nA intelligent\n\n用“U”恢复行\n\nA very intelligent turtle\n\n用“u”撤销“U”\n\nA intelligent\n\n“U”命令自己改变自己，“u”命令撤销操作，CTRL-R命令重做操作。这有点乱，但不用\n\n担心，用“u”和CTRL-R命令你可以切换到任何状态。\n\n流行的文本编辑器通常都有前进和后退功能，可以在文件中曾经浏览过的位置之间来回移动。在 vim 中使用 Ctrl-O 执行后退，使用 Ctrl-I 执行前进。\n\n相关帮助： :help CTRL-O :help CTRL-I :help jump-motions\n\n# VI查找内容\n\n使用vi编辑器编辑长文件时，常常是头昏眼花，也找不到需要更改的内容。\n\n这时，使用查找功能尤为重要。\n\n方法如下：\n\n1、命令模式下输入“/字符串”，例如“/Section 3”。\n\n2、如果查找下一个，按“n”即可。\n\n要自当前光标位置向上搜索，请使用以下命令：\n\n/pattern Enter\n\n其中，pattern表示要搜索的特定字符序列。\n\n要自当前光标位置向下搜索，请使用以下命令：\n\n?pattern Enter\n\n# Linux文件权限介绍\n\nr:read就是读权限 –数字4表示\n\nw:write就是写权限 –数字2表示\n\nx:excute就是执行权限 –数字1表示\n\n权限表示一共需要占9个字符的：— — —\n\n前三个字符表示用户权限，中间三个表示用户所在的组权限，最后三个表示其他用户权限\n\n例子：rw-r–r–\n\nrw-是说用户有读、写权，没有运行权，接着的r–表示用户组只有读权限，没有写入、运行权，最后的r–指其他用户只有读权限，没有写入、运行权。\n\n用数字表示就是644。\n\n例子：777\n\n777就是rwxrwxrwx，意思是用户、用户组和其他用户都有最高权限。\nLinux下scp的用法\n\n#scp命令\n\nscp就是secure copy，一个在linux下用来进行远程拷贝文件的命令。\n\n有时我们需要获得远程服务器上的某个文件，该服务器既没有配置ftp服务器，也没有做共享，无法通过常规途径获得文件时，只需要通过简单的scp命令便可达到目的。\n\n## 将本机文件复制到远程服务器上\n\n> #scp /home/administrator/news.txt root@192.168.6.129:/etc/squid\n\n/home/administrator/      本地文件的绝对路径\n\nnews.txt                          要复制到服务器上的本地文件\n\nroot                                 通过root用户登录到远程服务器（也可以使用其他拥有同等权限的用户）\n\n192.168.6.129                远程服务器的ip地址（也可以使用域名或机器名）\n\n/etc/squid                       将本地文件复制到位于远程服务器上的路径\n\n\n## 将远程服务器上的文件复制到本机\n\n> #scp remote@www.abc.com:/usr/local/sin.sh /home/administrator\n\nremote                       通过remote用户登录到远程服务器（也可以使用其他拥有同等权限的用户）\n\nwww.abc.com              远程服务器的域名（当然也可以使用该服务器ip地址）\n\n/usr/local/sin.sh           欲复制到本机的位于远程服务器上的文件\n\n/home/administrator  将远程文件复制到本地的绝对路径\n\n注意两点：\n\n1.如果远程服务器防火墙有特殊限制，scp便要走特殊端口，具体用什么端口视情况而定，命令格式如下：\n\n> #scp -p 4588 remote@www.abc.com:/usr/local/sin.sh /home/administrator\n\n2.使用scp要注意所使用的用户是否具有可读取远程服务器相应文件的权限。\n\n# 压缩和解压\n\n## zip命令\n\n　　解压1：unzip FileName.zip\n\n　　解压2：unzip FileName.zip -d TargetDir\n\n　　压缩1：zip -r TargetDir/FileName.zip DirName\n\n　　压缩2：zip -r TargetDir/FileName.zip DirName/*\n\n　　压缩3：zip -r TargetDir/FileName.zip File1 File2 File3\n\n　　注意，zip解压适用于解压jar文件\n\n## tar命令\n\n　　解包：tar zxvf FileName.tar\n\n　　打包：tar czvf FileName.tar DirName\n\n## .tar.gz 和 .tgz\n\n　　解压：tar zxvf FileName.tar.gz\n\n　　压缩：tar zcvf FileName.tar.gz DirName\n\n## .tar.bz\n\n　　解压：tar jxvf FileName.tar.bz\n\n## .tar.bz2\n\n　　解压：tar jxvf FileName.tar.bz2\n\n　　压缩：tar jcvf FileName.tar.bz2 DirName\n\n## .tar.Z\n\n　　解压：tar Zxvf FileName.tar.Z\n\n　　压缩：tar Zcvf FileName.tar.Z DirName\n\n## gz命令\n\n　　解压1：gunzip FileName.gz\n\n　　解压2：gzip -d FileName.gz\n\n　　压缩：gzip FileName\n\n## bz2命令\n\n　　解压1：bzip2 -d FileName.bz2\n\n　　解压2：bunzip2 FileName.bz2\n\n　　压缩： bzip2 -z FileName\n\n## bz命令\n\n　　解压1：bzip2 -d FileName.bz\n\n　　解压2：bunzip2 FileName.bz\n\n## Z命令\n\n　　解压：uncompress FileName.Z\n\n　　压缩：compress FileName\n\n## 7z命令(如果没有7z命令请先执行“yum install p7zip”)\n\n解压：7z x FileName.7z -o/home/zhichao\n\n//注意，x参数解压会自动生成与压缩文件名相同的目录，-o表示输出目录，其与目录路径之间没有空格，上面命令会解压FileName.7z到home/zhichao/FileName目录中。\n\n压缩：7z a FileName.7z DirName\n\n# grep命令\n\ngrep命令使用正则表达式检索符合条件的内容，一般与其他命令组合使用。\n\n格式：\n\ngrep 参数 条件\n\n参数：\n```\n-a --text #不要忽略二进制的数据。\n\n-A<显示行数> --after-context=<显示行数> #除了显示符合范本样式的那一列之外，并显示该行之后的内容。\n\n-b --byte-offset #在显示符合样式的那一行之前，标示出该行第一个字符的编号。\n\n-B<显示行数> --before-context=<显示行数> #除了显示符合样式的那一行之外，并显示该行之前的内容。\n\n-c --count #计算符合样式的列数。\n\n-C<显示行数> --context=<显示行数>或-<显示行数> #除了显示符合样式的那一行之外，并显示该行之前后的内容。\n\n-d <动作> --directories=<动作> #当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。\n\n-e<范本样式> --regexp=<范本样式> #指定字符串做为查找文件内容的样式。\n\n-E --extended-regexp #将样式为延伸的普通表示法来使用。\n\n-f<规则文件> --file=<规则文件> #指定规则文件，其内容含有一个或多个规则样式，让grep查找符合规则条件的文件内容，格式为每行一个规则样式。\n\n-F --fixed-regexp #将样式视为固定字符串的列表。\n\n-G --basic-regexp #将样式视为普通的表示法来使用。\n\n-h --no-filename #在显示符合样式的那一行之前，不标示该行所属的文件名称。\n\n-H --with-filename #在显示符合样式的那一行之前，表示该行所属的文件名称。\n\n-i --ignore-case #忽略字符大小写的差别。\n\n-l --file-with-matches #列出文件内容符合指定的样式的文件名称。\n\n-L --files-without-match #列出文件内容不符合指定的样式的文件名称。\n\n-n --line-number #在显示符合样式的那一行之前，标示出该行的列数编号。\n\n-q --quiet或--silent #不显示任何信息。\n\n-r --recursive #此参数的效果和指定“-d recurse”参数相同。\n\n-s --no-messages #不显示错误信息。\n\n-v --revert-match #显示不包含匹配文本的所有行。\n\n-V --version #显示版本信息。\n\n-w --word-regexp #只显示全字符合的列。\n\n-x --line-regexp #只显示全列符合的列。\n\n-y #此参数的效果和指定“-i”参数相同。\n```\n示例：\n\n从文件info.txt中读取关键词system进行搜索\n\ncat /home/usr/download/info.txt | grep -f system\n\n从文件info.txt中读取关键词system进行搜索并显示行号\n\ncat /home/usr/download/info.txt | grep -nf system\n\n# cat命令\n\ncat命令用来显示文件内容，或者将几个文件连接起来显示，或者从标准输入读取内容并显示，它常与重定向符号配合使用。\n\n格式：\n\ncat 参数 文件\n\n参数：\n```\n-A, --show-all  等价于 -vET\n\n-b, --number-nonblank 对非空输出行编号\n\n-e   等价于 -vE\n\n-E, --show-ends  在每行结束处显示 $\n\n-n, --number 对输出的所有行编号,由1开始对所有输出的行数编号\n\n-s, --squeeze-blank 有连续两行以上的空白行，就代换为一行的空白行\n\n-t   与 -vT 等价\n\n-T, --show-tabs  将跳格字符显示为 ^I\n\n-u   (被忽略)\n\n-v, --show-nonprinting 使用 ^ 和 M- 引用，除了 LFD 和 TAB 之外\n```\n示例：\n\n把 log.php 的文件内容加上行号后输出到new_log.php这个文件中\n\ncat -n /data/www/project/log.php /data/www/project/new_log.php\n\n# ps命令\n\nps命令是process status的缩写，顾名思义就是查看系统中所有进程状态状态。\n\nps命令查看的程序状态并不是动态连续的，如果想对进程实施监控，请用top命令。\n\n如果直接用ps命令，会显示所有进程的状态，通常结合grep命令查看某进程的状态。\n\n格式：\n\nps 参数\n\n参数：\n```xml\na 显示所有进程\n\n-a 显示同一终端下的所有程序\n\n-A 显示所有进程\n\nc 显示进程的真实名称\n\n-N 反向选择\n\n-e 等于“-A”\n\ne 显示环境变量\n\nf 显示程序间的关系\n\n-H 显示树状结构\n\nr 显示当前终端的进程\n\nT 显示当前终端的所有程序\n\nu 指定用户的所有进程\n\n-au 显示较详细的资讯\n\n-aux 显示所有包含其他使用者的行程\n```\n示例：\n\n显示java相关程序\n\nps aux|grep java\n\n显示httpd相关程序\n\nps aux|grep httpd\n\n查看正在使用8080端口的程序\n\nps -ef|grep 8080\n\n# fuser 命令\n\nfuser用于查找正在使用指定的某个文件、挂载点、网络端口的进程的详细信息。\n\n格式：\n\nfuser 参数 文件或挂载点或网络端口\n\n参数：\n```xml\na 显示所有命令行中指定的文件，默认情况下被访问的文件才会被显示。\n\n-c 和-m一样，用于POSIX兼容。\n\n-d 暗示使用了 -c 和 -x 标志。关于任何与文件系统（自父目录删除的）无链接的打开文件的报告。当与 -V 标志一起使用时，它也会报告被删除文件的节点号和大小。\n\n-f 仅对文件的打开实例报告。\n\n-i 杀掉进程之前询问用户，如果没有-k这个选项会被忽略。\n\n-k 杀掉访问文件的进程。如果没有指定-signal就会发送SIGKILL信号。\n\n-l 列出所有已知的信号名称。\n\n-m name 指定一个挂载文件系统上的文件或者被挂载的块设备（名称name）。这样所有访问这个文件或者文件系统的进程都会被列出来。如果指定的是一个目录会自动转换成,并使用所有挂载在那个目录下面的文件系统。\n\n-n space 指定一个不同的命名空间(space).这里支持不同的空间文件(文件名，此处默认)、tcp(本地tcp端口)、udp(本地udp端口)。对于端口， 可以指定端口号或者名称，如果不会引起歧义那么可以使用简单表示的形式，例如：name/space (即形如:80/tcp之类的表示)。\n\n-s 静默模式，这时候-u,-v会被忽略。-a不能和-s一起使用。\n\n-signal 使用指定的信号，而不是用SIGKILL来杀掉进程。可以通过名称或者号码来表示信号(例如-HUP,-1),这个选项要和-k一起使用，否则会被忽略。\n\n-u 在每个PID后面添加进程拥有者的用户名称。\n\n-v 详细模式。输出似ps命令的输出，包含PID,USER,COMMAND等许多域,如果是内核访问的那么PID为kernel. -V 输出版本号。\n\n-x 与 -c 或 -f 连用，报告除标准 fuser 输出以外的可执行的和可载入的对象。\n\n-4 使用IPV4套接字,不能和-6一起应用，只在-n的tcp和udp的命名存在时不被忽略。\n\n-6 使用IPV6套接字,不能和-4一起应用，只在-n的tcp和udp的命名存在时不被忽略。\n```\n示例：\n\n查看和关闭正在使用readme.txt文件的程序\n\nfuser -m -v readme.txt\n\nfuser -m -k readme.txt\n\n查看和关闭正在使用80端口的程序\n\nfuser -n -v tcp 80\n\nfuser -n -k tcp 80\n\nchown命令\n\nchown命令将指定文件或文件夹的拥有者改为指定的用户或组，用户可以是用户名或者用户ID，组可以是组名或者组ID，文件是以空格分开的要改变权限的文件列表，支持通配符。\n\n格式：\n\n# chown 参数 用户 文件\n\n参数：\n```xml\n-c 显示更改的部分的信息\n\n-f 忽略错误信息\n\n-h 修复符号链接\n\n-R 处理指定目录以及其子目录下的所有文件\n\n-v 显示详细的处理信息\n\n-deference 作用于符号链接的指向，而不是链接文件本身\n```\n示例：\n\n将目录/data/www/project/下的所有文件和目录的拥有者都修改为apache账户。\n\nchown -R apache.apache /data/www/project/\n\n# chmod命令\n\nchmod命令用于改变linux系统文件或目录的访问权限，用它控制文件或目录的访问权限。\n\nLinux系统中的每个文件和目录都有访问许可权限，用它来确定谁可以通过何种方式对文件和目录进行访问和操作。\n\n格式：\n\nchmod 参数 权限模式 文件\n\n参数\n```\n-c 当发生改变时，报告处理信息\n\n-f 错误信息不输出\n\n-R 处理指定目录以及其子目录下的所有文件\n\n-v 运行时显示详细处理信息\n```\n示例：\n\n将目录/data/www/project/下的所有文件和目录的访问权限修改为“当前用户、当前用户组和其他用户都可读可写可执行”的权限。\n\nchown -R 777 /data/www/project/\n\n# kill命令\n\nkill命令用于关闭指定进程。\n\n格式：\n\nkill 参数 信号 进程ID\n\n参数：\n```xml\n-s 指定发送信号\n\n-l 根据信号名显示信号编号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称\n\n-a 当处理当前进程时，不限制命令名和进程号的对应关系\n\n-p 指定kill 命令只打印相关进程的进程号，而不发送任何信号\n\n-u 指定用户\n```\n# 信号：\n\n## 信号名 信号编号 信号含义\n\nHUP 1 终端断线\n\nINT 2 中断\n\nQUIT 3 退出\n\nTERM 15 终止\n\nKILL 9 强制终止\n\nCONT 18 继续（与STOP相反）\n\nSTOP 19 暂停（\n\n示例：\n\n显示信号KILL的信号编号\n\nkill -l KILL\n\n关闭apache用户下所有进程\n\nkill -u apache.apache\n\n强制关闭进程ID为1937的进程，参数s可以省略。\n\nkill -s 9 1937\n\nkill -9 1937\n\n# top命令\n\ntop命令查看系统中各个进程的资源占用状况，默认使用cpu占用来排序显示，top命令显示的结果是实时的。\n\n格式：\n\ntop 参数\n\n参数：\n```xml\n-b 批处理\n\n-c 显示完整的治命令\n\n-i<时间> 设置间隔时间\n\n-I 忽略失效过程\n\n-p<进程号> 指定进程\n\n-n<次数> 循环显示的次数\n\n-s 保密模式\n\n-S 累积模式\n\n-u<用户名> 指定用户名\n```\n示例：\n\n查看所有程序资源占用状况\n\ntop\n\n查看apache用户所有程序资源占用状况\n\ntop -u apache.apache\n\n# find命令\n\n在指定目录中查找指定条件的文件或文件夹。\n\n格式：\n\nfind 目录路径 选项 查找条件\n\n选项：\n```xml\n-name 按照文件名查找文件。\n\n-perm 按照文件权限来查找文件。\n\n-prune 使用这一选项可以使find命令不在当前指定的目录中查找，如果同时使用-depth选项，那么-prune将被find命令忽略。\n\n-user 按照文件属主来查找文件。\n\n-group 按照文件所属的组来查找文件。\n\n-mtime -n +n 按照文件的更改时间来查找文件， - n表示文件更改时间距现在n天以内，+ n表示文件更改时间距现在n天以前。find命令还有-atime和-ctime 选项，但它们都和-m time选项。\n\n-nogroup 查找无有效所属组的文件，即该文件所属的组在/etc/groups中不存在。\n\n-nouser 查找无有效属主的文件，即该文件的属主在/etc/passwd中不存在。\n\n-newer file1 ! file2 查找更改时间比文件file1新但比文件file2旧的文件。\n\n-type<类型参数> 查找某一类型的文件，诸如：\n\nb - 块设备文件。\n\nd - 目录。\n\nc - 字符设备文件。\n\np - 管道文件。\n\nl - 符号链接文件。\n\nf - 普通文件。\n\n-size n：[c] 查找文件长度为n块的文件，带有c时表示文件长度以字节计。-depth：在查找文件时，首先查找当前目录中的文件，然后再在其子目录中查找。\n\n-fstype：查找位于某一类型文件系统中的文件，这些文件系统类型通常可以在配置文件/etc/fstab中找到，该配置文件中包含了本系统中有关文件系统的信息。\n\n-mount：在查找文件时不跨越文件系统mount点。\n\n-follow：如果find命令遇到符号链接文件，就跟踪至链接所指向的文件。\n\n-cpio：对匹配的文件使用cpio命令，将这些文件备份到磁带设备中。\n\n-amin n 查找系统中最后N分钟访问的文件\n\n-atime n 查找系统中最后n*24小时访问的文件\n\n-cmin n 查找系统中最后N分钟被改变文件状态的文件\n\n-ctime n 查找系统中最后n*24小时被改变文件状态的文件\n\n-mmin n 查找系统中最后N分钟被改变文件数据的文件\n\n-mtime n 查找系统中最后n*24小时被改变文件数据的文件\n```\n示例：\n\n查找 “/”目录（Linux系统根目录）下名称为httpd.conf的文件\n\nfind / -name httpd.conf\n\n查找 “/data/www/project/”目录下所有php文件\n\nfind /data/www/project -name *.php\n\n查找 “.”目录（当前目录）下权限为777的文件\n\nfind . -perm 777\n\n查找 “/”目录下48小时内修改过的文件\n\nfind / -atime -2\n\n查找 “/”目录下所有文件夹\n\nfind / -type d\n\n查找 “/”目录下大于1kb的文件\n\nfind / -size +1000c\n\n# whereis命令\n\nwhereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、说明文件（参数-m）和源代码文件（参数-s），如果省略参数，则返回所有信息。\n\n和find相比，whereis查找的速度非常快，这是因为linux系统会将 系统内的所有文件都记录在一个数据库文件中，当使用whereis和下面即将介绍的locate时，会从数据库中查找数据，而不是像find命令那样，通 过遍历硬盘来查找，效率自然会很高。\n\n但是该数据库文件并不是实时更新，默认情况下时一星期更新一次，因此，我们在用whereis和locate 查找文件时，有时会找到已经被删除的数据，或者刚刚建立文件，却无法查找到，原因就是因为数据库文件没有被更新。\n\nwhereis常用于查找安装程序的安装目录。\n\n格式：\n\nwhereis 参数 程序名\n\n参数：\n```xml\n-b 定位可执行文件。\n\n-m 定位帮助文件。\n\n-s 定位源代码文件。\n\n-u 搜索默认路径下除可执行文件、源代码文件、帮助文件以外的其它文件。\n\n-B 指定搜索可执行文件的路径。\n\n-M 指定搜索帮助文件的路径。\n\n-S 指定搜索源代码文件的路径。\n```\n示例：\n\n查找mysql安装目录\n\nwhereis mysql\n\n# ls命令\n\nls命令用来查看目标目录中所有的子目录和文件信息。\n\n格式：\n\nls 参数 目录名\n\n参数：\n```xml\n-a, –all 列出目录下的所有文件，包括以 . 开头的隐含文件\n\n-A 同-a，但不列出“.”(表示当前目录)和“..”(表示当前目录的父目录)。\n\n-c 配合 -lt：根据 ctime 排序及显示 ctime (文件状态最后更改的时间)配合 -l：显示 ctime 但根据名称排序否则：根据 ctime 排序\n\n-C 每栏由上至下列出项目\n\n–color[=WHEN] 控制是否使用色彩分辨文件。WHEN 可以是'never'、'always'或'auto'其中之一\n\n-d, –directory 将目录象文件一样显示，而不是显示其下的文件。\n\n-D, –dired 产生适合 Emacs 的 dired 模式使用的结果\n\n-f 对输出的文件不进行排序，-aU 选项生效，-lst 选项失效\n\n-g 类似 -l,但不列出所有者\n\n-G, –no-group 不列出任何有关组的信息\n\n-h, –human-readable 以容易理解的格式列出文件大小 (例如 1K 234M 2G)\n\n–si 类似 -h,但文件大小取 1000 的次方而不是 1024\n\n-H, –dereference-command-line 使用命令列中的符号链接指示的真正目的地\n\n–indicator-style=方式 指定在每个项目名称后加上指示符号<方式>：none (默认)，classify (-F)，file-type (-p)\n\n-i, –inode 印出每个文件的 inode 号\n\n-I, –ignore=样式 不印出任何符合 shell 万用字符<样式>的项目\n\n-k 即 –block-size=1K,以 k 字节的形式表示文件的大小。\n\n-l 除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来。\n\n-L, –dereference 当显示符号链接的文件信息时，显示符号链接所指示的对象而并非符号链接本身的信息\n\n-m 所有项目以逗号分隔，并填满整行行宽\n\n-o 类似 -l,显示文件的除组信息外的详细信息。\n\n-r, –reverse 依相反次序排列\n\n-R, –recursive 同时列出所有子目录层\n\n-s, –size 以块大小为单位列出所有文件的大小\n\n-S 根据文件大小排序\n\n–sort=WORD 以下是可选用的 WORD 和它们代表的相应选项：\n\nextension -X status -c\n\nnone -U time -t\n\nsize -S atime -u\n\ntime -t access -u\n\nversion -v use -u\n\n-t 以文件修改时间排序\n\n-u 配合 -lt:显示访问时间而且依访问时间排序\n\n配合 -l:显示访问时间但根据名称排序\n\n否则：根据访问时间排序\n\n-U 不进行排序;依文件系统原有的次序列出项目\n\n-v 根据版本进行排序\n\n-w, –width=COLS 自行指定屏幕宽度而不使用目前的数值\n\n-x 逐行列出项目而不是逐栏列出\n\n-X 根据扩展名排序\n\n-1 每行只列出一个文件\n\n–help 显示此帮助信息并离开\n\n–version 显示版本信息并离开\n```\n示例：\n\n显示当前目录下所有文件和子目录（包括隐藏文件和隐藏目录）的详细信息\n\nls -a -l\n\n显示”/data/www/project”目录下所有文件和子目录（不包括隐藏文件和隐藏目录）的详细信息\n\nls -l /data/www/project\n\n显示”/data/www/project”目录下所有文件和子目录（包括隐藏文件和隐藏目录）的名称\n\nls -a /data/www/project\n\n# sudo命令\n\nsudo命令是个管理员分配给一些linux用户执行一些没有权限的命令。\n\n如果发现执行linux命令提示没有权限什么balabala的，不管什么命令，前面先加上sudo试试。\n\n格式：无需了解\n\n参数：无需了解\n\n示例：\n\nsudo yum install xxxx\n\nsudo svn up xxxx\n\nsudo rm -r xxxx\n\n# tail命令\n\ntail命令用于显示指定文件的末尾内容，并且使用-f参数可以查看即时的文件内容，常用查看日志文件。\n\n格式：\n\ntail 参数 文件\n\n参数：\n```xml\n-f 循环读取\n\n-q 不显示处理信息\n\n-v 显示详细的处理信息\n\n-c<数目> 显示的字节数\n\n-n<行数> 显示行数\n\n--pid=PID 与-f合用,表示在进程ID,PID死掉之后结束.\n\n-q, --quiet, --silent 从不输出给出文件名的首部\n\n-s, --sleep-interval=S 与-f合用,表示在每次反复的间隔休眠S秒\n```\n示例：\n\n及时显示/data/www/project目录下log.php文件的末尾内容\n\ntail -f /data/www/project/log.php\n\n及时显示/data/www/project目录下log.php文件的500行末尾内容\n\ntail -f -n 500 /data/www/project/log.php\n\n# cp命令\n\ncp命令用于复制文件或目录。\n\n格式：\n\ncp 参数 原文件或原目录 目标文件或目录\n\n参数：\n```xml\n-a或--archive 等于-dR或-dpR\n\n--backup 为每个已存在的目标文件创建备份\n\n-b 类似--backup但不接受参数\n\n--copy-contents 在递归处理是复制特殊文件内容\n\n-d或--no-dereference或--preserve=links 若源文件为连接文件属性，则复制连接文件指向的文件而非复制文件本身\n\n-s或--symbolic-link 对源文件建立符号链接，而非复制文件\n\n-f或--force 强制操作，如果目标文件无法打开则将其移除并重试(当-n选项存在时则不需再选此项)\n\n-i或--interactive 覆盖前询问(使前面的-n选项失效)\n\n-H 跟随源文件中的命令行符号链接\n\n-l或--link 链接文件而不复制\n\n-L或--dereference 总是跟随符号链接\n\n-n或--no-clobber 不要覆盖已存在的文件(使前面的-i选项失效)\n\n-P或----parents 保留源文件或目录的路径，此路径可以是绝对路径或相对路径，且目的目录必须已经存在\n\n-p等于--preserve 保留源文件或目录的属性，包括所有者、所属组、权限与时间\n\n--preserve[=属性列表 保持指定的属性(默认：模式,所有权,时间戳)，如果可能保持附加属性：环境、链接等\n\n-R或-r或--recursive 递归处理，复制目录及目录内的所有项目\n\n-u或--update 使用这项参数之后，只会在源文件的修改时间(Modification Time)较目的文件更新时，或是名称相互对应的目的文件并不存在，才复制文件\n\n-v或--verbose 显示执行过程\n\n-x或--one-file-system 复制的文件或目录存放的文件系统，必须与cp指令执行时所处的文件系统相同，否则不复制，亦不处理位于其他分区的文件\n```\n示例：\n\n强行复制文件index.html到目录/data/www/project\n\ncp -f -v /home/usr/download/index.html /data/www/project\n\n同：cp -fv /home/usr/download/index.html /data/www/project\n\n# rm命令\n\nrm命令和cp命令类似。\n\n示例：\n\n删除download目录\n\nrm -rf /home/usr/download\n\n删除download目录下的所有文件和子目录，但保留download目录\n\nrm -rf /home/usr/download/*\n\n# mv命令\n\nmv命令和cp命令类似。\n\n示例：\n\n移动download目录中的所有子目录和文件到/data/www/project 目录，但保留download目录\n\nmv -rf /home/usr/download/* /data/www/project\n\n# rpm命令\n\nrpm是RedHat Package Manager（RedHat软件包管理工具）的简称。\n\n.rpm执行安装包分为二进制包（Binary）以及源代码包（Source）两种，二进制包可以直接安装在计算机中，而源代码包将会由RPM自动编译、安装。源代码包经常以src.rpm作为后缀名。\n\n常用参数：\n```xml\n－ivh：安装显示安装进度–install–verbose–hash\n\n－Uvh：升级软件包–Update；\n\n－qpl：列出RPM软件包内的文件信息[Query Package list]；\n\n－qpi：列出RPM软件包的描述信息[Query Package install package(s)]；\n\n－qf：查找指定文件属于哪个RPM软件包[Query File]；\n\n－Va：校验所有的RPM软件包，查找丢失的文件[View Lost]；\n\n－e：删除包\n\n-q samba ：查询程序是否安装\n```\n常用命令：\n\ninstall/upgrade/remove：安装/更新/卸载\n\n# yum命令\n\nYum（全称为 Yellow dog Updater, Modified）是一个在Fedora和RedHat以及CentOS中的Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。\n\n常用参数：\n```\n-e 静默执行\n\n-t 忽略错误\n\n-R[分钟] 设置等待时间\n\n-y 自动应答yes\n\n–skip-broken 忽略依赖问题\n\n–nogpgcheck 忽略GPG验证\n```\n# 全部命令：\n\ncheck-update 检查可更新的包\n\nclearn 清除全部\n\nclean packages 清除临时包文件（/var/cache/yum 下文件）\n\nclearn headers 清除rpm头文件\n\nclean oldheaders 清除旧的rpm头文件\n\ndeplist 列出包的依赖\n\nlist 可安装和可更新的RPM包\n\nlist installed 已安装的包\n\nlist extras 已安装且不在资源库的包\n\ninfo 可安装和可更新的RPM包 信息\n\ninfo installed 已安装包的信息(-qa 参数相似)\n\ninstall[RPM包] 安装包\n\nlocalinstall 安装本地的 RPM包\n\nupdate[RPM包] 更新包\n\nupgrade 升级系统\n\nsearch[关键词] 搜索包\n\nprovides[关键词] 搜索特定包文件名\n\nreinstall[RPM包] 重新安装包\n\nrepolist 显示资源库的配置\n\nresolvedep 指定依赖\n\nremove[RPM包] 卸载包\n\n如果要安装指定版本或指定插件，则需要详细文件名称：\n\n[zhichao@localhost ~]$ sudo yum list java*\n\njava-1.8.0-openjdk.x86_64 1:1.8.0.45-36.b13.fc22 @System\n\njava-1.8.0-openjdk-devel.x86_64 1:1.8.0.45-36.b13.fc22 @System\n\njava-1.8.0-openjdk-headless.x86_64 1:1.8.0.45-36.b13.fc22 @System\n\nsudo yum install java-1.8.0-openjdk-devel.x86_64\n\napt-get命令\n\napt-get（全称Advanced Package Tool）的作用同于yum，不过使用该命令的操作系统为Ubuntu和Debian。\n\n经过修改后可以使用apt-rpm处理红帽的Package Manager（RPM）文件。\n\n常用命令：\n\napt-get install packagename\n\n安装一个新软件包\n\napt-get remove packagename\n\n卸载一个已安装的软件包（保留配置文档）\n\napt-get remove –purge packagename\n\n卸载一个已安装的软件包（删除配置文档）\n\napt-get autoremove packagename\n\n删除包及其依赖的软件包\n\napt-get autoremove –purge packagname\n\n删除包及其依赖的软件包+配置文件，比上面的要删除的彻底一点\n\ndpkg –force-all –purge packagename\n\n有些软件很难卸载，而且还阻止了别的软件的应用，就能够用这个，但是有点冒险。\n\ndnf命令\n\ndnf是fedora22新的用于替换yum和rpm的命令。\n\n在使用yum时，会提示过时，但仍然可用。\n\n详细了解请看一下这篇文章：[http://www.linuxidc.com/Linux/2015-06/118751.htm](http://www.linuxidc.com/Linux/2015-06/118751.htm)\n\n。\n\nsystemctl命令\n\n在cenos7和fedora22中，systemctl替换了service命令。\n\n写法从以前的：service start mysqld\n\n变成了：systemctl start mysqld.service\n\n详细了解请看一下这篇文章：http://www.linuxidc.com/Linux/2015-07/120833.htm\n\n。\n\n或者：\n\nhttps://wiki.archlinux.org/index.php/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\npwd命令\n\npwd命令可以获取当前目录的全路径。\n\n示例：\n\n$ pwd\n\n/home/zhichao/下载\n# 终端下的快捷键\n\nCtrl+a：光标回到命令行首。 （a：ahead）﻿\n\nCtrl+e：光标回到命令行尾。 （e：end）\n\nCtrl+b：光标向行首移动一个字符。 （b：backwards）\n\nCtrl+f：光标向行尾移动一个字符。 （f：forwards）\n\nCtrl+w: 删除光标处到行首的字符。\n\nCtrl+k：删除光标处到行尾的字符。\n\nCtrl+u：删除整个命令行文本字符。\n\nCtrl+h：向行首删除一个字符。\n\nCtrl+d：向行尾删除一个字符。\n\nCtrl+y:：粘贴Ctrl+u，Ctrl+k，Ctrl+w删除的文本。\n\nCtrl+p: 上一个使用的历史命令。 （或者直接按向上方向键；p：previous）\n\nCtrl+n： 下一个使用的历史命令。（或者直接按向下方向键；n：next）\n\nCtrl+r：快速检索历史命令。（r：retrieve）。\n\nCtrl+t： 交换光标所在字符和其前的字符。\n\nCtrl+i：相当于Tab键。\n\nCtrl+o：相当于Ctrl+m.\n\nCtrl+m：相当Enter键。\n\n# 其他控制键：\n\nCtrl+s:使终端发呆，静止，可以使快速输出的终端屏幕停下来。\n\nCtrl+q：退出Ctrl+s引起的发呆。\n\nCtrl+z：使正在运行在终端的任务，运行于后台。 （可用fg恢复）\n\nCtrl+c：中断终端中正在执行的任务。\n\nCtrl+d: 在空命令行的情况下可以退出终端。\n\nCtrl+[ ：相当于Esc键。\n\nEsc键：连续按3次显示所有的支持的终端命令。\n\nTab键：命令、文件名等自动补全命令或目录、文件名。\n\nalt+/：同Tab键\n","source":"_posts/ubuntu常用命令及部分快捷键.md","raw":"title: ubuntu常用命令及部分快捷键\ncategories: Linux\ntags: ubuntu\ndate: 2016-12-11\n---\n\n\n# 查看系统和硬件相关信息的命令简介\n### 查看内核/操作系统/CPU信息\n` # uname -a `\n` # head -n 1 /etc/issue` # 查看操作系统版本\n\n`# cat /etc/redhat-release` # 查看操作系统版本（redhat，centos，fedora）\n\n`# cat /proc/cpuinfo` # 查看CPU信息\n\n`# hostname` # 查看计算机名\n\n`# lspci -tv`# 列出所有PCI设备\n\n`# lsusb -tv `# 列出所有USB设备\n\n<!-- more -->\n\n`# lsmod `# 列出加载的内核模块\n\n`# env` # 查看环境变量资源\n\n`# free -m`# 查看内存使用量和交换区使用量\n\n`# df -h` # 查看各分区使用情况\n\n`# du -sh <目录名>` # 查看指定目录的大小\n\n`# grep MemTotal /proc/meminfo` # 查看内存总量\n\n`# grep MemFree /proc/meminfo` # 查看空闲内存量\n\n`# uptime` # 查看系统运行时间、用户数、负载\n\n`# cat /proc/loadavg` # 查看系统负载磁盘和分区\n\n`# mount | column -t `# 查看挂接的分区状态\n\n`# fdisk -l` # 查看所有分区\n\n`# swapon -s` # 查看所有交换分区\n\n`# hdparm -i /dev/hda` # 查看磁盘参数(仅适用于IDE设备)\n\n`# dmesg | grep IDE` # 查看启动时IDE设备检测状况网络\n\n`# ifconfig` # 查看所有网络接口的属性\n\n`# iptables -L` # 查看防火墙设置\n\n`# route -n` # 查看路由表\n\n`# netstat -lntp` # 查看所有监听端口\n\n`# netstat -antp` # 查看所有已经建立的连接\n\n`# netstat -s` # 查看网络统计信息进程\n\n`# ps -ef` # 查看所有进程\n\n`# top` # 实时显示进程状态用户\n\n`# w` # 查看活动用户\n\n`# id <用户名>` # 查看指定用户信息\n\n`# last` # 查看用户登录日志\n\n`# cut -d: -f1 /etc/passwd` # 查看系统所有用户\n\n`# cut -d: -f1 /etc/group` # 查看系统所有组\n\n`# crontab -l` # 查看当前用户的计划任务服务\n\n`# chkconfig –list` # 列出所有系统服务\n\n`# chkconfig –list | grep on` # 列出所有启动的系统服务程序\n\n`# rpm -qa` # 查看所有安装的软件包\n\n# VI模式切换和退出\n\n## 进入vi编辑文件内容：\n\nvi 文件名\n\nvi 目录/文件名\n\nvi进入编辑模式：\n\nShift+字母i\n\n## 从编辑模式返回命令模式：\n\nESC\n\n## 从命令模式vi退出：\n\n:w 保存文件但不退出vi\n\n:w file 将修改另外保存到file中，不退出vi\n\n:w! 强制保存，不推出vi\n\n:wq 保存文件并退出vi\n\n:wq! 强制保存文件，并退出vi\n\n:q 不保存文件，退出vi\n\n:q! 不保存文件，强制退出vi\n\n:e! 放弃所有修改，从上次保存文件开始再编辑\n\n*注意：千万别将英文冒号”:”敲成中文冒号”：”。*\n\nVI前进后退操作\n\n在vi中按u可以撤销一次操作\n\nu 撤销上一步的操作\n\nCtrl+r 恢复上一步被撤销的操作\n\n注意：\n\n如果你输入“u”两次，你的文本恢复原样，那应该是你的Vim被配置在Vi兼容模式了。\n\n# 重做\n\n如果你撤销得太多，你可以输入CTRL-R（redo）回退前一个命令。换句话说，它撤销一个撤销。要看执行的例子，输入CTRL-R两次。字符A和它后面的空格就出现了：\n\nyoung intelligent turtle\n\n有一个特殊版本的撤销命令：“U”（行撤销）。行撤销命令撤销所有在前一个编辑行\n\n上的操作。 输入这些命令两次取消前一个“U”：\n\nA very intelligent turtle\n\nxxxx 删除very\n\nA intelligent turtle\n\nxxxxxx 删除turtle\n\nA intelligent\n\n用“U”恢复行\n\nA very intelligent turtle\n\n用“u”撤销“U”\n\nA intelligent\n\n“U”命令自己改变自己，“u”命令撤销操作，CTRL-R命令重做操作。这有点乱，但不用\n\n担心，用“u”和CTRL-R命令你可以切换到任何状态。\n\n流行的文本编辑器通常都有前进和后退功能，可以在文件中曾经浏览过的位置之间来回移动。在 vim 中使用 Ctrl-O 执行后退，使用 Ctrl-I 执行前进。\n\n相关帮助： :help CTRL-O :help CTRL-I :help jump-motions\n\n# VI查找内容\n\n使用vi编辑器编辑长文件时，常常是头昏眼花，也找不到需要更改的内容。\n\n这时，使用查找功能尤为重要。\n\n方法如下：\n\n1、命令模式下输入“/字符串”，例如“/Section 3”。\n\n2、如果查找下一个，按“n”即可。\n\n要自当前光标位置向上搜索，请使用以下命令：\n\n/pattern Enter\n\n其中，pattern表示要搜索的特定字符序列。\n\n要自当前光标位置向下搜索，请使用以下命令：\n\n?pattern Enter\n\n# Linux文件权限介绍\n\nr:read就是读权限 –数字4表示\n\nw:write就是写权限 –数字2表示\n\nx:excute就是执行权限 –数字1表示\n\n权限表示一共需要占9个字符的：— — —\n\n前三个字符表示用户权限，中间三个表示用户所在的组权限，最后三个表示其他用户权限\n\n例子：rw-r–r–\n\nrw-是说用户有读、写权，没有运行权，接着的r–表示用户组只有读权限，没有写入、运行权，最后的r–指其他用户只有读权限，没有写入、运行权。\n\n用数字表示就是644。\n\n例子：777\n\n777就是rwxrwxrwx，意思是用户、用户组和其他用户都有最高权限。\nLinux下scp的用法\n\n#scp命令\n\nscp就是secure copy，一个在linux下用来进行远程拷贝文件的命令。\n\n有时我们需要获得远程服务器上的某个文件，该服务器既没有配置ftp服务器，也没有做共享，无法通过常规途径获得文件时，只需要通过简单的scp命令便可达到目的。\n\n## 将本机文件复制到远程服务器上\n\n> #scp /home/administrator/news.txt root@192.168.6.129:/etc/squid\n\n/home/administrator/      本地文件的绝对路径\n\nnews.txt                          要复制到服务器上的本地文件\n\nroot                                 通过root用户登录到远程服务器（也可以使用其他拥有同等权限的用户）\n\n192.168.6.129                远程服务器的ip地址（也可以使用域名或机器名）\n\n/etc/squid                       将本地文件复制到位于远程服务器上的路径\n\n\n## 将远程服务器上的文件复制到本机\n\n> #scp remote@www.abc.com:/usr/local/sin.sh /home/administrator\n\nremote                       通过remote用户登录到远程服务器（也可以使用其他拥有同等权限的用户）\n\nwww.abc.com              远程服务器的域名（当然也可以使用该服务器ip地址）\n\n/usr/local/sin.sh           欲复制到本机的位于远程服务器上的文件\n\n/home/administrator  将远程文件复制到本地的绝对路径\n\n注意两点：\n\n1.如果远程服务器防火墙有特殊限制，scp便要走特殊端口，具体用什么端口视情况而定，命令格式如下：\n\n> #scp -p 4588 remote@www.abc.com:/usr/local/sin.sh /home/administrator\n\n2.使用scp要注意所使用的用户是否具有可读取远程服务器相应文件的权限。\n\n# 压缩和解压\n\n## zip命令\n\n　　解压1：unzip FileName.zip\n\n　　解压2：unzip FileName.zip -d TargetDir\n\n　　压缩1：zip -r TargetDir/FileName.zip DirName\n\n　　压缩2：zip -r TargetDir/FileName.zip DirName/*\n\n　　压缩3：zip -r TargetDir/FileName.zip File1 File2 File3\n\n　　注意，zip解压适用于解压jar文件\n\n## tar命令\n\n　　解包：tar zxvf FileName.tar\n\n　　打包：tar czvf FileName.tar DirName\n\n## .tar.gz 和 .tgz\n\n　　解压：tar zxvf FileName.tar.gz\n\n　　压缩：tar zcvf FileName.tar.gz DirName\n\n## .tar.bz\n\n　　解压：tar jxvf FileName.tar.bz\n\n## .tar.bz2\n\n　　解压：tar jxvf FileName.tar.bz2\n\n　　压缩：tar jcvf FileName.tar.bz2 DirName\n\n## .tar.Z\n\n　　解压：tar Zxvf FileName.tar.Z\n\n　　压缩：tar Zcvf FileName.tar.Z DirName\n\n## gz命令\n\n　　解压1：gunzip FileName.gz\n\n　　解压2：gzip -d FileName.gz\n\n　　压缩：gzip FileName\n\n## bz2命令\n\n　　解压1：bzip2 -d FileName.bz2\n\n　　解压2：bunzip2 FileName.bz2\n\n　　压缩： bzip2 -z FileName\n\n## bz命令\n\n　　解压1：bzip2 -d FileName.bz\n\n　　解压2：bunzip2 FileName.bz\n\n## Z命令\n\n　　解压：uncompress FileName.Z\n\n　　压缩：compress FileName\n\n## 7z命令(如果没有7z命令请先执行“yum install p7zip”)\n\n解压：7z x FileName.7z -o/home/zhichao\n\n//注意，x参数解压会自动生成与压缩文件名相同的目录，-o表示输出目录，其与目录路径之间没有空格，上面命令会解压FileName.7z到home/zhichao/FileName目录中。\n\n压缩：7z a FileName.7z DirName\n\n# grep命令\n\ngrep命令使用正则表达式检索符合条件的内容，一般与其他命令组合使用。\n\n格式：\n\ngrep 参数 条件\n\n参数：\n```\n-a --text #不要忽略二进制的数据。\n\n-A<显示行数> --after-context=<显示行数> #除了显示符合范本样式的那一列之外，并显示该行之后的内容。\n\n-b --byte-offset #在显示符合样式的那一行之前，标示出该行第一个字符的编号。\n\n-B<显示行数> --before-context=<显示行数> #除了显示符合样式的那一行之外，并显示该行之前的内容。\n\n-c --count #计算符合样式的列数。\n\n-C<显示行数> --context=<显示行数>或-<显示行数> #除了显示符合样式的那一行之外，并显示该行之前后的内容。\n\n-d <动作> --directories=<动作> #当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。\n\n-e<范本样式> --regexp=<范本样式> #指定字符串做为查找文件内容的样式。\n\n-E --extended-regexp #将样式为延伸的普通表示法来使用。\n\n-f<规则文件> --file=<规则文件> #指定规则文件，其内容含有一个或多个规则样式，让grep查找符合规则条件的文件内容，格式为每行一个规则样式。\n\n-F --fixed-regexp #将样式视为固定字符串的列表。\n\n-G --basic-regexp #将样式视为普通的表示法来使用。\n\n-h --no-filename #在显示符合样式的那一行之前，不标示该行所属的文件名称。\n\n-H --with-filename #在显示符合样式的那一行之前，表示该行所属的文件名称。\n\n-i --ignore-case #忽略字符大小写的差别。\n\n-l --file-with-matches #列出文件内容符合指定的样式的文件名称。\n\n-L --files-without-match #列出文件内容不符合指定的样式的文件名称。\n\n-n --line-number #在显示符合样式的那一行之前，标示出该行的列数编号。\n\n-q --quiet或--silent #不显示任何信息。\n\n-r --recursive #此参数的效果和指定“-d recurse”参数相同。\n\n-s --no-messages #不显示错误信息。\n\n-v --revert-match #显示不包含匹配文本的所有行。\n\n-V --version #显示版本信息。\n\n-w --word-regexp #只显示全字符合的列。\n\n-x --line-regexp #只显示全列符合的列。\n\n-y #此参数的效果和指定“-i”参数相同。\n```\n示例：\n\n从文件info.txt中读取关键词system进行搜索\n\ncat /home/usr/download/info.txt | grep -f system\n\n从文件info.txt中读取关键词system进行搜索并显示行号\n\ncat /home/usr/download/info.txt | grep -nf system\n\n# cat命令\n\ncat命令用来显示文件内容，或者将几个文件连接起来显示，或者从标准输入读取内容并显示，它常与重定向符号配合使用。\n\n格式：\n\ncat 参数 文件\n\n参数：\n```\n-A, --show-all  等价于 -vET\n\n-b, --number-nonblank 对非空输出行编号\n\n-e   等价于 -vE\n\n-E, --show-ends  在每行结束处显示 $\n\n-n, --number 对输出的所有行编号,由1开始对所有输出的行数编号\n\n-s, --squeeze-blank 有连续两行以上的空白行，就代换为一行的空白行\n\n-t   与 -vT 等价\n\n-T, --show-tabs  将跳格字符显示为 ^I\n\n-u   (被忽略)\n\n-v, --show-nonprinting 使用 ^ 和 M- 引用，除了 LFD 和 TAB 之外\n```\n示例：\n\n把 log.php 的文件内容加上行号后输出到new_log.php这个文件中\n\ncat -n /data/www/project/log.php /data/www/project/new_log.php\n\n# ps命令\n\nps命令是process status的缩写，顾名思义就是查看系统中所有进程状态状态。\n\nps命令查看的程序状态并不是动态连续的，如果想对进程实施监控，请用top命令。\n\n如果直接用ps命令，会显示所有进程的状态，通常结合grep命令查看某进程的状态。\n\n格式：\n\nps 参数\n\n参数：\n```xml\na 显示所有进程\n\n-a 显示同一终端下的所有程序\n\n-A 显示所有进程\n\nc 显示进程的真实名称\n\n-N 反向选择\n\n-e 等于“-A”\n\ne 显示环境变量\n\nf 显示程序间的关系\n\n-H 显示树状结构\n\nr 显示当前终端的进程\n\nT 显示当前终端的所有程序\n\nu 指定用户的所有进程\n\n-au 显示较详细的资讯\n\n-aux 显示所有包含其他使用者的行程\n```\n示例：\n\n显示java相关程序\n\nps aux|grep java\n\n显示httpd相关程序\n\nps aux|grep httpd\n\n查看正在使用8080端口的程序\n\nps -ef|grep 8080\n\n# fuser 命令\n\nfuser用于查找正在使用指定的某个文件、挂载点、网络端口的进程的详细信息。\n\n格式：\n\nfuser 参数 文件或挂载点或网络端口\n\n参数：\n```xml\na 显示所有命令行中指定的文件，默认情况下被访问的文件才会被显示。\n\n-c 和-m一样，用于POSIX兼容。\n\n-d 暗示使用了 -c 和 -x 标志。关于任何与文件系统（自父目录删除的）无链接的打开文件的报告。当与 -V 标志一起使用时，它也会报告被删除文件的节点号和大小。\n\n-f 仅对文件的打开实例报告。\n\n-i 杀掉进程之前询问用户，如果没有-k这个选项会被忽略。\n\n-k 杀掉访问文件的进程。如果没有指定-signal就会发送SIGKILL信号。\n\n-l 列出所有已知的信号名称。\n\n-m name 指定一个挂载文件系统上的文件或者被挂载的块设备（名称name）。这样所有访问这个文件或者文件系统的进程都会被列出来。如果指定的是一个目录会自动转换成,并使用所有挂载在那个目录下面的文件系统。\n\n-n space 指定一个不同的命名空间(space).这里支持不同的空间文件(文件名，此处默认)、tcp(本地tcp端口)、udp(本地udp端口)。对于端口， 可以指定端口号或者名称，如果不会引起歧义那么可以使用简单表示的形式，例如：name/space (即形如:80/tcp之类的表示)。\n\n-s 静默模式，这时候-u,-v会被忽略。-a不能和-s一起使用。\n\n-signal 使用指定的信号，而不是用SIGKILL来杀掉进程。可以通过名称或者号码来表示信号(例如-HUP,-1),这个选项要和-k一起使用，否则会被忽略。\n\n-u 在每个PID后面添加进程拥有者的用户名称。\n\n-v 详细模式。输出似ps命令的输出，包含PID,USER,COMMAND等许多域,如果是内核访问的那么PID为kernel. -V 输出版本号。\n\n-x 与 -c 或 -f 连用，报告除标准 fuser 输出以外的可执行的和可载入的对象。\n\n-4 使用IPV4套接字,不能和-6一起应用，只在-n的tcp和udp的命名存在时不被忽略。\n\n-6 使用IPV6套接字,不能和-4一起应用，只在-n的tcp和udp的命名存在时不被忽略。\n```\n示例：\n\n查看和关闭正在使用readme.txt文件的程序\n\nfuser -m -v readme.txt\n\nfuser -m -k readme.txt\n\n查看和关闭正在使用80端口的程序\n\nfuser -n -v tcp 80\n\nfuser -n -k tcp 80\n\nchown命令\n\nchown命令将指定文件或文件夹的拥有者改为指定的用户或组，用户可以是用户名或者用户ID，组可以是组名或者组ID，文件是以空格分开的要改变权限的文件列表，支持通配符。\n\n格式：\n\n# chown 参数 用户 文件\n\n参数：\n```xml\n-c 显示更改的部分的信息\n\n-f 忽略错误信息\n\n-h 修复符号链接\n\n-R 处理指定目录以及其子目录下的所有文件\n\n-v 显示详细的处理信息\n\n-deference 作用于符号链接的指向，而不是链接文件本身\n```\n示例：\n\n将目录/data/www/project/下的所有文件和目录的拥有者都修改为apache账户。\n\nchown -R apache.apache /data/www/project/\n\n# chmod命令\n\nchmod命令用于改变linux系统文件或目录的访问权限，用它控制文件或目录的访问权限。\n\nLinux系统中的每个文件和目录都有访问许可权限，用它来确定谁可以通过何种方式对文件和目录进行访问和操作。\n\n格式：\n\nchmod 参数 权限模式 文件\n\n参数\n```\n-c 当发生改变时，报告处理信息\n\n-f 错误信息不输出\n\n-R 处理指定目录以及其子目录下的所有文件\n\n-v 运行时显示详细处理信息\n```\n示例：\n\n将目录/data/www/project/下的所有文件和目录的访问权限修改为“当前用户、当前用户组和其他用户都可读可写可执行”的权限。\n\nchown -R 777 /data/www/project/\n\n# kill命令\n\nkill命令用于关闭指定进程。\n\n格式：\n\nkill 参数 信号 进程ID\n\n参数：\n```xml\n-s 指定发送信号\n\n-l 根据信号名显示信号编号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称\n\n-a 当处理当前进程时，不限制命令名和进程号的对应关系\n\n-p 指定kill 命令只打印相关进程的进程号，而不发送任何信号\n\n-u 指定用户\n```\n# 信号：\n\n## 信号名 信号编号 信号含义\n\nHUP 1 终端断线\n\nINT 2 中断\n\nQUIT 3 退出\n\nTERM 15 终止\n\nKILL 9 强制终止\n\nCONT 18 继续（与STOP相反）\n\nSTOP 19 暂停（\n\n示例：\n\n显示信号KILL的信号编号\n\nkill -l KILL\n\n关闭apache用户下所有进程\n\nkill -u apache.apache\n\n强制关闭进程ID为1937的进程，参数s可以省略。\n\nkill -s 9 1937\n\nkill -9 1937\n\n# top命令\n\ntop命令查看系统中各个进程的资源占用状况，默认使用cpu占用来排序显示，top命令显示的结果是实时的。\n\n格式：\n\ntop 参数\n\n参数：\n```xml\n-b 批处理\n\n-c 显示完整的治命令\n\n-i<时间> 设置间隔时间\n\n-I 忽略失效过程\n\n-p<进程号> 指定进程\n\n-n<次数> 循环显示的次数\n\n-s 保密模式\n\n-S 累积模式\n\n-u<用户名> 指定用户名\n```\n示例：\n\n查看所有程序资源占用状况\n\ntop\n\n查看apache用户所有程序资源占用状况\n\ntop -u apache.apache\n\n# find命令\n\n在指定目录中查找指定条件的文件或文件夹。\n\n格式：\n\nfind 目录路径 选项 查找条件\n\n选项：\n```xml\n-name 按照文件名查找文件。\n\n-perm 按照文件权限来查找文件。\n\n-prune 使用这一选项可以使find命令不在当前指定的目录中查找，如果同时使用-depth选项，那么-prune将被find命令忽略。\n\n-user 按照文件属主来查找文件。\n\n-group 按照文件所属的组来查找文件。\n\n-mtime -n +n 按照文件的更改时间来查找文件， - n表示文件更改时间距现在n天以内，+ n表示文件更改时间距现在n天以前。find命令还有-atime和-ctime 选项，但它们都和-m time选项。\n\n-nogroup 查找无有效所属组的文件，即该文件所属的组在/etc/groups中不存在。\n\n-nouser 查找无有效属主的文件，即该文件的属主在/etc/passwd中不存在。\n\n-newer file1 ! file2 查找更改时间比文件file1新但比文件file2旧的文件。\n\n-type<类型参数> 查找某一类型的文件，诸如：\n\nb - 块设备文件。\n\nd - 目录。\n\nc - 字符设备文件。\n\np - 管道文件。\n\nl - 符号链接文件。\n\nf - 普通文件。\n\n-size n：[c] 查找文件长度为n块的文件，带有c时表示文件长度以字节计。-depth：在查找文件时，首先查找当前目录中的文件，然后再在其子目录中查找。\n\n-fstype：查找位于某一类型文件系统中的文件，这些文件系统类型通常可以在配置文件/etc/fstab中找到，该配置文件中包含了本系统中有关文件系统的信息。\n\n-mount：在查找文件时不跨越文件系统mount点。\n\n-follow：如果find命令遇到符号链接文件，就跟踪至链接所指向的文件。\n\n-cpio：对匹配的文件使用cpio命令，将这些文件备份到磁带设备中。\n\n-amin n 查找系统中最后N分钟访问的文件\n\n-atime n 查找系统中最后n*24小时访问的文件\n\n-cmin n 查找系统中最后N分钟被改变文件状态的文件\n\n-ctime n 查找系统中最后n*24小时被改变文件状态的文件\n\n-mmin n 查找系统中最后N分钟被改变文件数据的文件\n\n-mtime n 查找系统中最后n*24小时被改变文件数据的文件\n```\n示例：\n\n查找 “/”目录（Linux系统根目录）下名称为httpd.conf的文件\n\nfind / -name httpd.conf\n\n查找 “/data/www/project/”目录下所有php文件\n\nfind /data/www/project -name *.php\n\n查找 “.”目录（当前目录）下权限为777的文件\n\nfind . -perm 777\n\n查找 “/”目录下48小时内修改过的文件\n\nfind / -atime -2\n\n查找 “/”目录下所有文件夹\n\nfind / -type d\n\n查找 “/”目录下大于1kb的文件\n\nfind / -size +1000c\n\n# whereis命令\n\nwhereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、说明文件（参数-m）和源代码文件（参数-s），如果省略参数，则返回所有信息。\n\n和find相比，whereis查找的速度非常快，这是因为linux系统会将 系统内的所有文件都记录在一个数据库文件中，当使用whereis和下面即将介绍的locate时，会从数据库中查找数据，而不是像find命令那样，通 过遍历硬盘来查找，效率自然会很高。\n\n但是该数据库文件并不是实时更新，默认情况下时一星期更新一次，因此，我们在用whereis和locate 查找文件时，有时会找到已经被删除的数据，或者刚刚建立文件，却无法查找到，原因就是因为数据库文件没有被更新。\n\nwhereis常用于查找安装程序的安装目录。\n\n格式：\n\nwhereis 参数 程序名\n\n参数：\n```xml\n-b 定位可执行文件。\n\n-m 定位帮助文件。\n\n-s 定位源代码文件。\n\n-u 搜索默认路径下除可执行文件、源代码文件、帮助文件以外的其它文件。\n\n-B 指定搜索可执行文件的路径。\n\n-M 指定搜索帮助文件的路径。\n\n-S 指定搜索源代码文件的路径。\n```\n示例：\n\n查找mysql安装目录\n\nwhereis mysql\n\n# ls命令\n\nls命令用来查看目标目录中所有的子目录和文件信息。\n\n格式：\n\nls 参数 目录名\n\n参数：\n```xml\n-a, –all 列出目录下的所有文件，包括以 . 开头的隐含文件\n\n-A 同-a，但不列出“.”(表示当前目录)和“..”(表示当前目录的父目录)。\n\n-c 配合 -lt：根据 ctime 排序及显示 ctime (文件状态最后更改的时间)配合 -l：显示 ctime 但根据名称排序否则：根据 ctime 排序\n\n-C 每栏由上至下列出项目\n\n–color[=WHEN] 控制是否使用色彩分辨文件。WHEN 可以是'never'、'always'或'auto'其中之一\n\n-d, –directory 将目录象文件一样显示，而不是显示其下的文件。\n\n-D, –dired 产生适合 Emacs 的 dired 模式使用的结果\n\n-f 对输出的文件不进行排序，-aU 选项生效，-lst 选项失效\n\n-g 类似 -l,但不列出所有者\n\n-G, –no-group 不列出任何有关组的信息\n\n-h, –human-readable 以容易理解的格式列出文件大小 (例如 1K 234M 2G)\n\n–si 类似 -h,但文件大小取 1000 的次方而不是 1024\n\n-H, –dereference-command-line 使用命令列中的符号链接指示的真正目的地\n\n–indicator-style=方式 指定在每个项目名称后加上指示符号<方式>：none (默认)，classify (-F)，file-type (-p)\n\n-i, –inode 印出每个文件的 inode 号\n\n-I, –ignore=样式 不印出任何符合 shell 万用字符<样式>的项目\n\n-k 即 –block-size=1K,以 k 字节的形式表示文件的大小。\n\n-l 除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来。\n\n-L, –dereference 当显示符号链接的文件信息时，显示符号链接所指示的对象而并非符号链接本身的信息\n\n-m 所有项目以逗号分隔，并填满整行行宽\n\n-o 类似 -l,显示文件的除组信息外的详细信息。\n\n-r, –reverse 依相反次序排列\n\n-R, –recursive 同时列出所有子目录层\n\n-s, –size 以块大小为单位列出所有文件的大小\n\n-S 根据文件大小排序\n\n–sort=WORD 以下是可选用的 WORD 和它们代表的相应选项：\n\nextension -X status -c\n\nnone -U time -t\n\nsize -S atime -u\n\ntime -t access -u\n\nversion -v use -u\n\n-t 以文件修改时间排序\n\n-u 配合 -lt:显示访问时间而且依访问时间排序\n\n配合 -l:显示访问时间但根据名称排序\n\n否则：根据访问时间排序\n\n-U 不进行排序;依文件系统原有的次序列出项目\n\n-v 根据版本进行排序\n\n-w, –width=COLS 自行指定屏幕宽度而不使用目前的数值\n\n-x 逐行列出项目而不是逐栏列出\n\n-X 根据扩展名排序\n\n-1 每行只列出一个文件\n\n–help 显示此帮助信息并离开\n\n–version 显示版本信息并离开\n```\n示例：\n\n显示当前目录下所有文件和子目录（包括隐藏文件和隐藏目录）的详细信息\n\nls -a -l\n\n显示”/data/www/project”目录下所有文件和子目录（不包括隐藏文件和隐藏目录）的详细信息\n\nls -l /data/www/project\n\n显示”/data/www/project”目录下所有文件和子目录（包括隐藏文件和隐藏目录）的名称\n\nls -a /data/www/project\n\n# sudo命令\n\nsudo命令是个管理员分配给一些linux用户执行一些没有权限的命令。\n\n如果发现执行linux命令提示没有权限什么balabala的，不管什么命令，前面先加上sudo试试。\n\n格式：无需了解\n\n参数：无需了解\n\n示例：\n\nsudo yum install xxxx\n\nsudo svn up xxxx\n\nsudo rm -r xxxx\n\n# tail命令\n\ntail命令用于显示指定文件的末尾内容，并且使用-f参数可以查看即时的文件内容，常用查看日志文件。\n\n格式：\n\ntail 参数 文件\n\n参数：\n```xml\n-f 循环读取\n\n-q 不显示处理信息\n\n-v 显示详细的处理信息\n\n-c<数目> 显示的字节数\n\n-n<行数> 显示行数\n\n--pid=PID 与-f合用,表示在进程ID,PID死掉之后结束.\n\n-q, --quiet, --silent 从不输出给出文件名的首部\n\n-s, --sleep-interval=S 与-f合用,表示在每次反复的间隔休眠S秒\n```\n示例：\n\n及时显示/data/www/project目录下log.php文件的末尾内容\n\ntail -f /data/www/project/log.php\n\n及时显示/data/www/project目录下log.php文件的500行末尾内容\n\ntail -f -n 500 /data/www/project/log.php\n\n# cp命令\n\ncp命令用于复制文件或目录。\n\n格式：\n\ncp 参数 原文件或原目录 目标文件或目录\n\n参数：\n```xml\n-a或--archive 等于-dR或-dpR\n\n--backup 为每个已存在的目标文件创建备份\n\n-b 类似--backup但不接受参数\n\n--copy-contents 在递归处理是复制特殊文件内容\n\n-d或--no-dereference或--preserve=links 若源文件为连接文件属性，则复制连接文件指向的文件而非复制文件本身\n\n-s或--symbolic-link 对源文件建立符号链接，而非复制文件\n\n-f或--force 强制操作，如果目标文件无法打开则将其移除并重试(当-n选项存在时则不需再选此项)\n\n-i或--interactive 覆盖前询问(使前面的-n选项失效)\n\n-H 跟随源文件中的命令行符号链接\n\n-l或--link 链接文件而不复制\n\n-L或--dereference 总是跟随符号链接\n\n-n或--no-clobber 不要覆盖已存在的文件(使前面的-i选项失效)\n\n-P或----parents 保留源文件或目录的路径，此路径可以是绝对路径或相对路径，且目的目录必须已经存在\n\n-p等于--preserve 保留源文件或目录的属性，包括所有者、所属组、权限与时间\n\n--preserve[=属性列表 保持指定的属性(默认：模式,所有权,时间戳)，如果可能保持附加属性：环境、链接等\n\n-R或-r或--recursive 递归处理，复制目录及目录内的所有项目\n\n-u或--update 使用这项参数之后，只会在源文件的修改时间(Modification Time)较目的文件更新时，或是名称相互对应的目的文件并不存在，才复制文件\n\n-v或--verbose 显示执行过程\n\n-x或--one-file-system 复制的文件或目录存放的文件系统，必须与cp指令执行时所处的文件系统相同，否则不复制，亦不处理位于其他分区的文件\n```\n示例：\n\n强行复制文件index.html到目录/data/www/project\n\ncp -f -v /home/usr/download/index.html /data/www/project\n\n同：cp -fv /home/usr/download/index.html /data/www/project\n\n# rm命令\n\nrm命令和cp命令类似。\n\n示例：\n\n删除download目录\n\nrm -rf /home/usr/download\n\n删除download目录下的所有文件和子目录，但保留download目录\n\nrm -rf /home/usr/download/*\n\n# mv命令\n\nmv命令和cp命令类似。\n\n示例：\n\n移动download目录中的所有子目录和文件到/data/www/project 目录，但保留download目录\n\nmv -rf /home/usr/download/* /data/www/project\n\n# rpm命令\n\nrpm是RedHat Package Manager（RedHat软件包管理工具）的简称。\n\n.rpm执行安装包分为二进制包（Binary）以及源代码包（Source）两种，二进制包可以直接安装在计算机中，而源代码包将会由RPM自动编译、安装。源代码包经常以src.rpm作为后缀名。\n\n常用参数：\n```xml\n－ivh：安装显示安装进度–install–verbose–hash\n\n－Uvh：升级软件包–Update；\n\n－qpl：列出RPM软件包内的文件信息[Query Package list]；\n\n－qpi：列出RPM软件包的描述信息[Query Package install package(s)]；\n\n－qf：查找指定文件属于哪个RPM软件包[Query File]；\n\n－Va：校验所有的RPM软件包，查找丢失的文件[View Lost]；\n\n－e：删除包\n\n-q samba ：查询程序是否安装\n```\n常用命令：\n\ninstall/upgrade/remove：安装/更新/卸载\n\n# yum命令\n\nYum（全称为 Yellow dog Updater, Modified）是一个在Fedora和RedHat以及CentOS中的Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。\n\n常用参数：\n```\n-e 静默执行\n\n-t 忽略错误\n\n-R[分钟] 设置等待时间\n\n-y 自动应答yes\n\n–skip-broken 忽略依赖问题\n\n–nogpgcheck 忽略GPG验证\n```\n# 全部命令：\n\ncheck-update 检查可更新的包\n\nclearn 清除全部\n\nclean packages 清除临时包文件（/var/cache/yum 下文件）\n\nclearn headers 清除rpm头文件\n\nclean oldheaders 清除旧的rpm头文件\n\ndeplist 列出包的依赖\n\nlist 可安装和可更新的RPM包\n\nlist installed 已安装的包\n\nlist extras 已安装且不在资源库的包\n\ninfo 可安装和可更新的RPM包 信息\n\ninfo installed 已安装包的信息(-qa 参数相似)\n\ninstall[RPM包] 安装包\n\nlocalinstall 安装本地的 RPM包\n\nupdate[RPM包] 更新包\n\nupgrade 升级系统\n\nsearch[关键词] 搜索包\n\nprovides[关键词] 搜索特定包文件名\n\nreinstall[RPM包] 重新安装包\n\nrepolist 显示资源库的配置\n\nresolvedep 指定依赖\n\nremove[RPM包] 卸载包\n\n如果要安装指定版本或指定插件，则需要详细文件名称：\n\n[zhichao@localhost ~]$ sudo yum list java*\n\njava-1.8.0-openjdk.x86_64 1:1.8.0.45-36.b13.fc22 @System\n\njava-1.8.0-openjdk-devel.x86_64 1:1.8.0.45-36.b13.fc22 @System\n\njava-1.8.0-openjdk-headless.x86_64 1:1.8.0.45-36.b13.fc22 @System\n\nsudo yum install java-1.8.0-openjdk-devel.x86_64\n\napt-get命令\n\napt-get（全称Advanced Package Tool）的作用同于yum，不过使用该命令的操作系统为Ubuntu和Debian。\n\n经过修改后可以使用apt-rpm处理红帽的Package Manager（RPM）文件。\n\n常用命令：\n\napt-get install packagename\n\n安装一个新软件包\n\napt-get remove packagename\n\n卸载一个已安装的软件包（保留配置文档）\n\napt-get remove –purge packagename\n\n卸载一个已安装的软件包（删除配置文档）\n\napt-get autoremove packagename\n\n删除包及其依赖的软件包\n\napt-get autoremove –purge packagname\n\n删除包及其依赖的软件包+配置文件，比上面的要删除的彻底一点\n\ndpkg –force-all –purge packagename\n\n有些软件很难卸载，而且还阻止了别的软件的应用，就能够用这个，但是有点冒险。\n\ndnf命令\n\ndnf是fedora22新的用于替换yum和rpm的命令。\n\n在使用yum时，会提示过时，但仍然可用。\n\n详细了解请看一下这篇文章：[http://www.linuxidc.com/Linux/2015-06/118751.htm](http://www.linuxidc.com/Linux/2015-06/118751.htm)\n\n。\n\nsystemctl命令\n\n在cenos7和fedora22中，systemctl替换了service命令。\n\n写法从以前的：service start mysqld\n\n变成了：systemctl start mysqld.service\n\n详细了解请看一下这篇文章：http://www.linuxidc.com/Linux/2015-07/120833.htm\n\n。\n\n或者：\n\nhttps://wiki.archlinux.org/index.php/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)\n\npwd命令\n\npwd命令可以获取当前目录的全路径。\n\n示例：\n\n$ pwd\n\n/home/zhichao/下载\n# 终端下的快捷键\n\nCtrl+a：光标回到命令行首。 （a：ahead）﻿\n\nCtrl+e：光标回到命令行尾。 （e：end）\n\nCtrl+b：光标向行首移动一个字符。 （b：backwards）\n\nCtrl+f：光标向行尾移动一个字符。 （f：forwards）\n\nCtrl+w: 删除光标处到行首的字符。\n\nCtrl+k：删除光标处到行尾的字符。\n\nCtrl+u：删除整个命令行文本字符。\n\nCtrl+h：向行首删除一个字符。\n\nCtrl+d：向行尾删除一个字符。\n\nCtrl+y:：粘贴Ctrl+u，Ctrl+k，Ctrl+w删除的文本。\n\nCtrl+p: 上一个使用的历史命令。 （或者直接按向上方向键；p：previous）\n\nCtrl+n： 下一个使用的历史命令。（或者直接按向下方向键；n：next）\n\nCtrl+r：快速检索历史命令。（r：retrieve）。\n\nCtrl+t： 交换光标所在字符和其前的字符。\n\nCtrl+i：相当于Tab键。\n\nCtrl+o：相当于Ctrl+m.\n\nCtrl+m：相当Enter键。\n\n# 其他控制键：\n\nCtrl+s:使终端发呆，静止，可以使快速输出的终端屏幕停下来。\n\nCtrl+q：退出Ctrl+s引起的发呆。\n\nCtrl+z：使正在运行在终端的任务，运行于后台。 （可用fg恢复）\n\nCtrl+c：中断终端中正在执行的任务。\n\nCtrl+d: 在空命令行的情况下可以退出终端。\n\nCtrl+[ ：相当于Esc键。\n\nEsc键：连续按3次显示所有的支持的终端命令。\n\nTab键：命令、文件名等自动补全命令或目录、文件名。\n\nalt+/：同Tab键\n","slug":"ubuntu常用命令及部分快捷键","published":1,"updated":"2017-04-22T01:26:39.759Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1u7zppe000j99pvtqx7u1ul","content":"<h1 id=\"查看系统和硬件相关信息的命令简介\"><a href=\"#查看系统和硬件相关信息的命令简介\" class=\"headerlink\" title=\"查看系统和硬件相关信息的命令简介\"></a>查看系统和硬件相关信息的命令简介</h1><h3 id=\"查看内核-操作系统-CPU信息\"><a href=\"#查看内核-操作系统-CPU信息\" class=\"headerlink\" title=\"查看内核/操作系统/CPU信息\"></a>查看内核/操作系统/CPU信息</h3><p><code># uname -a</code><br><code># head -n 1 /etc/issue</code> # 查看操作系统版本</p>\n<p><code># cat /etc/redhat-release</code> # 查看操作系统版本（redhat，centos，fedora）</p>\n<p><code># cat /proc/cpuinfo</code> # 查看CPU信息</p>\n<p><code># hostname</code> # 查看计算机名</p>\n<p><code># lspci -tv</code># 列出所有PCI设备</p>\n<p><code># lsusb -tv</code># 列出所有USB设备</p>\n<a id=\"more\"></a>\n<p><code># lsmod</code># 列出加载的内核模块</p>\n<p><code># env</code> # 查看环境变量资源</p>\n<p><code># free -m</code># 查看内存使用量和交换区使用量</p>\n<p><code># df -h</code> # 查看各分区使用情况</p>\n<p><code># du -sh &lt;目录名&gt;</code> # 查看指定目录的大小</p>\n<p><code># grep MemTotal /proc/meminfo</code> # 查看内存总量</p>\n<p><code># grep MemFree /proc/meminfo</code> # 查看空闲内存量</p>\n<p><code># uptime</code> # 查看系统运行时间、用户数、负载</p>\n<p><code># cat /proc/loadavg</code> # 查看系统负载磁盘和分区</p>\n<p><code># mount | column -t</code># 查看挂接的分区状态</p>\n<p><code># fdisk -l</code> # 查看所有分区</p>\n<p><code># swapon -s</code> # 查看所有交换分区</p>\n<p><code># hdparm -i /dev/hda</code> # 查看磁盘参数(仅适用于IDE设备)</p>\n<p><code># dmesg | grep IDE</code> # 查看启动时IDE设备检测状况网络</p>\n<p><code># ifconfig</code> # 查看所有网络接口的属性</p>\n<p><code># iptables -L</code> # 查看防火墙设置</p>\n<p><code># route -n</code> # 查看路由表</p>\n<p><code># netstat -lntp</code> # 查看所有监听端口</p>\n<p><code># netstat -antp</code> # 查看所有已经建立的连接</p>\n<p><code># netstat -s</code> # 查看网络统计信息进程</p>\n<p><code># ps -ef</code> # 查看所有进程</p>\n<p><code># top</code> # 实时显示进程状态用户</p>\n<p><code># w</code> # 查看活动用户</p>\n<p><code># id &lt;用户名&gt;</code> # 查看指定用户信息</p>\n<p><code># last</code> # 查看用户登录日志</p>\n<p><code># cut -d: -f1 /etc/passwd</code> # 查看系统所有用户</p>\n<p><code># cut -d: -f1 /etc/group</code> # 查看系统所有组</p>\n<p><code># crontab -l</code> # 查看当前用户的计划任务服务</p>\n<p><code># chkconfig –list</code> # 列出所有系统服务</p>\n<p><code># chkconfig –list | grep on</code> # 列出所有启动的系统服务程序</p>\n<p><code># rpm -qa</code> # 查看所有安装的软件包</p>\n<h1 id=\"VI模式切换和退出\"><a href=\"#VI模式切换和退出\" class=\"headerlink\" title=\"VI模式切换和退出\"></a>VI模式切换和退出</h1><h2 id=\"进入vi编辑文件内容：\"><a href=\"#进入vi编辑文件内容：\" class=\"headerlink\" title=\"进入vi编辑文件内容：\"></a>进入vi编辑文件内容：</h2><p>vi 文件名</p>\n<p>vi 目录/文件名</p>\n<p>vi进入编辑模式：</p>\n<p>Shift+字母i</p>\n<h2 id=\"从编辑模式返回命令模式：\"><a href=\"#从编辑模式返回命令模式：\" class=\"headerlink\" title=\"从编辑模式返回命令模式：\"></a>从编辑模式返回命令模式：</h2><p>ESC</p>\n<h2 id=\"从命令模式vi退出：\"><a href=\"#从命令模式vi退出：\" class=\"headerlink\" title=\"从命令模式vi退出：\"></a>从命令模式vi退出：</h2><p>:w 保存文件但不退出vi</p>\n<p>:w file 将修改另外保存到file中，不退出vi</p>\n<p>:w! 强制保存，不推出vi</p>\n<p>:wq 保存文件并退出vi</p>\n<p>:wq! 强制保存文件，并退出vi</p>\n<p>:q 不保存文件，退出vi</p>\n<p>:q! 不保存文件，强制退出vi</p>\n<p>:e! 放弃所有修改，从上次保存文件开始再编辑</p>\n<p><em>注意：千万别将英文冒号”:”敲成中文冒号”：”。</em></p>\n<p>VI前进后退操作</p>\n<p>在vi中按u可以撤销一次操作</p>\n<p>u 撤销上一步的操作</p>\n<p>Ctrl+r 恢复上一步被撤销的操作</p>\n<p>注意：</p>\n<p>如果你输入“u”两次，你的文本恢复原样，那应该是你的Vim被配置在Vi兼容模式了。</p>\n<h1 id=\"重做\"><a href=\"#重做\" class=\"headerlink\" title=\"重做\"></a>重做</h1><p>如果你撤销得太多，你可以输入CTRL-R（redo）回退前一个命令。换句话说，它撤销一个撤销。要看执行的例子，输入CTRL-R两次。字符A和它后面的空格就出现了：</p>\n<p>young intelligent turtle</p>\n<p>有一个特殊版本的撤销命令：“U”（行撤销）。行撤销命令撤销所有在前一个编辑行</p>\n<p>上的操作。 输入这些命令两次取消前一个“U”：</p>\n<p>A very intelligent turtle</p>\n<p>xxxx 删除very</p>\n<p>A intelligent turtle</p>\n<p>xxxxxx 删除turtle</p>\n<p>A intelligent</p>\n<p>用“U”恢复行</p>\n<p>A very intelligent turtle</p>\n<p>用“u”撤销“U”</p>\n<p>A intelligent</p>\n<p>“U”命令自己改变自己，“u”命令撤销操作，CTRL-R命令重做操作。这有点乱，但不用</p>\n<p>担心，用“u”和CTRL-R命令你可以切换到任何状态。</p>\n<p>流行的文本编辑器通常都有前进和后退功能，可以在文件中曾经浏览过的位置之间来回移动。在 vim 中使用 Ctrl-O 执行后退，使用 Ctrl-I 执行前进。</p>\n<p>相关帮助： :help CTRL-O :help CTRL-I :help jump-motions</p>\n<h1 id=\"VI查找内容\"><a href=\"#VI查找内容\" class=\"headerlink\" title=\"VI查找内容\"></a>VI查找内容</h1><p>使用vi编辑器编辑长文件时，常常是头昏眼花，也找不到需要更改的内容。</p>\n<p>这时，使用查找功能尤为重要。</p>\n<p>方法如下：</p>\n<p>1、命令模式下输入“/字符串”，例如“/Section 3”。</p>\n<p>2、如果查找下一个，按“n”即可。</p>\n<p>要自当前光标位置向上搜索，请使用以下命令：</p>\n<p>/pattern Enter</p>\n<p>其中，pattern表示要搜索的特定字符序列。</p>\n<p>要自当前光标位置向下搜索，请使用以下命令：</p>\n<p>?pattern Enter</p>\n<h1 id=\"Linux文件权限介绍\"><a href=\"#Linux文件权限介绍\" class=\"headerlink\" title=\"Linux文件权限介绍\"></a>Linux文件权限介绍</h1><p>r:read就是读权限 –数字4表示</p>\n<p>w:write就是写权限 –数字2表示</p>\n<p>x:excute就是执行权限 –数字1表示</p>\n<p>权限表示一共需要占9个字符的：— — —</p>\n<p>前三个字符表示用户权限，中间三个表示用户所在的组权限，最后三个表示其他用户权限</p>\n<p>例子：rw-r–r–</p>\n<p>rw-是说用户有读、写权，没有运行权，接着的r–表示用户组只有读权限，没有写入、运行权，最后的r–指其他用户只有读权限，没有写入、运行权。</p>\n<p>用数字表示就是644。</p>\n<p>例子：777</p>\n<p>777就是rwxrwxrwx，意思是用户、用户组和其他用户都有最高权限。<br>Linux下scp的用法</p>\n<p>#scp命令</p>\n<p>scp就是secure copy，一个在linux下用来进行远程拷贝文件的命令。</p>\n<p>有时我们需要获得远程服务器上的某个文件，该服务器既没有配置ftp服务器，也没有做共享，无法通过常规途径获得文件时，只需要通过简单的scp命令便可达到目的。</p>\n<h2 id=\"将本机文件复制到远程服务器上\"><a href=\"#将本机文件复制到远程服务器上\" class=\"headerlink\" title=\"将本机文件复制到远程服务器上\"></a>将本机文件复制到远程服务器上</h2><blockquote>\n<p>#scp /home/administrator/news.txt root@192.168.6.129:/etc/squid</p>\n</blockquote>\n<p>/home/administrator/      本地文件的绝对路径</p>\n<p>news.txt                          要复制到服务器上的本地文件</p>\n<p>root                                 通过root用户登录到远程服务器（也可以使用其他拥有同等权限的用户）</p>\n<p>192.168.6.129                远程服务器的ip地址（也可以使用域名或机器名）</p>\n<p>/etc/squid                       将本地文件复制到位于远程服务器上的路径</p>\n<h2 id=\"将远程服务器上的文件复制到本机\"><a href=\"#将远程服务器上的文件复制到本机\" class=\"headerlink\" title=\"将远程服务器上的文件复制到本机\"></a>将远程服务器上的文件复制到本机</h2><blockquote>\n<p>#scp remote@www.abc.com:/usr/local/sin.sh /home/administrator</p>\n</blockquote>\n<p>remote                       通过remote用户登录到远程服务器（也可以使用其他拥有同等权限的用户）</p>\n<p>www.abc.com              远程服务器的域名（当然也可以使用该服务器ip地址）</p>\n<p>/usr/local/sin.sh           欲复制到本机的位于远程服务器上的文件</p>\n<p>/home/administrator  将远程文件复制到本地的绝对路径</p>\n<p>注意两点：</p>\n<p>1.如果远程服务器防火墙有特殊限制，scp便要走特殊端口，具体用什么端口视情况而定，命令格式如下：</p>\n<blockquote>\n<p>#scp -p 4588 remote@www.abc.com:/usr/local/sin.sh /home/administrator</p>\n</blockquote>\n<p>2.使用scp要注意所使用的用户是否具有可读取远程服务器相应文件的权限。</p>\n<h1 id=\"压缩和解压\"><a href=\"#压缩和解压\" class=\"headerlink\" title=\"压缩和解压\"></a>压缩和解压</h1><h2 id=\"zip命令\"><a href=\"#zip命令\" class=\"headerlink\" title=\"zip命令\"></a>zip命令</h2><p>　　解压1：unzip FileName.zip</p>\n<p>　　解压2：unzip FileName.zip -d TargetDir</p>\n<p>　　压缩1：zip -r TargetDir/FileName.zip DirName</p>\n<p>　　压缩2：zip -r TargetDir/FileName.zip DirName/*</p>\n<p>　　压缩3：zip -r TargetDir/FileName.zip File1 File2 File3</p>\n<p>　　注意，zip解压适用于解压jar文件</p>\n<h2 id=\"tar命令\"><a href=\"#tar命令\" class=\"headerlink\" title=\"tar命令\"></a>tar命令</h2><p>　　解包：tar zxvf FileName.tar</p>\n<p>　　打包：tar czvf FileName.tar DirName</p>\n<h2 id=\"tar-gz-和-tgz\"><a href=\"#tar-gz-和-tgz\" class=\"headerlink\" title=\".tar.gz 和 .tgz\"></a>.tar.gz 和 .tgz</h2><p>　　解压：tar zxvf FileName.tar.gz</p>\n<p>　　压缩：tar zcvf FileName.tar.gz DirName</p>\n<h2 id=\"tar-bz\"><a href=\"#tar-bz\" class=\"headerlink\" title=\".tar.bz\"></a>.tar.bz</h2><p>　　解压：tar jxvf FileName.tar.bz</p>\n<h2 id=\"tar-bz2\"><a href=\"#tar-bz2\" class=\"headerlink\" title=\".tar.bz2\"></a>.tar.bz2</h2><p>　　解压：tar jxvf FileName.tar.bz2</p>\n<p>　　压缩：tar jcvf FileName.tar.bz2 DirName</p>\n<h2 id=\"tar-Z\"><a href=\"#tar-Z\" class=\"headerlink\" title=\".tar.Z\"></a>.tar.Z</h2><p>　　解压：tar Zxvf FileName.tar.Z</p>\n<p>　　压缩：tar Zcvf FileName.tar.Z DirName</p>\n<h2 id=\"gz命令\"><a href=\"#gz命令\" class=\"headerlink\" title=\"gz命令\"></a>gz命令</h2><p>　　解压1：gunzip FileName.gz</p>\n<p>　　解压2：gzip -d FileName.gz</p>\n<p>　　压缩：gzip FileName</p>\n<h2 id=\"bz2命令\"><a href=\"#bz2命令\" class=\"headerlink\" title=\"bz2命令\"></a>bz2命令</h2><p>　　解压1：bzip2 -d FileName.bz2</p>\n<p>　　解压2：bunzip2 FileName.bz2</p>\n<p>　　压缩： bzip2 -z FileName</p>\n<h2 id=\"bz命令\"><a href=\"#bz命令\" class=\"headerlink\" title=\"bz命令\"></a>bz命令</h2><p>　　解压1：bzip2 -d FileName.bz</p>\n<p>　　解压2：bunzip2 FileName.bz</p>\n<h2 id=\"Z命令\"><a href=\"#Z命令\" class=\"headerlink\" title=\"Z命令\"></a>Z命令</h2><p>　　解压：uncompress FileName.Z</p>\n<p>　　压缩：compress FileName</p>\n<h2 id=\"7z命令-如果没有7z命令请先执行“yum-install-p7zip”\"><a href=\"#7z命令-如果没有7z命令请先执行“yum-install-p7zip”\" class=\"headerlink\" title=\"7z命令(如果没有7z命令请先执行“yum install p7zip”)\"></a>7z命令(如果没有7z命令请先执行“yum install p7zip”)</h2><p>解压：7z x FileName.7z -o/home/zhichao</p>\n<p>//注意，x参数解压会自动生成与压缩文件名相同的目录，-o表示输出目录，其与目录路径之间没有空格，上面命令会解压FileName.7z到home/zhichao/FileName目录中。</p>\n<p>压缩：7z a FileName.7z DirName</p>\n<h1 id=\"grep命令\"><a href=\"#grep命令\" class=\"headerlink\" title=\"grep命令\"></a>grep命令</h1><p>grep命令使用正则表达式检索符合条件的内容，一般与其他命令组合使用。</p>\n<p>格式：</p>\n<p>grep 参数 条件</p>\n<p>参数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\">-a --text #不要忽略二进制的数据。</div><div class=\"line\"></div><div class=\"line\">-A&lt;显示行数&gt; --after-context=&lt;显示行数&gt; #除了显示符合范本样式的那一列之外，并显示该行之后的内容。</div><div class=\"line\"></div><div class=\"line\">-b --byte-offset #在显示符合样式的那一行之前，标示出该行第一个字符的编号。</div><div class=\"line\"></div><div class=\"line\">-B&lt;显示行数&gt; --before-context=&lt;显示行数&gt; #除了显示符合样式的那一行之外，并显示该行之前的内容。</div><div class=\"line\"></div><div class=\"line\">-c --count #计算符合样式的列数。</div><div class=\"line\"></div><div class=\"line\">-C&lt;显示行数&gt; --context=&lt;显示行数&gt;或-&lt;显示行数&gt; #除了显示符合样式的那一行之外，并显示该行之前后的内容。</div><div class=\"line\"></div><div class=\"line\">-d &lt;动作&gt; --directories=&lt;动作&gt; #当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。</div><div class=\"line\"></div><div class=\"line\">-e&lt;范本样式&gt; --regexp=&lt;范本样式&gt; #指定字符串做为查找文件内容的样式。</div><div class=\"line\"></div><div class=\"line\">-E --extended-regexp #将样式为延伸的普通表示法来使用。</div><div class=\"line\"></div><div class=\"line\">-f&lt;规则文件&gt; --file=&lt;规则文件&gt; #指定规则文件，其内容含有一个或多个规则样式，让grep查找符合规则条件的文件内容，格式为每行一个规则样式。</div><div class=\"line\"></div><div class=\"line\">-F --fixed-regexp #将样式视为固定字符串的列表。</div><div class=\"line\"></div><div class=\"line\">-G --basic-regexp #将样式视为普通的表示法来使用。</div><div class=\"line\"></div><div class=\"line\">-h --no-filename #在显示符合样式的那一行之前，不标示该行所属的文件名称。</div><div class=\"line\"></div><div class=\"line\">-H --with-filename #在显示符合样式的那一行之前，表示该行所属的文件名称。</div><div class=\"line\"></div><div class=\"line\">-i --ignore-case #忽略字符大小写的差别。</div><div class=\"line\"></div><div class=\"line\">-l --file-with-matches #列出文件内容符合指定的样式的文件名称。</div><div class=\"line\"></div><div class=\"line\">-L --files-without-match #列出文件内容不符合指定的样式的文件名称。</div><div class=\"line\"></div><div class=\"line\">-n --line-number #在显示符合样式的那一行之前，标示出该行的列数编号。</div><div class=\"line\"></div><div class=\"line\">-q --quiet或--silent #不显示任何信息。</div><div class=\"line\"></div><div class=\"line\">-r --recursive #此参数的效果和指定“-d recurse”参数相同。</div><div class=\"line\"></div><div class=\"line\">-s --no-messages #不显示错误信息。</div><div class=\"line\"></div><div class=\"line\">-v --revert-match #显示不包含匹配文本的所有行。</div><div class=\"line\"></div><div class=\"line\">-V --version #显示版本信息。</div><div class=\"line\"></div><div class=\"line\">-w --word-regexp #只显示全字符合的列。</div><div class=\"line\"></div><div class=\"line\">-x --line-regexp #只显示全列符合的列。</div><div class=\"line\"></div><div class=\"line\">-y #此参数的效果和指定“-i”参数相同。</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>从文件info.txt中读取关键词system进行搜索</p>\n<p>cat /home/usr/download/info.txt | grep -f system</p>\n<p>从文件info.txt中读取关键词system进行搜索并显示行号</p>\n<p>cat /home/usr/download/info.txt | grep -nf system</p>\n<h1 id=\"cat命令\"><a href=\"#cat命令\" class=\"headerlink\" title=\"cat命令\"></a>cat命令</h1><p>cat命令用来显示文件内容，或者将几个文件连接起来显示，或者从标准输入读取内容并显示，它常与重定向符号配合使用。</p>\n<p>格式：</p>\n<p>cat 参数 文件</p>\n<p>参数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">-A, --show-all  等价于 -vET</div><div class=\"line\"></div><div class=\"line\">-b, --number-nonblank 对非空输出行编号</div><div class=\"line\"></div><div class=\"line\">-e   等价于 -vE</div><div class=\"line\"></div><div class=\"line\">-E, --show-ends  在每行结束处显示 $</div><div class=\"line\"></div><div class=\"line\">-n, --number 对输出的所有行编号,由1开始对所有输出的行数编号</div><div class=\"line\"></div><div class=\"line\">-s, --squeeze-blank 有连续两行以上的空白行，就代换为一行的空白行</div><div class=\"line\"></div><div class=\"line\">-t   与 -vT 等价</div><div class=\"line\"></div><div class=\"line\">-T, --show-tabs  将跳格字符显示为 ^I</div><div class=\"line\"></div><div class=\"line\">-u   (被忽略)</div><div class=\"line\"></div><div class=\"line\">-v, --show-nonprinting 使用 ^ 和 M- 引用，除了 LFD 和 TAB 之外</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>把 log.php 的文件内容加上行号后输出到new_log.php这个文件中</p>\n<p>cat -n /data/www/project/log.php /data/www/project/new_log.php</p>\n<h1 id=\"ps命令\"><a href=\"#ps命令\" class=\"headerlink\" title=\"ps命令\"></a>ps命令</h1><p>ps命令是process status的缩写，顾名思义就是查看系统中所有进程状态状态。</p>\n<p>ps命令查看的程序状态并不是动态连续的，如果想对进程实施监控，请用top命令。</p>\n<p>如果直接用ps命令，会显示所有进程的状态，通常结合grep命令查看某进程的状态。</p>\n<p>格式：</p>\n<p>ps 参数</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">a 显示所有进程</div><div class=\"line\"></div><div class=\"line\">-a 显示同一终端下的所有程序</div><div class=\"line\"></div><div class=\"line\">-A 显示所有进程</div><div class=\"line\"></div><div class=\"line\">c 显示进程的真实名称</div><div class=\"line\"></div><div class=\"line\">-N 反向选择</div><div class=\"line\"></div><div class=\"line\">-e 等于“-A”</div><div class=\"line\"></div><div class=\"line\">e 显示环境变量</div><div class=\"line\"></div><div class=\"line\">f 显示程序间的关系</div><div class=\"line\"></div><div class=\"line\">-H 显示树状结构</div><div class=\"line\"></div><div class=\"line\">r 显示当前终端的进程</div><div class=\"line\"></div><div class=\"line\">T 显示当前终端的所有程序</div><div class=\"line\"></div><div class=\"line\">u 指定用户的所有进程</div><div class=\"line\"></div><div class=\"line\">-au 显示较详细的资讯</div><div class=\"line\"></div><div class=\"line\">-aux 显示所有包含其他使用者的行程</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>显示java相关程序</p>\n<p>ps aux|grep java</p>\n<p>显示httpd相关程序</p>\n<p>ps aux|grep httpd</p>\n<p>查看正在使用8080端口的程序</p>\n<p>ps -ef|grep 8080</p>\n<h1 id=\"fuser-命令\"><a href=\"#fuser-命令\" class=\"headerlink\" title=\"fuser 命令\"></a>fuser 命令</h1><p>fuser用于查找正在使用指定的某个文件、挂载点、网络端口的进程的详细信息。</p>\n<p>格式：</p>\n<p>fuser 参数 文件或挂载点或网络端口</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">a 显示所有命令行中指定的文件，默认情况下被访问的文件才会被显示。</div><div class=\"line\"></div><div class=\"line\">-c 和-m一样，用于POSIX兼容。</div><div class=\"line\"></div><div class=\"line\">-d 暗示使用了 -c 和 -x 标志。关于任何与文件系统（自父目录删除的）无链接的打开文件的报告。当与 -V 标志一起使用时，它也会报告被删除文件的节点号和大小。</div><div class=\"line\"></div><div class=\"line\">-f 仅对文件的打开实例报告。</div><div class=\"line\"></div><div class=\"line\">-i 杀掉进程之前询问用户，如果没有-k这个选项会被忽略。</div><div class=\"line\"></div><div class=\"line\">-k 杀掉访问文件的进程。如果没有指定-signal就会发送SIGKILL信号。</div><div class=\"line\"></div><div class=\"line\">-l 列出所有已知的信号名称。</div><div class=\"line\"></div><div class=\"line\">-m name 指定一个挂载文件系统上的文件或者被挂载的块设备（名称name）。这样所有访问这个文件或者文件系统的进程都会被列出来。如果指定的是一个目录会自动转换成,并使用所有挂载在那个目录下面的文件系统。</div><div class=\"line\"></div><div class=\"line\">-n space 指定一个不同的命名空间(space).这里支持不同的空间文件(文件名，此处默认)、tcp(本地tcp端口)、udp(本地udp端口)。对于端口， 可以指定端口号或者名称，如果不会引起歧义那么可以使用简单表示的形式，例如：name/space (即形如:80/tcp之类的表示)。</div><div class=\"line\"></div><div class=\"line\">-s 静默模式，这时候-u,-v会被忽略。-a不能和-s一起使用。</div><div class=\"line\"></div><div class=\"line\">-signal 使用指定的信号，而不是用SIGKILL来杀掉进程。可以通过名称或者号码来表示信号(例如-HUP,-1),这个选项要和-k一起使用，否则会被忽略。</div><div class=\"line\"></div><div class=\"line\">-u 在每个PID后面添加进程拥有者的用户名称。</div><div class=\"line\"></div><div class=\"line\">-v 详细模式。输出似ps命令的输出，包含PID,USER,COMMAND等许多域,如果是内核访问的那么PID为kernel. -V 输出版本号。</div><div class=\"line\"></div><div class=\"line\">-x 与 -c 或 -f 连用，报告除标准 fuser 输出以外的可执行的和可载入的对象。</div><div class=\"line\"></div><div class=\"line\">-4 使用IPV4套接字,不能和-6一起应用，只在-n的tcp和udp的命名存在时不被忽略。</div><div class=\"line\"></div><div class=\"line\">-6 使用IPV6套接字,不能和-4一起应用，只在-n的tcp和udp的命名存在时不被忽略。</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>查看和关闭正在使用readme.txt文件的程序</p>\n<p>fuser -m -v readme.txt</p>\n<p>fuser -m -k readme.txt</p>\n<p>查看和关闭正在使用80端口的程序</p>\n<p>fuser -n -v tcp 80</p>\n<p>fuser -n -k tcp 80</p>\n<p>chown命令</p>\n<p>chown命令将指定文件或文件夹的拥有者改为指定的用户或组，用户可以是用户名或者用户ID，组可以是组名或者组ID，文件是以空格分开的要改变权限的文件列表，支持通配符。</p>\n<p>格式：</p>\n<h1 id=\"chown-参数-用户-文件\"><a href=\"#chown-参数-用户-文件\" class=\"headerlink\" title=\"chown 参数 用户 文件\"></a>chown 参数 用户 文件</h1><p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">-c 显示更改的部分的信息</div><div class=\"line\"></div><div class=\"line\">-f 忽略错误信息</div><div class=\"line\"></div><div class=\"line\">-h 修复符号链接</div><div class=\"line\"></div><div class=\"line\">-R 处理指定目录以及其子目录下的所有文件</div><div class=\"line\"></div><div class=\"line\">-v 显示详细的处理信息</div><div class=\"line\"></div><div class=\"line\">-deference 作用于符号链接的指向，而不是链接文件本身</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>将目录/data/www/project/下的所有文件和目录的拥有者都修改为apache账户。</p>\n<p>chown -R apache.apache /data/www/project/</p>\n<h1 id=\"chmod命令\"><a href=\"#chmod命令\" class=\"headerlink\" title=\"chmod命令\"></a>chmod命令</h1><p>chmod命令用于改变linux系统文件或目录的访问权限，用它控制文件或目录的访问权限。</p>\n<p>Linux系统中的每个文件和目录都有访问许可权限，用它来确定谁可以通过何种方式对文件和目录进行访问和操作。</p>\n<p>格式：</p>\n<p>chmod 参数 权限模式 文件</p>\n<p>参数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">-c 当发生改变时，报告处理信息</div><div class=\"line\"></div><div class=\"line\">-f 错误信息不输出</div><div class=\"line\"></div><div class=\"line\">-R 处理指定目录以及其子目录下的所有文件</div><div class=\"line\"></div><div class=\"line\">-v 运行时显示详细处理信息</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>将目录/data/www/project/下的所有文件和目录的访问权限修改为“当前用户、当前用户组和其他用户都可读可写可执行”的权限。</p>\n<p>chown -R 777 /data/www/project/</p>\n<h1 id=\"kill命令\"><a href=\"#kill命令\" class=\"headerlink\" title=\"kill命令\"></a>kill命令</h1><p>kill命令用于关闭指定进程。</p>\n<p>格式：</p>\n<p>kill 参数 信号 进程ID</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">-s 指定发送信号</div><div class=\"line\"></div><div class=\"line\">-l 根据信号名显示信号编号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称</div><div class=\"line\"></div><div class=\"line\">-a 当处理当前进程时，不限制命令名和进程号的对应关系</div><div class=\"line\"></div><div class=\"line\">-p 指定kill 命令只打印相关进程的进程号，而不发送任何信号</div><div class=\"line\"></div><div class=\"line\">-u 指定用户</div></pre></td></tr></table></figure></p>\n<h1 id=\"信号：\"><a href=\"#信号：\" class=\"headerlink\" title=\"信号：\"></a>信号：</h1><h2 id=\"信号名-信号编号-信号含义\"><a href=\"#信号名-信号编号-信号含义\" class=\"headerlink\" title=\"信号名 信号编号 信号含义\"></a>信号名 信号编号 信号含义</h2><p>HUP 1 终端断线</p>\n<p>INT 2 中断</p>\n<p>QUIT 3 退出</p>\n<p>TERM 15 终止</p>\n<p>KILL 9 强制终止</p>\n<p>CONT 18 继续（与STOP相反）</p>\n<p>STOP 19 暂停（</p>\n<p>示例：</p>\n<p>显示信号KILL的信号编号</p>\n<p>kill -l KILL</p>\n<p>关闭apache用户下所有进程</p>\n<p>kill -u apache.apache</p>\n<p>强制关闭进程ID为1937的进程，参数s可以省略。</p>\n<p>kill -s 9 1937</p>\n<p>kill -9 1937</p>\n<h1 id=\"top命令\"><a href=\"#top命令\" class=\"headerlink\" title=\"top命令\"></a>top命令</h1><p>top命令查看系统中各个进程的资源占用状况，默认使用cpu占用来排序显示，top命令显示的结果是实时的。</p>\n<p>格式：</p>\n<p>top 参数</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">-b 批处理</div><div class=\"line\"></div><div class=\"line\">-c 显示完整的治命令</div><div class=\"line\"></div><div class=\"line\">-i<span class=\"tag\">&lt;<span class=\"name\">时间</span>&gt;</span> 设置间隔时间</div><div class=\"line\"></div><div class=\"line\">-I 忽略失效过程</div><div class=\"line\"></div><div class=\"line\">-p<span class=\"tag\">&lt;<span class=\"name\">进程号</span>&gt;</span> 指定进程</div><div class=\"line\"></div><div class=\"line\">-n<span class=\"tag\">&lt;<span class=\"name\">次数</span>&gt;</span> 循环显示的次数</div><div class=\"line\"></div><div class=\"line\">-s 保密模式</div><div class=\"line\"></div><div class=\"line\">-S 累积模式</div><div class=\"line\"></div><div class=\"line\">-u<span class=\"tag\">&lt;<span class=\"name\">用户名</span>&gt;</span> 指定用户名</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>查看所有程序资源占用状况</p>\n<p>top</p>\n<p>查看apache用户所有程序资源占用状况</p>\n<p>top -u apache.apache</p>\n<h1 id=\"find命令\"><a href=\"#find命令\" class=\"headerlink\" title=\"find命令\"></a>find命令</h1><p>在指定目录中查找指定条件的文件或文件夹。</p>\n<p>格式：</p>\n<p>find 目录路径 选项 查找条件</p>\n<p>选项：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\">-name 按照文件名查找文件。</div><div class=\"line\"></div><div class=\"line\">-perm 按照文件权限来查找文件。</div><div class=\"line\"></div><div class=\"line\">-prune 使用这一选项可以使find命令不在当前指定的目录中查找，如果同时使用-depth选项，那么-prune将被find命令忽略。</div><div class=\"line\"></div><div class=\"line\">-user 按照文件属主来查找文件。</div><div class=\"line\"></div><div class=\"line\">-group 按照文件所属的组来查找文件。</div><div class=\"line\"></div><div class=\"line\">-mtime -n +n 按照文件的更改时间来查找文件， - n表示文件更改时间距现在n天以内，+ n表示文件更改时间距现在n天以前。find命令还有-atime和-ctime 选项，但它们都和-m time选项。</div><div class=\"line\"></div><div class=\"line\">-nogroup 查找无有效所属组的文件，即该文件所属的组在/etc/groups中不存在。</div><div class=\"line\"></div><div class=\"line\">-nouser 查找无有效属主的文件，即该文件的属主在/etc/passwd中不存在。</div><div class=\"line\"></div><div class=\"line\">-newer file1 ! file2 查找更改时间比文件file1新但比文件file2旧的文件。</div><div class=\"line\"></div><div class=\"line\">-type<span class=\"tag\">&lt;<span class=\"name\">类型参数</span>&gt;</span> 查找某一类型的文件，诸如：</div><div class=\"line\"></div><div class=\"line\">b - 块设备文件。</div><div class=\"line\"></div><div class=\"line\">d - 目录。</div><div class=\"line\"></div><div class=\"line\">c - 字符设备文件。</div><div class=\"line\"></div><div class=\"line\">p - 管道文件。</div><div class=\"line\"></div><div class=\"line\">l - 符号链接文件。</div><div class=\"line\"></div><div class=\"line\">f - 普通文件。</div><div class=\"line\"></div><div class=\"line\">-size n：[c] 查找文件长度为n块的文件，带有c时表示文件长度以字节计。-depth：在查找文件时，首先查找当前目录中的文件，然后再在其子目录中查找。</div><div class=\"line\"></div><div class=\"line\">-fstype：查找位于某一类型文件系统中的文件，这些文件系统类型通常可以在配置文件/etc/fstab中找到，该配置文件中包含了本系统中有关文件系统的信息。</div><div class=\"line\"></div><div class=\"line\">-mount：在查找文件时不跨越文件系统mount点。</div><div class=\"line\"></div><div class=\"line\">-follow：如果find命令遇到符号链接文件，就跟踪至链接所指向的文件。</div><div class=\"line\"></div><div class=\"line\">-cpio：对匹配的文件使用cpio命令，将这些文件备份到磁带设备中。</div><div class=\"line\"></div><div class=\"line\">-amin n 查找系统中最后N分钟访问的文件</div><div class=\"line\"></div><div class=\"line\">-atime n 查找系统中最后n*24小时访问的文件</div><div class=\"line\"></div><div class=\"line\">-cmin n 查找系统中最后N分钟被改变文件状态的文件</div><div class=\"line\"></div><div class=\"line\">-ctime n 查找系统中最后n*24小时被改变文件状态的文件</div><div class=\"line\"></div><div class=\"line\">-mmin n 查找系统中最后N分钟被改变文件数据的文件</div><div class=\"line\"></div><div class=\"line\">-mtime n 查找系统中最后n*24小时被改变文件数据的文件</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>查找 “/”目录（Linux系统根目录）下名称为httpd.conf的文件</p>\n<p>find / -name httpd.conf</p>\n<p>查找 “/data/www/project/”目录下所有php文件</p>\n<p>find /data/www/project -name *.php</p>\n<p>查找 “.”目录（当前目录）下权限为777的文件</p>\n<p>find . -perm 777</p>\n<p>查找 “/”目录下48小时内修改过的文件</p>\n<p>find / -atime -2</p>\n<p>查找 “/”目录下所有文件夹</p>\n<p>find / -type d</p>\n<p>查找 “/”目录下大于1kb的文件</p>\n<p>find / -size +1000c</p>\n<h1 id=\"whereis命令\"><a href=\"#whereis命令\" class=\"headerlink\" title=\"whereis命令\"></a>whereis命令</h1><p>whereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、说明文件（参数-m）和源代码文件（参数-s），如果省略参数，则返回所有信息。</p>\n<p>和find相比，whereis查找的速度非常快，这是因为linux系统会将 系统内的所有文件都记录在一个数据库文件中，当使用whereis和下面即将介绍的locate时，会从数据库中查找数据，而不是像find命令那样，通 过遍历硬盘来查找，效率自然会很高。</p>\n<p>但是该数据库文件并不是实时更新，默认情况下时一星期更新一次，因此，我们在用whereis和locate 查找文件时，有时会找到已经被删除的数据，或者刚刚建立文件，却无法查找到，原因就是因为数据库文件没有被更新。</p>\n<p>whereis常用于查找安装程序的安装目录。</p>\n<p>格式：</p>\n<p>whereis 参数 程序名</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">-b 定位可执行文件。</div><div class=\"line\"></div><div class=\"line\">-m 定位帮助文件。</div><div class=\"line\"></div><div class=\"line\">-s 定位源代码文件。</div><div class=\"line\"></div><div class=\"line\">-u 搜索默认路径下除可执行文件、源代码文件、帮助文件以外的其它文件。</div><div class=\"line\"></div><div class=\"line\">-B 指定搜索可执行文件的路径。</div><div class=\"line\"></div><div class=\"line\">-M 指定搜索帮助文件的路径。</div><div class=\"line\"></div><div class=\"line\">-S 指定搜索源代码文件的路径。</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>查找mysql安装目录</p>\n<p>whereis mysql</p>\n<h1 id=\"ls命令\"><a href=\"#ls命令\" class=\"headerlink\" title=\"ls命令\"></a>ls命令</h1><p>ls命令用来查看目标目录中所有的子目录和文件信息。</p>\n<p>格式：</p>\n<p>ls 参数 目录名</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div></pre></td><td class=\"code\"><pre><div class=\"line\">-a, –all 列出目录下的所有文件，包括以 . 开头的隐含文件</div><div class=\"line\"></div><div class=\"line\">-A 同-a，但不列出“.”(表示当前目录)和“..”(表示当前目录的父目录)。</div><div class=\"line\"></div><div class=\"line\">-c 配合 -lt：根据 ctime 排序及显示 ctime (文件状态最后更改的时间)配合 -l：显示 ctime 但根据名称排序否则：根据 ctime 排序</div><div class=\"line\"></div><div class=\"line\">-C 每栏由上至下列出项目</div><div class=\"line\"></div><div class=\"line\">–color[=WHEN] 控制是否使用色彩分辨文件。WHEN 可以是'never'、'always'或'auto'其中之一</div><div class=\"line\"></div><div class=\"line\">-d, –directory 将目录象文件一样显示，而不是显示其下的文件。</div><div class=\"line\"></div><div class=\"line\">-D, –dired 产生适合 Emacs 的 dired 模式使用的结果</div><div class=\"line\"></div><div class=\"line\">-f 对输出的文件不进行排序，-aU 选项生效，-lst 选项失效</div><div class=\"line\"></div><div class=\"line\">-g 类似 -l,但不列出所有者</div><div class=\"line\"></div><div class=\"line\">-G, –no-group 不列出任何有关组的信息</div><div class=\"line\"></div><div class=\"line\">-h, –human-readable 以容易理解的格式列出文件大小 (例如 1K 234M 2G)</div><div class=\"line\"></div><div class=\"line\">–si 类似 -h,但文件大小取 1000 的次方而不是 1024</div><div class=\"line\"></div><div class=\"line\">-H, –dereference-command-line 使用命令列中的符号链接指示的真正目的地</div><div class=\"line\"></div><div class=\"line\">–indicator-style=方式 指定在每个项目名称后加上指示符号<span class=\"tag\">&lt;<span class=\"name\">方式</span>&gt;</span>：none (默认)，classify (-F)，file-type (-p)</div><div class=\"line\"></div><div class=\"line\">-i, –inode 印出每个文件的 inode 号</div><div class=\"line\"></div><div class=\"line\">-I, –ignore=样式 不印出任何符合 shell 万用字符<span class=\"tag\">&lt;<span class=\"name\">样式</span>&gt;</span>的项目</div><div class=\"line\"></div><div class=\"line\">-k 即 –block-size=1K,以 k 字节的形式表示文件的大小。</div><div class=\"line\"></div><div class=\"line\">-l 除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来。</div><div class=\"line\"></div><div class=\"line\">-L, –dereference 当显示符号链接的文件信息时，显示符号链接所指示的对象而并非符号链接本身的信息</div><div class=\"line\"></div><div class=\"line\">-m 所有项目以逗号分隔，并填满整行行宽</div><div class=\"line\"></div><div class=\"line\">-o 类似 -l,显示文件的除组信息外的详细信息。</div><div class=\"line\"></div><div class=\"line\">-r, –reverse 依相反次序排列</div><div class=\"line\"></div><div class=\"line\">-R, –recursive 同时列出所有子目录层</div><div class=\"line\"></div><div class=\"line\">-s, –size 以块大小为单位列出所有文件的大小</div><div class=\"line\"></div><div class=\"line\">-S 根据文件大小排序</div><div class=\"line\"></div><div class=\"line\">–sort=WORD 以下是可选用的 WORD 和它们代表的相应选项：</div><div class=\"line\"></div><div class=\"line\">extension -X status -c</div><div class=\"line\"></div><div class=\"line\">none -U time -t</div><div class=\"line\"></div><div class=\"line\">size -S atime -u</div><div class=\"line\"></div><div class=\"line\">time -t access -u</div><div class=\"line\"></div><div class=\"line\">version -v use -u</div><div class=\"line\"></div><div class=\"line\">-t 以文件修改时间排序</div><div class=\"line\"></div><div class=\"line\">-u 配合 -lt:显示访问时间而且依访问时间排序</div><div class=\"line\"></div><div class=\"line\">配合 -l:显示访问时间但根据名称排序</div><div class=\"line\"></div><div class=\"line\">否则：根据访问时间排序</div><div class=\"line\"></div><div class=\"line\">-U 不进行排序;依文件系统原有的次序列出项目</div><div class=\"line\"></div><div class=\"line\">-v 根据版本进行排序</div><div class=\"line\"></div><div class=\"line\">-w, –width=COLS 自行指定屏幕宽度而不使用目前的数值</div><div class=\"line\"></div><div class=\"line\">-x 逐行列出项目而不是逐栏列出</div><div class=\"line\"></div><div class=\"line\">-X 根据扩展名排序</div><div class=\"line\"></div><div class=\"line\">-1 每行只列出一个文件</div><div class=\"line\"></div><div class=\"line\">–help 显示此帮助信息并离开</div><div class=\"line\"></div><div class=\"line\">–version 显示版本信息并离开</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>显示当前目录下所有文件和子目录（包括隐藏文件和隐藏目录）的详细信息</p>\n<p>ls -a -l</p>\n<p>显示”/data/www/project”目录下所有文件和子目录（不包括隐藏文件和隐藏目录）的详细信息</p>\n<p>ls -l /data/www/project</p>\n<p>显示”/data/www/project”目录下所有文件和子目录（包括隐藏文件和隐藏目录）的名称</p>\n<p>ls -a /data/www/project</p>\n<h1 id=\"sudo命令\"><a href=\"#sudo命令\" class=\"headerlink\" title=\"sudo命令\"></a>sudo命令</h1><p>sudo命令是个管理员分配给一些linux用户执行一些没有权限的命令。</p>\n<p>如果发现执行linux命令提示没有权限什么balabala的，不管什么命令，前面先加上sudo试试。</p>\n<p>格式：无需了解</p>\n<p>参数：无需了解</p>\n<p>示例：</p>\n<p>sudo yum install xxxx</p>\n<p>sudo svn up xxxx</p>\n<p>sudo rm -r xxxx</p>\n<h1 id=\"tail命令\"><a href=\"#tail命令\" class=\"headerlink\" title=\"tail命令\"></a>tail命令</h1><p>tail命令用于显示指定文件的末尾内容，并且使用-f参数可以查看即时的文件内容，常用查看日志文件。</p>\n<p>格式：</p>\n<p>tail 参数 文件</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">-f 循环读取</div><div class=\"line\"></div><div class=\"line\">-q 不显示处理信息</div><div class=\"line\"></div><div class=\"line\">-v 显示详细的处理信息</div><div class=\"line\"></div><div class=\"line\">-c<span class=\"tag\">&lt;<span class=\"name\">数目</span>&gt;</span> 显示的字节数</div><div class=\"line\"></div><div class=\"line\">-n<span class=\"tag\">&lt;<span class=\"name\">行数</span>&gt;</span> 显示行数</div><div class=\"line\"></div><div class=\"line\">--pid=PID 与-f合用,表示在进程ID,PID死掉之后结束.</div><div class=\"line\"></div><div class=\"line\">-q, --quiet, --silent 从不输出给出文件名的首部</div><div class=\"line\"></div><div class=\"line\">-s, --sleep-interval=S 与-f合用,表示在每次反复的间隔休眠S秒</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>及时显示/data/www/project目录下log.php文件的末尾内容</p>\n<p>tail -f /data/www/project/log.php</p>\n<p>及时显示/data/www/project目录下log.php文件的500行末尾内容</p>\n<p>tail -f -n 500 /data/www/project/log.php</p>\n<h1 id=\"cp命令\"><a href=\"#cp命令\" class=\"headerlink\" title=\"cp命令\"></a>cp命令</h1><p>cp命令用于复制文件或目录。</p>\n<p>格式：</p>\n<p>cp 参数 原文件或原目录 目标文件或目录</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\">-a或--archive 等于-dR或-dpR</div><div class=\"line\"></div><div class=\"line\">--backup 为每个已存在的目标文件创建备份</div><div class=\"line\"></div><div class=\"line\">-b 类似--backup但不接受参数</div><div class=\"line\"></div><div class=\"line\">--copy-contents 在递归处理是复制特殊文件内容</div><div class=\"line\"></div><div class=\"line\">-d或--no-dereference或--preserve=links 若源文件为连接文件属性，则复制连接文件指向的文件而非复制文件本身</div><div class=\"line\"></div><div class=\"line\">-s或--symbolic-link 对源文件建立符号链接，而非复制文件</div><div class=\"line\"></div><div class=\"line\">-f或--force 强制操作，如果目标文件无法打开则将其移除并重试(当-n选项存在时则不需再选此项)</div><div class=\"line\"></div><div class=\"line\">-i或--interactive 覆盖前询问(使前面的-n选项失效)</div><div class=\"line\"></div><div class=\"line\">-H 跟随源文件中的命令行符号链接</div><div class=\"line\"></div><div class=\"line\">-l或--link 链接文件而不复制</div><div class=\"line\"></div><div class=\"line\">-L或--dereference 总是跟随符号链接</div><div class=\"line\"></div><div class=\"line\">-n或--no-clobber 不要覆盖已存在的文件(使前面的-i选项失效)</div><div class=\"line\"></div><div class=\"line\">-P或----parents 保留源文件或目录的路径，此路径可以是绝对路径或相对路径，且目的目录必须已经存在</div><div class=\"line\"></div><div class=\"line\">-p等于--preserve 保留源文件或目录的属性，包括所有者、所属组、权限与时间</div><div class=\"line\"></div><div class=\"line\">--preserve[=属性列表 保持指定的属性(默认：模式,所有权,时间戳)，如果可能保持附加属性：环境、链接等</div><div class=\"line\"></div><div class=\"line\">-R或-r或--recursive 递归处理，复制目录及目录内的所有项目</div><div class=\"line\"></div><div class=\"line\">-u或--update 使用这项参数之后，只会在源文件的修改时间(Modification Time)较目的文件更新时，或是名称相互对应的目的文件并不存在，才复制文件</div><div class=\"line\"></div><div class=\"line\">-v或--verbose 显示执行过程</div><div class=\"line\"></div><div class=\"line\">-x或--one-file-system 复制的文件或目录存放的文件系统，必须与cp指令执行时所处的文件系统相同，否则不复制，亦不处理位于其他分区的文件</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>强行复制文件index.html到目录/data/www/project</p>\n<p>cp -f -v /home/usr/download/index.html /data/www/project</p>\n<p>同：cp -fv /home/usr/download/index.html /data/www/project</p>\n<h1 id=\"rm命令\"><a href=\"#rm命令\" class=\"headerlink\" title=\"rm命令\"></a>rm命令</h1><p>rm命令和cp命令类似。</p>\n<p>示例：</p>\n<p>删除download目录</p>\n<p>rm -rf /home/usr/download</p>\n<p>删除download目录下的所有文件和子目录，但保留download目录</p>\n<p>rm -rf /home/usr/download/*</p>\n<h1 id=\"mv命令\"><a href=\"#mv命令\" class=\"headerlink\" title=\"mv命令\"></a>mv命令</h1><p>mv命令和cp命令类似。</p>\n<p>示例：</p>\n<p>移动download目录中的所有子目录和文件到/data/www/project 目录，但保留download目录</p>\n<p>mv -rf /home/usr/download/* /data/www/project</p>\n<h1 id=\"rpm命令\"><a href=\"#rpm命令\" class=\"headerlink\" title=\"rpm命令\"></a>rpm命令</h1><p>rpm是RedHat Package Manager（RedHat软件包管理工具）的简称。</p>\n<p>.rpm执行安装包分为二进制包（Binary）以及源代码包（Source）两种，二进制包可以直接安装在计算机中，而源代码包将会由RPM自动编译、安装。源代码包经常以src.rpm作为后缀名。</p>\n<p>常用参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">－ivh：安装显示安装进度–install–verbose–hash</div><div class=\"line\"></div><div class=\"line\">－Uvh：升级软件包–Update；</div><div class=\"line\"></div><div class=\"line\">－qpl：列出RPM软件包内的文件信息[Query Package list]；</div><div class=\"line\"></div><div class=\"line\">－qpi：列出RPM软件包的描述信息[Query Package install package(s)]；</div><div class=\"line\"></div><div class=\"line\">－qf：查找指定文件属于哪个RPM软件包[Query File]；</div><div class=\"line\"></div><div class=\"line\">－Va：校验所有的RPM软件包，查找丢失的文件[View Lost]；</div><div class=\"line\"></div><div class=\"line\">－e：删除包</div><div class=\"line\"></div><div class=\"line\">-q samba ：查询程序是否安装</div></pre></td></tr></table></figure></p>\n<p>常用命令：</p>\n<p>install/upgrade/remove：安装/更新/卸载</p>\n<h1 id=\"yum命令\"><a href=\"#yum命令\" class=\"headerlink\" title=\"yum命令\"></a>yum命令</h1><p>Yum（全称为 Yellow dog Updater, Modified）是一个在Fedora和RedHat以及CentOS中的Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。</p>\n<p>常用参数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">-e 静默执行</div><div class=\"line\"></div><div class=\"line\">-t 忽略错误</div><div class=\"line\"></div><div class=\"line\">-R[分钟] 设置等待时间</div><div class=\"line\"></div><div class=\"line\">-y 自动应答yes</div><div class=\"line\"></div><div class=\"line\">–skip-broken 忽略依赖问题</div><div class=\"line\"></div><div class=\"line\">–nogpgcheck 忽略GPG验证</div></pre></td></tr></table></figure></p>\n<h1 id=\"全部命令：\"><a href=\"#全部命令：\" class=\"headerlink\" title=\"全部命令：\"></a>全部命令：</h1><p>check-update 检查可更新的包</p>\n<p>clearn 清除全部</p>\n<p>clean packages 清除临时包文件（/var/cache/yum 下文件）</p>\n<p>clearn headers 清除rpm头文件</p>\n<p>clean oldheaders 清除旧的rpm头文件</p>\n<p>deplist 列出包的依赖</p>\n<p>list 可安装和可更新的RPM包</p>\n<p>list installed 已安装的包</p>\n<p>list extras 已安装且不在资源库的包</p>\n<p>info 可安装和可更新的RPM包 信息</p>\n<p>info installed 已安装包的信息(-qa 参数相似)</p>\n<p>install[RPM包] 安装包</p>\n<p>localinstall 安装本地的 RPM包</p>\n<p>update[RPM包] 更新包</p>\n<p>upgrade 升级系统</p>\n<p>search[关键词] 搜索包</p>\n<p>provides[关键词] 搜索特定包文件名</p>\n<p>reinstall[RPM包] 重新安装包</p>\n<p>repolist 显示资源库的配置</p>\n<p>resolvedep 指定依赖</p>\n<p>remove[RPM包] 卸载包</p>\n<p>如果要安装指定版本或指定插件，则需要详细文件名称：</p>\n<p>[zhichao@localhost ~]$ sudo yum list java*</p>\n<p>java-1.8.0-openjdk.x86_64 1:1.8.0.45-36.b13.fc22 @System</p>\n<p>java-1.8.0-openjdk-devel.x86_64 1:1.8.0.45-36.b13.fc22 @System</p>\n<p>java-1.8.0-openjdk-headless.x86_64 1:1.8.0.45-36.b13.fc22 @System</p>\n<p>sudo yum install java-1.8.0-openjdk-devel.x86_64</p>\n<p>apt-get命令</p>\n<p>apt-get（全称Advanced Package Tool）的作用同于yum，不过使用该命令的操作系统为Ubuntu和Debian。</p>\n<p>经过修改后可以使用apt-rpm处理红帽的Package Manager（RPM）文件。</p>\n<p>常用命令：</p>\n<p>apt-get install packagename</p>\n<p>安装一个新软件包</p>\n<p>apt-get remove packagename</p>\n<p>卸载一个已安装的软件包（保留配置文档）</p>\n<p>apt-get remove –purge packagename</p>\n<p>卸载一个已安装的软件包（删除配置文档）</p>\n<p>apt-get autoremove packagename</p>\n<p>删除包及其依赖的软件包</p>\n<p>apt-get autoremove –purge packagname</p>\n<p>删除包及其依赖的软件包+配置文件，比上面的要删除的彻底一点</p>\n<p>dpkg –force-all –purge packagename</p>\n<p>有些软件很难卸载，而且还阻止了别的软件的应用，就能够用这个，但是有点冒险。</p>\n<p>dnf命令</p>\n<p>dnf是fedora22新的用于替换yum和rpm的命令。</p>\n<p>在使用yum时，会提示过时，但仍然可用。</p>\n<p>详细了解请看一下这篇文章：<a href=\"http://www.linuxidc.com/Linux/2015-06/118751.htm\" target=\"_blank\" rel=\"external\">http://www.linuxidc.com/Linux/2015-06/118751.htm</a></p>\n<p>。</p>\n<p>systemctl命令</p>\n<p>在cenos7和fedora22中，systemctl替换了service命令。</p>\n<p>写法从以前的：service start mysqld</p>\n<p>变成了：systemctl start mysqld.service</p>\n<p>详细了解请看一下这篇文章：<a href=\"http://www.linuxidc.com/Linux/2015-07/120833.htm\" target=\"_blank\" rel=\"external\">http://www.linuxidc.com/Linux/2015-07/120833.htm</a></p>\n<p>。</p>\n<p>或者：</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\" target=\"_blank\" rel=\"external\">https://wiki.archlinux.org/index.php/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</p>\n<p>pwd命令</p>\n<p>pwd命令可以获取当前目录的全路径。</p>\n<p>示例：</p>\n<p>$ pwd</p>\n<p>/home/zhichao/下载</p>\n<h1 id=\"终端下的快捷键\"><a href=\"#终端下的快捷键\" class=\"headerlink\" title=\"终端下的快捷键\"></a>终端下的快捷键</h1><p>Ctrl+a：光标回到命令行首。 （a：ahead）﻿</p>\n<p>Ctrl+e：光标回到命令行尾。 （e：end）</p>\n<p>Ctrl+b：光标向行首移动一个字符。 （b：backwards）</p>\n<p>Ctrl+f：光标向行尾移动一个字符。 （f：forwards）</p>\n<p>Ctrl+w: 删除光标处到行首的字符。</p>\n<p>Ctrl+k：删除光标处到行尾的字符。</p>\n<p>Ctrl+u：删除整个命令行文本字符。</p>\n<p>Ctrl+h：向行首删除一个字符。</p>\n<p>Ctrl+d：向行尾删除一个字符。</p>\n<p>Ctrl+y:：粘贴Ctrl+u，Ctrl+k，Ctrl+w删除的文本。</p>\n<p>Ctrl+p: 上一个使用的历史命令。 （或者直接按向上方向键；p：previous）</p>\n<p>Ctrl+n： 下一个使用的历史命令。（或者直接按向下方向键；n：next）</p>\n<p>Ctrl+r：快速检索历史命令。（r：retrieve）。</p>\n<p>Ctrl+t： 交换光标所在字符和其前的字符。</p>\n<p>Ctrl+i：相当于Tab键。</p>\n<p>Ctrl+o：相当于Ctrl+m.</p>\n<p>Ctrl+m：相当Enter键。</p>\n<h1 id=\"其他控制键：\"><a href=\"#其他控制键：\" class=\"headerlink\" title=\"其他控制键：\"></a>其他控制键：</h1><p>Ctrl+s:使终端发呆，静止，可以使快速输出的终端屏幕停下来。</p>\n<p>Ctrl+q：退出Ctrl+s引起的发呆。</p>\n<p>Ctrl+z：使正在运行在终端的任务，运行于后台。 （可用fg恢复）</p>\n<p>Ctrl+c：中断终端中正在执行的任务。</p>\n<p>Ctrl+d: 在空命令行的情况下可以退出终端。</p>\n<p>Ctrl+[ ：相当于Esc键。</p>\n<p>Esc键：连续按3次显示所有的支持的终端命令。</p>\n<p>Tab键：命令、文件名等自动补全命令或目录、文件名。</p>\n<p>alt+/：同Tab键</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"查看系统和硬件相关信息的命令简介\"><a href=\"#查看系统和硬件相关信息的命令简介\" class=\"headerlink\" title=\"查看系统和硬件相关信息的命令简介\"></a>查看系统和硬件相关信息的命令简介</h1><h3 id=\"查看内核-操作系统-CPU信息\"><a href=\"#查看内核-操作系统-CPU信息\" class=\"headerlink\" title=\"查看内核/操作系统/CPU信息\"></a>查看内核/操作系统/CPU信息</h3><p><code># uname -a</code><br><code># head -n 1 /etc/issue</code> # 查看操作系统版本</p>\n<p><code># cat /etc/redhat-release</code> # 查看操作系统版本（redhat，centos，fedora）</p>\n<p><code># cat /proc/cpuinfo</code> # 查看CPU信息</p>\n<p><code># hostname</code> # 查看计算机名</p>\n<p><code># lspci -tv</code># 列出所有PCI设备</p>\n<p><code># lsusb -tv</code># 列出所有USB设备</p>","more":"<p><code># lsmod</code># 列出加载的内核模块</p>\n<p><code># env</code> # 查看环境变量资源</p>\n<p><code># free -m</code># 查看内存使用量和交换区使用量</p>\n<p><code># df -h</code> # 查看各分区使用情况</p>\n<p><code># du -sh &lt;目录名&gt;</code> # 查看指定目录的大小</p>\n<p><code># grep MemTotal /proc/meminfo</code> # 查看内存总量</p>\n<p><code># grep MemFree /proc/meminfo</code> # 查看空闲内存量</p>\n<p><code># uptime</code> # 查看系统运行时间、用户数、负载</p>\n<p><code># cat /proc/loadavg</code> # 查看系统负载磁盘和分区</p>\n<p><code># mount | column -t</code># 查看挂接的分区状态</p>\n<p><code># fdisk -l</code> # 查看所有分区</p>\n<p><code># swapon -s</code> # 查看所有交换分区</p>\n<p><code># hdparm -i /dev/hda</code> # 查看磁盘参数(仅适用于IDE设备)</p>\n<p><code># dmesg | grep IDE</code> # 查看启动时IDE设备检测状况网络</p>\n<p><code># ifconfig</code> # 查看所有网络接口的属性</p>\n<p><code># iptables -L</code> # 查看防火墙设置</p>\n<p><code># route -n</code> # 查看路由表</p>\n<p><code># netstat -lntp</code> # 查看所有监听端口</p>\n<p><code># netstat -antp</code> # 查看所有已经建立的连接</p>\n<p><code># netstat -s</code> # 查看网络统计信息进程</p>\n<p><code># ps -ef</code> # 查看所有进程</p>\n<p><code># top</code> # 实时显示进程状态用户</p>\n<p><code># w</code> # 查看活动用户</p>\n<p><code># id &lt;用户名&gt;</code> # 查看指定用户信息</p>\n<p><code># last</code> # 查看用户登录日志</p>\n<p><code># cut -d: -f1 /etc/passwd</code> # 查看系统所有用户</p>\n<p><code># cut -d: -f1 /etc/group</code> # 查看系统所有组</p>\n<p><code># crontab -l</code> # 查看当前用户的计划任务服务</p>\n<p><code># chkconfig –list</code> # 列出所有系统服务</p>\n<p><code># chkconfig –list | grep on</code> # 列出所有启动的系统服务程序</p>\n<p><code># rpm -qa</code> # 查看所有安装的软件包</p>\n<h1 id=\"VI模式切换和退出\"><a href=\"#VI模式切换和退出\" class=\"headerlink\" title=\"VI模式切换和退出\"></a>VI模式切换和退出</h1><h2 id=\"进入vi编辑文件内容：\"><a href=\"#进入vi编辑文件内容：\" class=\"headerlink\" title=\"进入vi编辑文件内容：\"></a>进入vi编辑文件内容：</h2><p>vi 文件名</p>\n<p>vi 目录/文件名</p>\n<p>vi进入编辑模式：</p>\n<p>Shift+字母i</p>\n<h2 id=\"从编辑模式返回命令模式：\"><a href=\"#从编辑模式返回命令模式：\" class=\"headerlink\" title=\"从编辑模式返回命令模式：\"></a>从编辑模式返回命令模式：</h2><p>ESC</p>\n<h2 id=\"从命令模式vi退出：\"><a href=\"#从命令模式vi退出：\" class=\"headerlink\" title=\"从命令模式vi退出：\"></a>从命令模式vi退出：</h2><p>:w 保存文件但不退出vi</p>\n<p>:w file 将修改另外保存到file中，不退出vi</p>\n<p>:w! 强制保存，不推出vi</p>\n<p>:wq 保存文件并退出vi</p>\n<p>:wq! 强制保存文件，并退出vi</p>\n<p>:q 不保存文件，退出vi</p>\n<p>:q! 不保存文件，强制退出vi</p>\n<p>:e! 放弃所有修改，从上次保存文件开始再编辑</p>\n<p><em>注意：千万别将英文冒号”:”敲成中文冒号”：”。</em></p>\n<p>VI前进后退操作</p>\n<p>在vi中按u可以撤销一次操作</p>\n<p>u 撤销上一步的操作</p>\n<p>Ctrl+r 恢复上一步被撤销的操作</p>\n<p>注意：</p>\n<p>如果你输入“u”两次，你的文本恢复原样，那应该是你的Vim被配置在Vi兼容模式了。</p>\n<h1 id=\"重做\"><a href=\"#重做\" class=\"headerlink\" title=\"重做\"></a>重做</h1><p>如果你撤销得太多，你可以输入CTRL-R（redo）回退前一个命令。换句话说，它撤销一个撤销。要看执行的例子，输入CTRL-R两次。字符A和它后面的空格就出现了：</p>\n<p>young intelligent turtle</p>\n<p>有一个特殊版本的撤销命令：“U”（行撤销）。行撤销命令撤销所有在前一个编辑行</p>\n<p>上的操作。 输入这些命令两次取消前一个“U”：</p>\n<p>A very intelligent turtle</p>\n<p>xxxx 删除very</p>\n<p>A intelligent turtle</p>\n<p>xxxxxx 删除turtle</p>\n<p>A intelligent</p>\n<p>用“U”恢复行</p>\n<p>A very intelligent turtle</p>\n<p>用“u”撤销“U”</p>\n<p>A intelligent</p>\n<p>“U”命令自己改变自己，“u”命令撤销操作，CTRL-R命令重做操作。这有点乱，但不用</p>\n<p>担心，用“u”和CTRL-R命令你可以切换到任何状态。</p>\n<p>流行的文本编辑器通常都有前进和后退功能，可以在文件中曾经浏览过的位置之间来回移动。在 vim 中使用 Ctrl-O 执行后退，使用 Ctrl-I 执行前进。</p>\n<p>相关帮助： :help CTRL-O :help CTRL-I :help jump-motions</p>\n<h1 id=\"VI查找内容\"><a href=\"#VI查找内容\" class=\"headerlink\" title=\"VI查找内容\"></a>VI查找内容</h1><p>使用vi编辑器编辑长文件时，常常是头昏眼花，也找不到需要更改的内容。</p>\n<p>这时，使用查找功能尤为重要。</p>\n<p>方法如下：</p>\n<p>1、命令模式下输入“/字符串”，例如“/Section 3”。</p>\n<p>2、如果查找下一个，按“n”即可。</p>\n<p>要自当前光标位置向上搜索，请使用以下命令：</p>\n<p>/pattern Enter</p>\n<p>其中，pattern表示要搜索的特定字符序列。</p>\n<p>要自当前光标位置向下搜索，请使用以下命令：</p>\n<p>?pattern Enter</p>\n<h1 id=\"Linux文件权限介绍\"><a href=\"#Linux文件权限介绍\" class=\"headerlink\" title=\"Linux文件权限介绍\"></a>Linux文件权限介绍</h1><p>r:read就是读权限 –数字4表示</p>\n<p>w:write就是写权限 –数字2表示</p>\n<p>x:excute就是执行权限 –数字1表示</p>\n<p>权限表示一共需要占9个字符的：— — —</p>\n<p>前三个字符表示用户权限，中间三个表示用户所在的组权限，最后三个表示其他用户权限</p>\n<p>例子：rw-r–r–</p>\n<p>rw-是说用户有读、写权，没有运行权，接着的r–表示用户组只有读权限，没有写入、运行权，最后的r–指其他用户只有读权限，没有写入、运行权。</p>\n<p>用数字表示就是644。</p>\n<p>例子：777</p>\n<p>777就是rwxrwxrwx，意思是用户、用户组和其他用户都有最高权限。<br>Linux下scp的用法</p>\n<p>#scp命令</p>\n<p>scp就是secure copy，一个在linux下用来进行远程拷贝文件的命令。</p>\n<p>有时我们需要获得远程服务器上的某个文件，该服务器既没有配置ftp服务器，也没有做共享，无法通过常规途径获得文件时，只需要通过简单的scp命令便可达到目的。</p>\n<h2 id=\"将本机文件复制到远程服务器上\"><a href=\"#将本机文件复制到远程服务器上\" class=\"headerlink\" title=\"将本机文件复制到远程服务器上\"></a>将本机文件复制到远程服务器上</h2><blockquote>\n<p>#scp /home/administrator/news.txt root@192.168.6.129:/etc/squid</p>\n</blockquote>\n<p>/home/administrator/      本地文件的绝对路径</p>\n<p>news.txt                          要复制到服务器上的本地文件</p>\n<p>root                                 通过root用户登录到远程服务器（也可以使用其他拥有同等权限的用户）</p>\n<p>192.168.6.129                远程服务器的ip地址（也可以使用域名或机器名）</p>\n<p>/etc/squid                       将本地文件复制到位于远程服务器上的路径</p>\n<h2 id=\"将远程服务器上的文件复制到本机\"><a href=\"#将远程服务器上的文件复制到本机\" class=\"headerlink\" title=\"将远程服务器上的文件复制到本机\"></a>将远程服务器上的文件复制到本机</h2><blockquote>\n<p>#scp remote@www.abc.com:/usr/local/sin.sh /home/administrator</p>\n</blockquote>\n<p>remote                       通过remote用户登录到远程服务器（也可以使用其他拥有同等权限的用户）</p>\n<p>www.abc.com              远程服务器的域名（当然也可以使用该服务器ip地址）</p>\n<p>/usr/local/sin.sh           欲复制到本机的位于远程服务器上的文件</p>\n<p>/home/administrator  将远程文件复制到本地的绝对路径</p>\n<p>注意两点：</p>\n<p>1.如果远程服务器防火墙有特殊限制，scp便要走特殊端口，具体用什么端口视情况而定，命令格式如下：</p>\n<blockquote>\n<p>#scp -p 4588 remote@www.abc.com:/usr/local/sin.sh /home/administrator</p>\n</blockquote>\n<p>2.使用scp要注意所使用的用户是否具有可读取远程服务器相应文件的权限。</p>\n<h1 id=\"压缩和解压\"><a href=\"#压缩和解压\" class=\"headerlink\" title=\"压缩和解压\"></a>压缩和解压</h1><h2 id=\"zip命令\"><a href=\"#zip命令\" class=\"headerlink\" title=\"zip命令\"></a>zip命令</h2><p>　　解压1：unzip FileName.zip</p>\n<p>　　解压2：unzip FileName.zip -d TargetDir</p>\n<p>　　压缩1：zip -r TargetDir/FileName.zip DirName</p>\n<p>　　压缩2：zip -r TargetDir/FileName.zip DirName/*</p>\n<p>　　压缩3：zip -r TargetDir/FileName.zip File1 File2 File3</p>\n<p>　　注意，zip解压适用于解压jar文件</p>\n<h2 id=\"tar命令\"><a href=\"#tar命令\" class=\"headerlink\" title=\"tar命令\"></a>tar命令</h2><p>　　解包：tar zxvf FileName.tar</p>\n<p>　　打包：tar czvf FileName.tar DirName</p>\n<h2 id=\"tar-gz-和-tgz\"><a href=\"#tar-gz-和-tgz\" class=\"headerlink\" title=\".tar.gz 和 .tgz\"></a>.tar.gz 和 .tgz</h2><p>　　解压：tar zxvf FileName.tar.gz</p>\n<p>　　压缩：tar zcvf FileName.tar.gz DirName</p>\n<h2 id=\"tar-bz\"><a href=\"#tar-bz\" class=\"headerlink\" title=\".tar.bz\"></a>.tar.bz</h2><p>　　解压：tar jxvf FileName.tar.bz</p>\n<h2 id=\"tar-bz2\"><a href=\"#tar-bz2\" class=\"headerlink\" title=\".tar.bz2\"></a>.tar.bz2</h2><p>　　解压：tar jxvf FileName.tar.bz2</p>\n<p>　　压缩：tar jcvf FileName.tar.bz2 DirName</p>\n<h2 id=\"tar-Z\"><a href=\"#tar-Z\" class=\"headerlink\" title=\".tar.Z\"></a>.tar.Z</h2><p>　　解压：tar Zxvf FileName.tar.Z</p>\n<p>　　压缩：tar Zcvf FileName.tar.Z DirName</p>\n<h2 id=\"gz命令\"><a href=\"#gz命令\" class=\"headerlink\" title=\"gz命令\"></a>gz命令</h2><p>　　解压1：gunzip FileName.gz</p>\n<p>　　解压2：gzip -d FileName.gz</p>\n<p>　　压缩：gzip FileName</p>\n<h2 id=\"bz2命令\"><a href=\"#bz2命令\" class=\"headerlink\" title=\"bz2命令\"></a>bz2命令</h2><p>　　解压1：bzip2 -d FileName.bz2</p>\n<p>　　解压2：bunzip2 FileName.bz2</p>\n<p>　　压缩： bzip2 -z FileName</p>\n<h2 id=\"bz命令\"><a href=\"#bz命令\" class=\"headerlink\" title=\"bz命令\"></a>bz命令</h2><p>　　解压1：bzip2 -d FileName.bz</p>\n<p>　　解压2：bunzip2 FileName.bz</p>\n<h2 id=\"Z命令\"><a href=\"#Z命令\" class=\"headerlink\" title=\"Z命令\"></a>Z命令</h2><p>　　解压：uncompress FileName.Z</p>\n<p>　　压缩：compress FileName</p>\n<h2 id=\"7z命令-如果没有7z命令请先执行“yum-install-p7zip”\"><a href=\"#7z命令-如果没有7z命令请先执行“yum-install-p7zip”\" class=\"headerlink\" title=\"7z命令(如果没有7z命令请先执行“yum install p7zip”)\"></a>7z命令(如果没有7z命令请先执行“yum install p7zip”)</h2><p>解压：7z x FileName.7z -o/home/zhichao</p>\n<p>//注意，x参数解压会自动生成与压缩文件名相同的目录，-o表示输出目录，其与目录路径之间没有空格，上面命令会解压FileName.7z到home/zhichao/FileName目录中。</p>\n<p>压缩：7z a FileName.7z DirName</p>\n<h1 id=\"grep命令\"><a href=\"#grep命令\" class=\"headerlink\" title=\"grep命令\"></a>grep命令</h1><p>grep命令使用正则表达式检索符合条件的内容，一般与其他命令组合使用。</p>\n<p>格式：</p>\n<p>grep 参数 条件</p>\n<p>参数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div></pre></td><td class=\"code\"><pre><div class=\"line\">-a --text #不要忽略二进制的数据。</div><div class=\"line\"></div><div class=\"line\">-A&lt;显示行数&gt; --after-context=&lt;显示行数&gt; #除了显示符合范本样式的那一列之外，并显示该行之后的内容。</div><div class=\"line\"></div><div class=\"line\">-b --byte-offset #在显示符合样式的那一行之前，标示出该行第一个字符的编号。</div><div class=\"line\"></div><div class=\"line\">-B&lt;显示行数&gt; --before-context=&lt;显示行数&gt; #除了显示符合样式的那一行之外，并显示该行之前的内容。</div><div class=\"line\"></div><div class=\"line\">-c --count #计算符合样式的列数。</div><div class=\"line\"></div><div class=\"line\">-C&lt;显示行数&gt; --context=&lt;显示行数&gt;或-&lt;显示行数&gt; #除了显示符合样式的那一行之外，并显示该行之前后的内容。</div><div class=\"line\"></div><div class=\"line\">-d &lt;动作&gt; --directories=&lt;动作&gt; #当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。</div><div class=\"line\"></div><div class=\"line\">-e&lt;范本样式&gt; --regexp=&lt;范本样式&gt; #指定字符串做为查找文件内容的样式。</div><div class=\"line\"></div><div class=\"line\">-E --extended-regexp #将样式为延伸的普通表示法来使用。</div><div class=\"line\"></div><div class=\"line\">-f&lt;规则文件&gt; --file=&lt;规则文件&gt; #指定规则文件，其内容含有一个或多个规则样式，让grep查找符合规则条件的文件内容，格式为每行一个规则样式。</div><div class=\"line\"></div><div class=\"line\">-F --fixed-regexp #将样式视为固定字符串的列表。</div><div class=\"line\"></div><div class=\"line\">-G --basic-regexp #将样式视为普通的表示法来使用。</div><div class=\"line\"></div><div class=\"line\">-h --no-filename #在显示符合样式的那一行之前，不标示该行所属的文件名称。</div><div class=\"line\"></div><div class=\"line\">-H --with-filename #在显示符合样式的那一行之前，表示该行所属的文件名称。</div><div class=\"line\"></div><div class=\"line\">-i --ignore-case #忽略字符大小写的差别。</div><div class=\"line\"></div><div class=\"line\">-l --file-with-matches #列出文件内容符合指定的样式的文件名称。</div><div class=\"line\"></div><div class=\"line\">-L --files-without-match #列出文件内容不符合指定的样式的文件名称。</div><div class=\"line\"></div><div class=\"line\">-n --line-number #在显示符合样式的那一行之前，标示出该行的列数编号。</div><div class=\"line\"></div><div class=\"line\">-q --quiet或--silent #不显示任何信息。</div><div class=\"line\"></div><div class=\"line\">-r --recursive #此参数的效果和指定“-d recurse”参数相同。</div><div class=\"line\"></div><div class=\"line\">-s --no-messages #不显示错误信息。</div><div class=\"line\"></div><div class=\"line\">-v --revert-match #显示不包含匹配文本的所有行。</div><div class=\"line\"></div><div class=\"line\">-V --version #显示版本信息。</div><div class=\"line\"></div><div class=\"line\">-w --word-regexp #只显示全字符合的列。</div><div class=\"line\"></div><div class=\"line\">-x --line-regexp #只显示全列符合的列。</div><div class=\"line\"></div><div class=\"line\">-y #此参数的效果和指定“-i”参数相同。</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>从文件info.txt中读取关键词system进行搜索</p>\n<p>cat /home/usr/download/info.txt | grep -f system</p>\n<p>从文件info.txt中读取关键词system进行搜索并显示行号</p>\n<p>cat /home/usr/download/info.txt | grep -nf system</p>\n<h1 id=\"cat命令\"><a href=\"#cat命令\" class=\"headerlink\" title=\"cat命令\"></a>cat命令</h1><p>cat命令用来显示文件内容，或者将几个文件连接起来显示，或者从标准输入读取内容并显示，它常与重定向符号配合使用。</p>\n<p>格式：</p>\n<p>cat 参数 文件</p>\n<p>参数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">-A, --show-all  等价于 -vET</div><div class=\"line\"></div><div class=\"line\">-b, --number-nonblank 对非空输出行编号</div><div class=\"line\"></div><div class=\"line\">-e   等价于 -vE</div><div class=\"line\"></div><div class=\"line\">-E, --show-ends  在每行结束处显示 $</div><div class=\"line\"></div><div class=\"line\">-n, --number 对输出的所有行编号,由1开始对所有输出的行数编号</div><div class=\"line\"></div><div class=\"line\">-s, --squeeze-blank 有连续两行以上的空白行，就代换为一行的空白行</div><div class=\"line\"></div><div class=\"line\">-t   与 -vT 等价</div><div class=\"line\"></div><div class=\"line\">-T, --show-tabs  将跳格字符显示为 ^I</div><div class=\"line\"></div><div class=\"line\">-u   (被忽略)</div><div class=\"line\"></div><div class=\"line\">-v, --show-nonprinting 使用 ^ 和 M- 引用，除了 LFD 和 TAB 之外</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>把 log.php 的文件内容加上行号后输出到new_log.php这个文件中</p>\n<p>cat -n /data/www/project/log.php /data/www/project/new_log.php</p>\n<h1 id=\"ps命令\"><a href=\"#ps命令\" class=\"headerlink\" title=\"ps命令\"></a>ps命令</h1><p>ps命令是process status的缩写，顾名思义就是查看系统中所有进程状态状态。</p>\n<p>ps命令查看的程序状态并不是动态连续的，如果想对进程实施监控，请用top命令。</p>\n<p>如果直接用ps命令，会显示所有进程的状态，通常结合grep命令查看某进程的状态。</p>\n<p>格式：</p>\n<p>ps 参数</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">a 显示所有进程</div><div class=\"line\"></div><div class=\"line\">-a 显示同一终端下的所有程序</div><div class=\"line\"></div><div class=\"line\">-A 显示所有进程</div><div class=\"line\"></div><div class=\"line\">c 显示进程的真实名称</div><div class=\"line\"></div><div class=\"line\">-N 反向选择</div><div class=\"line\"></div><div class=\"line\">-e 等于“-A”</div><div class=\"line\"></div><div class=\"line\">e 显示环境变量</div><div class=\"line\"></div><div class=\"line\">f 显示程序间的关系</div><div class=\"line\"></div><div class=\"line\">-H 显示树状结构</div><div class=\"line\"></div><div class=\"line\">r 显示当前终端的进程</div><div class=\"line\"></div><div class=\"line\">T 显示当前终端的所有程序</div><div class=\"line\"></div><div class=\"line\">u 指定用户的所有进程</div><div class=\"line\"></div><div class=\"line\">-au 显示较详细的资讯</div><div class=\"line\"></div><div class=\"line\">-aux 显示所有包含其他使用者的行程</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>显示java相关程序</p>\n<p>ps aux|grep java</p>\n<p>显示httpd相关程序</p>\n<p>ps aux|grep httpd</p>\n<p>查看正在使用8080端口的程序</p>\n<p>ps -ef|grep 8080</p>\n<h1 id=\"fuser-命令\"><a href=\"#fuser-命令\" class=\"headerlink\" title=\"fuser 命令\"></a>fuser 命令</h1><p>fuser用于查找正在使用指定的某个文件、挂载点、网络端口的进程的详细信息。</p>\n<p>格式：</p>\n<p>fuser 参数 文件或挂载点或网络端口</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">a 显示所有命令行中指定的文件，默认情况下被访问的文件才会被显示。</div><div class=\"line\"></div><div class=\"line\">-c 和-m一样，用于POSIX兼容。</div><div class=\"line\"></div><div class=\"line\">-d 暗示使用了 -c 和 -x 标志。关于任何与文件系统（自父目录删除的）无链接的打开文件的报告。当与 -V 标志一起使用时，它也会报告被删除文件的节点号和大小。</div><div class=\"line\"></div><div class=\"line\">-f 仅对文件的打开实例报告。</div><div class=\"line\"></div><div class=\"line\">-i 杀掉进程之前询问用户，如果没有-k这个选项会被忽略。</div><div class=\"line\"></div><div class=\"line\">-k 杀掉访问文件的进程。如果没有指定-signal就会发送SIGKILL信号。</div><div class=\"line\"></div><div class=\"line\">-l 列出所有已知的信号名称。</div><div class=\"line\"></div><div class=\"line\">-m name 指定一个挂载文件系统上的文件或者被挂载的块设备（名称name）。这样所有访问这个文件或者文件系统的进程都会被列出来。如果指定的是一个目录会自动转换成,并使用所有挂载在那个目录下面的文件系统。</div><div class=\"line\"></div><div class=\"line\">-n space 指定一个不同的命名空间(space).这里支持不同的空间文件(文件名，此处默认)、tcp(本地tcp端口)、udp(本地udp端口)。对于端口， 可以指定端口号或者名称，如果不会引起歧义那么可以使用简单表示的形式，例如：name/space (即形如:80/tcp之类的表示)。</div><div class=\"line\"></div><div class=\"line\">-s 静默模式，这时候-u,-v会被忽略。-a不能和-s一起使用。</div><div class=\"line\"></div><div class=\"line\">-signal 使用指定的信号，而不是用SIGKILL来杀掉进程。可以通过名称或者号码来表示信号(例如-HUP,-1),这个选项要和-k一起使用，否则会被忽略。</div><div class=\"line\"></div><div class=\"line\">-u 在每个PID后面添加进程拥有者的用户名称。</div><div class=\"line\"></div><div class=\"line\">-v 详细模式。输出似ps命令的输出，包含PID,USER,COMMAND等许多域,如果是内核访问的那么PID为kernel. -V 输出版本号。</div><div class=\"line\"></div><div class=\"line\">-x 与 -c 或 -f 连用，报告除标准 fuser 输出以外的可执行的和可载入的对象。</div><div class=\"line\"></div><div class=\"line\">-4 使用IPV4套接字,不能和-6一起应用，只在-n的tcp和udp的命名存在时不被忽略。</div><div class=\"line\"></div><div class=\"line\">-6 使用IPV6套接字,不能和-4一起应用，只在-n的tcp和udp的命名存在时不被忽略。</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>查看和关闭正在使用readme.txt文件的程序</p>\n<p>fuser -m -v readme.txt</p>\n<p>fuser -m -k readme.txt</p>\n<p>查看和关闭正在使用80端口的程序</p>\n<p>fuser -n -v tcp 80</p>\n<p>fuser -n -k tcp 80</p>\n<p>chown命令</p>\n<p>chown命令将指定文件或文件夹的拥有者改为指定的用户或组，用户可以是用户名或者用户ID，组可以是组名或者组ID，文件是以空格分开的要改变权限的文件列表，支持通配符。</p>\n<p>格式：</p>\n<h1 id=\"chown-参数-用户-文件\"><a href=\"#chown-参数-用户-文件\" class=\"headerlink\" title=\"chown 参数 用户 文件\"></a>chown 参数 用户 文件</h1><p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">-c 显示更改的部分的信息</div><div class=\"line\"></div><div class=\"line\">-f 忽略错误信息</div><div class=\"line\"></div><div class=\"line\">-h 修复符号链接</div><div class=\"line\"></div><div class=\"line\">-R 处理指定目录以及其子目录下的所有文件</div><div class=\"line\"></div><div class=\"line\">-v 显示详细的处理信息</div><div class=\"line\"></div><div class=\"line\">-deference 作用于符号链接的指向，而不是链接文件本身</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>将目录/data/www/project/下的所有文件和目录的拥有者都修改为apache账户。</p>\n<p>chown -R apache.apache /data/www/project/</p>\n<h1 id=\"chmod命令\"><a href=\"#chmod命令\" class=\"headerlink\" title=\"chmod命令\"></a>chmod命令</h1><p>chmod命令用于改变linux系统文件或目录的访问权限，用它控制文件或目录的访问权限。</p>\n<p>Linux系统中的每个文件和目录都有访问许可权限，用它来确定谁可以通过何种方式对文件和目录进行访问和操作。</p>\n<p>格式：</p>\n<p>chmod 参数 权限模式 文件</p>\n<p>参数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">-c 当发生改变时，报告处理信息</div><div class=\"line\"></div><div class=\"line\">-f 错误信息不输出</div><div class=\"line\"></div><div class=\"line\">-R 处理指定目录以及其子目录下的所有文件</div><div class=\"line\"></div><div class=\"line\">-v 运行时显示详细处理信息</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>将目录/data/www/project/下的所有文件和目录的访问权限修改为“当前用户、当前用户组和其他用户都可读可写可执行”的权限。</p>\n<p>chown -R 777 /data/www/project/</p>\n<h1 id=\"kill命令\"><a href=\"#kill命令\" class=\"headerlink\" title=\"kill命令\"></a>kill命令</h1><p>kill命令用于关闭指定进程。</p>\n<p>格式：</p>\n<p>kill 参数 信号 进程ID</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">-s 指定发送信号</div><div class=\"line\"></div><div class=\"line\">-l 根据信号名显示信号编号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称</div><div class=\"line\"></div><div class=\"line\">-a 当处理当前进程时，不限制命令名和进程号的对应关系</div><div class=\"line\"></div><div class=\"line\">-p 指定kill 命令只打印相关进程的进程号，而不发送任何信号</div><div class=\"line\"></div><div class=\"line\">-u 指定用户</div></pre></td></tr></table></figure></p>\n<h1 id=\"信号：\"><a href=\"#信号：\" class=\"headerlink\" title=\"信号：\"></a>信号：</h1><h2 id=\"信号名-信号编号-信号含义\"><a href=\"#信号名-信号编号-信号含义\" class=\"headerlink\" title=\"信号名 信号编号 信号含义\"></a>信号名 信号编号 信号含义</h2><p>HUP 1 终端断线</p>\n<p>INT 2 中断</p>\n<p>QUIT 3 退出</p>\n<p>TERM 15 终止</p>\n<p>KILL 9 强制终止</p>\n<p>CONT 18 继续（与STOP相反）</p>\n<p>STOP 19 暂停（</p>\n<p>示例：</p>\n<p>显示信号KILL的信号编号</p>\n<p>kill -l KILL</p>\n<p>关闭apache用户下所有进程</p>\n<p>kill -u apache.apache</p>\n<p>强制关闭进程ID为1937的进程，参数s可以省略。</p>\n<p>kill -s 9 1937</p>\n<p>kill -9 1937</p>\n<h1 id=\"top命令\"><a href=\"#top命令\" class=\"headerlink\" title=\"top命令\"></a>top命令</h1><p>top命令查看系统中各个进程的资源占用状况，默认使用cpu占用来排序显示，top命令显示的结果是实时的。</p>\n<p>格式：</p>\n<p>top 参数</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">-b 批处理</div><div class=\"line\"></div><div class=\"line\">-c 显示完整的治命令</div><div class=\"line\"></div><div class=\"line\">-i<span class=\"tag\">&lt;<span class=\"name\">时间</span>&gt;</span> 设置间隔时间</div><div class=\"line\"></div><div class=\"line\">-I 忽略失效过程</div><div class=\"line\"></div><div class=\"line\">-p<span class=\"tag\">&lt;<span class=\"name\">进程号</span>&gt;</span> 指定进程</div><div class=\"line\"></div><div class=\"line\">-n<span class=\"tag\">&lt;<span class=\"name\">次数</span>&gt;</span> 循环显示的次数</div><div class=\"line\"></div><div class=\"line\">-s 保密模式</div><div class=\"line\"></div><div class=\"line\">-S 累积模式</div><div class=\"line\"></div><div class=\"line\">-u<span class=\"tag\">&lt;<span class=\"name\">用户名</span>&gt;</span> 指定用户名</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>查看所有程序资源占用状况</p>\n<p>top</p>\n<p>查看apache用户所有程序资源占用状况</p>\n<p>top -u apache.apache</p>\n<h1 id=\"find命令\"><a href=\"#find命令\" class=\"headerlink\" title=\"find命令\"></a>find命令</h1><p>在指定目录中查找指定条件的文件或文件夹。</p>\n<p>格式：</p>\n<p>find 目录路径 选项 查找条件</p>\n<p>选项：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\">-name 按照文件名查找文件。</div><div class=\"line\"></div><div class=\"line\">-perm 按照文件权限来查找文件。</div><div class=\"line\"></div><div class=\"line\">-prune 使用这一选项可以使find命令不在当前指定的目录中查找，如果同时使用-depth选项，那么-prune将被find命令忽略。</div><div class=\"line\"></div><div class=\"line\">-user 按照文件属主来查找文件。</div><div class=\"line\"></div><div class=\"line\">-group 按照文件所属的组来查找文件。</div><div class=\"line\"></div><div class=\"line\">-mtime -n +n 按照文件的更改时间来查找文件， - n表示文件更改时间距现在n天以内，+ n表示文件更改时间距现在n天以前。find命令还有-atime和-ctime 选项，但它们都和-m time选项。</div><div class=\"line\"></div><div class=\"line\">-nogroup 查找无有效所属组的文件，即该文件所属的组在/etc/groups中不存在。</div><div class=\"line\"></div><div class=\"line\">-nouser 查找无有效属主的文件，即该文件的属主在/etc/passwd中不存在。</div><div class=\"line\"></div><div class=\"line\">-newer file1 ! file2 查找更改时间比文件file1新但比文件file2旧的文件。</div><div class=\"line\"></div><div class=\"line\">-type<span class=\"tag\">&lt;<span class=\"name\">类型参数</span>&gt;</span> 查找某一类型的文件，诸如：</div><div class=\"line\"></div><div class=\"line\">b - 块设备文件。</div><div class=\"line\"></div><div class=\"line\">d - 目录。</div><div class=\"line\"></div><div class=\"line\">c - 字符设备文件。</div><div class=\"line\"></div><div class=\"line\">p - 管道文件。</div><div class=\"line\"></div><div class=\"line\">l - 符号链接文件。</div><div class=\"line\"></div><div class=\"line\">f - 普通文件。</div><div class=\"line\"></div><div class=\"line\">-size n：[c] 查找文件长度为n块的文件，带有c时表示文件长度以字节计。-depth：在查找文件时，首先查找当前目录中的文件，然后再在其子目录中查找。</div><div class=\"line\"></div><div class=\"line\">-fstype：查找位于某一类型文件系统中的文件，这些文件系统类型通常可以在配置文件/etc/fstab中找到，该配置文件中包含了本系统中有关文件系统的信息。</div><div class=\"line\"></div><div class=\"line\">-mount：在查找文件时不跨越文件系统mount点。</div><div class=\"line\"></div><div class=\"line\">-follow：如果find命令遇到符号链接文件，就跟踪至链接所指向的文件。</div><div class=\"line\"></div><div class=\"line\">-cpio：对匹配的文件使用cpio命令，将这些文件备份到磁带设备中。</div><div class=\"line\"></div><div class=\"line\">-amin n 查找系统中最后N分钟访问的文件</div><div class=\"line\"></div><div class=\"line\">-atime n 查找系统中最后n*24小时访问的文件</div><div class=\"line\"></div><div class=\"line\">-cmin n 查找系统中最后N分钟被改变文件状态的文件</div><div class=\"line\"></div><div class=\"line\">-ctime n 查找系统中最后n*24小时被改变文件状态的文件</div><div class=\"line\"></div><div class=\"line\">-mmin n 查找系统中最后N分钟被改变文件数据的文件</div><div class=\"line\"></div><div class=\"line\">-mtime n 查找系统中最后n*24小时被改变文件数据的文件</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>查找 “/”目录（Linux系统根目录）下名称为httpd.conf的文件</p>\n<p>find / -name httpd.conf</p>\n<p>查找 “/data/www/project/”目录下所有php文件</p>\n<p>find /data/www/project -name *.php</p>\n<p>查找 “.”目录（当前目录）下权限为777的文件</p>\n<p>find . -perm 777</p>\n<p>查找 “/”目录下48小时内修改过的文件</p>\n<p>find / -atime -2</p>\n<p>查找 “/”目录下所有文件夹</p>\n<p>find / -type d</p>\n<p>查找 “/”目录下大于1kb的文件</p>\n<p>find / -size +1000c</p>\n<h1 id=\"whereis命令\"><a href=\"#whereis命令\" class=\"headerlink\" title=\"whereis命令\"></a>whereis命令</h1><p>whereis命令只能用于程序名的搜索，而且只搜索二进制文件（参数-b）、说明文件（参数-m）和源代码文件（参数-s），如果省略参数，则返回所有信息。</p>\n<p>和find相比，whereis查找的速度非常快，这是因为linux系统会将 系统内的所有文件都记录在一个数据库文件中，当使用whereis和下面即将介绍的locate时，会从数据库中查找数据，而不是像find命令那样，通 过遍历硬盘来查找，效率自然会很高。</p>\n<p>但是该数据库文件并不是实时更新，默认情况下时一星期更新一次，因此，我们在用whereis和locate 查找文件时，有时会找到已经被删除的数据，或者刚刚建立文件，却无法查找到，原因就是因为数据库文件没有被更新。</p>\n<p>whereis常用于查找安装程序的安装目录。</p>\n<p>格式：</p>\n<p>whereis 参数 程序名</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">-b 定位可执行文件。</div><div class=\"line\"></div><div class=\"line\">-m 定位帮助文件。</div><div class=\"line\"></div><div class=\"line\">-s 定位源代码文件。</div><div class=\"line\"></div><div class=\"line\">-u 搜索默认路径下除可执行文件、源代码文件、帮助文件以外的其它文件。</div><div class=\"line\"></div><div class=\"line\">-B 指定搜索可执行文件的路径。</div><div class=\"line\"></div><div class=\"line\">-M 指定搜索帮助文件的路径。</div><div class=\"line\"></div><div class=\"line\">-S 指定搜索源代码文件的路径。</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>查找mysql安装目录</p>\n<p>whereis mysql</p>\n<h1 id=\"ls命令\"><a href=\"#ls命令\" class=\"headerlink\" title=\"ls命令\"></a>ls命令</h1><p>ls命令用来查看目标目录中所有的子目录和文件信息。</p>\n<p>格式：</p>\n<p>ls 参数 目录名</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div></pre></td><td class=\"code\"><pre><div class=\"line\">-a, –all 列出目录下的所有文件，包括以 . 开头的隐含文件</div><div class=\"line\"></div><div class=\"line\">-A 同-a，但不列出“.”(表示当前目录)和“..”(表示当前目录的父目录)。</div><div class=\"line\"></div><div class=\"line\">-c 配合 -lt：根据 ctime 排序及显示 ctime (文件状态最后更改的时间)配合 -l：显示 ctime 但根据名称排序否则：根据 ctime 排序</div><div class=\"line\"></div><div class=\"line\">-C 每栏由上至下列出项目</div><div class=\"line\"></div><div class=\"line\">–color[=WHEN] 控制是否使用色彩分辨文件。WHEN 可以是'never'、'always'或'auto'其中之一</div><div class=\"line\"></div><div class=\"line\">-d, –directory 将目录象文件一样显示，而不是显示其下的文件。</div><div class=\"line\"></div><div class=\"line\">-D, –dired 产生适合 Emacs 的 dired 模式使用的结果</div><div class=\"line\"></div><div class=\"line\">-f 对输出的文件不进行排序，-aU 选项生效，-lst 选项失效</div><div class=\"line\"></div><div class=\"line\">-g 类似 -l,但不列出所有者</div><div class=\"line\"></div><div class=\"line\">-G, –no-group 不列出任何有关组的信息</div><div class=\"line\"></div><div class=\"line\">-h, –human-readable 以容易理解的格式列出文件大小 (例如 1K 234M 2G)</div><div class=\"line\"></div><div class=\"line\">–si 类似 -h,但文件大小取 1000 的次方而不是 1024</div><div class=\"line\"></div><div class=\"line\">-H, –dereference-command-line 使用命令列中的符号链接指示的真正目的地</div><div class=\"line\"></div><div class=\"line\">–indicator-style=方式 指定在每个项目名称后加上指示符号<span class=\"tag\">&lt;<span class=\"name\">方式</span>&gt;</span>：none (默认)，classify (-F)，file-type (-p)</div><div class=\"line\"></div><div class=\"line\">-i, –inode 印出每个文件的 inode 号</div><div class=\"line\"></div><div class=\"line\">-I, –ignore=样式 不印出任何符合 shell 万用字符<span class=\"tag\">&lt;<span class=\"name\">样式</span>&gt;</span>的项目</div><div class=\"line\"></div><div class=\"line\">-k 即 –block-size=1K,以 k 字节的形式表示文件的大小。</div><div class=\"line\"></div><div class=\"line\">-l 除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来。</div><div class=\"line\"></div><div class=\"line\">-L, –dereference 当显示符号链接的文件信息时，显示符号链接所指示的对象而并非符号链接本身的信息</div><div class=\"line\"></div><div class=\"line\">-m 所有项目以逗号分隔，并填满整行行宽</div><div class=\"line\"></div><div class=\"line\">-o 类似 -l,显示文件的除组信息外的详细信息。</div><div class=\"line\"></div><div class=\"line\">-r, –reverse 依相反次序排列</div><div class=\"line\"></div><div class=\"line\">-R, –recursive 同时列出所有子目录层</div><div class=\"line\"></div><div class=\"line\">-s, –size 以块大小为单位列出所有文件的大小</div><div class=\"line\"></div><div class=\"line\">-S 根据文件大小排序</div><div class=\"line\"></div><div class=\"line\">–sort=WORD 以下是可选用的 WORD 和它们代表的相应选项：</div><div class=\"line\"></div><div class=\"line\">extension -X status -c</div><div class=\"line\"></div><div class=\"line\">none -U time -t</div><div class=\"line\"></div><div class=\"line\">size -S atime -u</div><div class=\"line\"></div><div class=\"line\">time -t access -u</div><div class=\"line\"></div><div class=\"line\">version -v use -u</div><div class=\"line\"></div><div class=\"line\">-t 以文件修改时间排序</div><div class=\"line\"></div><div class=\"line\">-u 配合 -lt:显示访问时间而且依访问时间排序</div><div class=\"line\"></div><div class=\"line\">配合 -l:显示访问时间但根据名称排序</div><div class=\"line\"></div><div class=\"line\">否则：根据访问时间排序</div><div class=\"line\"></div><div class=\"line\">-U 不进行排序;依文件系统原有的次序列出项目</div><div class=\"line\"></div><div class=\"line\">-v 根据版本进行排序</div><div class=\"line\"></div><div class=\"line\">-w, –width=COLS 自行指定屏幕宽度而不使用目前的数值</div><div class=\"line\"></div><div class=\"line\">-x 逐行列出项目而不是逐栏列出</div><div class=\"line\"></div><div class=\"line\">-X 根据扩展名排序</div><div class=\"line\"></div><div class=\"line\">-1 每行只列出一个文件</div><div class=\"line\"></div><div class=\"line\">–help 显示此帮助信息并离开</div><div class=\"line\"></div><div class=\"line\">–version 显示版本信息并离开</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>显示当前目录下所有文件和子目录（包括隐藏文件和隐藏目录）的详细信息</p>\n<p>ls -a -l</p>\n<p>显示”/data/www/project”目录下所有文件和子目录（不包括隐藏文件和隐藏目录）的详细信息</p>\n<p>ls -l /data/www/project</p>\n<p>显示”/data/www/project”目录下所有文件和子目录（包括隐藏文件和隐藏目录）的名称</p>\n<p>ls -a /data/www/project</p>\n<h1 id=\"sudo命令\"><a href=\"#sudo命令\" class=\"headerlink\" title=\"sudo命令\"></a>sudo命令</h1><p>sudo命令是个管理员分配给一些linux用户执行一些没有权限的命令。</p>\n<p>如果发现执行linux命令提示没有权限什么balabala的，不管什么命令，前面先加上sudo试试。</p>\n<p>格式：无需了解</p>\n<p>参数：无需了解</p>\n<p>示例：</p>\n<p>sudo yum install xxxx</p>\n<p>sudo svn up xxxx</p>\n<p>sudo rm -r xxxx</p>\n<h1 id=\"tail命令\"><a href=\"#tail命令\" class=\"headerlink\" title=\"tail命令\"></a>tail命令</h1><p>tail命令用于显示指定文件的末尾内容，并且使用-f参数可以查看即时的文件内容，常用查看日志文件。</p>\n<p>格式：</p>\n<p>tail 参数 文件</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">-f 循环读取</div><div class=\"line\"></div><div class=\"line\">-q 不显示处理信息</div><div class=\"line\"></div><div class=\"line\">-v 显示详细的处理信息</div><div class=\"line\"></div><div class=\"line\">-c<span class=\"tag\">&lt;<span class=\"name\">数目</span>&gt;</span> 显示的字节数</div><div class=\"line\"></div><div class=\"line\">-n<span class=\"tag\">&lt;<span class=\"name\">行数</span>&gt;</span> 显示行数</div><div class=\"line\"></div><div class=\"line\">--pid=PID 与-f合用,表示在进程ID,PID死掉之后结束.</div><div class=\"line\"></div><div class=\"line\">-q, --quiet, --silent 从不输出给出文件名的首部</div><div class=\"line\"></div><div class=\"line\">-s, --sleep-interval=S 与-f合用,表示在每次反复的间隔休眠S秒</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>及时显示/data/www/project目录下log.php文件的末尾内容</p>\n<p>tail -f /data/www/project/log.php</p>\n<p>及时显示/data/www/project目录下log.php文件的500行末尾内容</p>\n<p>tail -f -n 500 /data/www/project/log.php</p>\n<h1 id=\"cp命令\"><a href=\"#cp命令\" class=\"headerlink\" title=\"cp命令\"></a>cp命令</h1><p>cp命令用于复制文件或目录。</p>\n<p>格式：</p>\n<p>cp 参数 原文件或原目录 目标文件或目录</p>\n<p>参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\">-a或--archive 等于-dR或-dpR</div><div class=\"line\"></div><div class=\"line\">--backup 为每个已存在的目标文件创建备份</div><div class=\"line\"></div><div class=\"line\">-b 类似--backup但不接受参数</div><div class=\"line\"></div><div class=\"line\">--copy-contents 在递归处理是复制特殊文件内容</div><div class=\"line\"></div><div class=\"line\">-d或--no-dereference或--preserve=links 若源文件为连接文件属性，则复制连接文件指向的文件而非复制文件本身</div><div class=\"line\"></div><div class=\"line\">-s或--symbolic-link 对源文件建立符号链接，而非复制文件</div><div class=\"line\"></div><div class=\"line\">-f或--force 强制操作，如果目标文件无法打开则将其移除并重试(当-n选项存在时则不需再选此项)</div><div class=\"line\"></div><div class=\"line\">-i或--interactive 覆盖前询问(使前面的-n选项失效)</div><div class=\"line\"></div><div class=\"line\">-H 跟随源文件中的命令行符号链接</div><div class=\"line\"></div><div class=\"line\">-l或--link 链接文件而不复制</div><div class=\"line\"></div><div class=\"line\">-L或--dereference 总是跟随符号链接</div><div class=\"line\"></div><div class=\"line\">-n或--no-clobber 不要覆盖已存在的文件(使前面的-i选项失效)</div><div class=\"line\"></div><div class=\"line\">-P或----parents 保留源文件或目录的路径，此路径可以是绝对路径或相对路径，且目的目录必须已经存在</div><div class=\"line\"></div><div class=\"line\">-p等于--preserve 保留源文件或目录的属性，包括所有者、所属组、权限与时间</div><div class=\"line\"></div><div class=\"line\">--preserve[=属性列表 保持指定的属性(默认：模式,所有权,时间戳)，如果可能保持附加属性：环境、链接等</div><div class=\"line\"></div><div class=\"line\">-R或-r或--recursive 递归处理，复制目录及目录内的所有项目</div><div class=\"line\"></div><div class=\"line\">-u或--update 使用这项参数之后，只会在源文件的修改时间(Modification Time)较目的文件更新时，或是名称相互对应的目的文件并不存在，才复制文件</div><div class=\"line\"></div><div class=\"line\">-v或--verbose 显示执行过程</div><div class=\"line\"></div><div class=\"line\">-x或--one-file-system 复制的文件或目录存放的文件系统，必须与cp指令执行时所处的文件系统相同，否则不复制，亦不处理位于其他分区的文件</div></pre></td></tr></table></figure></p>\n<p>示例：</p>\n<p>强行复制文件index.html到目录/data/www/project</p>\n<p>cp -f -v /home/usr/download/index.html /data/www/project</p>\n<p>同：cp -fv /home/usr/download/index.html /data/www/project</p>\n<h1 id=\"rm命令\"><a href=\"#rm命令\" class=\"headerlink\" title=\"rm命令\"></a>rm命令</h1><p>rm命令和cp命令类似。</p>\n<p>示例：</p>\n<p>删除download目录</p>\n<p>rm -rf /home/usr/download</p>\n<p>删除download目录下的所有文件和子目录，但保留download目录</p>\n<p>rm -rf /home/usr/download/*</p>\n<h1 id=\"mv命令\"><a href=\"#mv命令\" class=\"headerlink\" title=\"mv命令\"></a>mv命令</h1><p>mv命令和cp命令类似。</p>\n<p>示例：</p>\n<p>移动download目录中的所有子目录和文件到/data/www/project 目录，但保留download目录</p>\n<p>mv -rf /home/usr/download/* /data/www/project</p>\n<h1 id=\"rpm命令\"><a href=\"#rpm命令\" class=\"headerlink\" title=\"rpm命令\"></a>rpm命令</h1><p>rpm是RedHat Package Manager（RedHat软件包管理工具）的简称。</p>\n<p>.rpm执行安装包分为二进制包（Binary）以及源代码包（Source）两种，二进制包可以直接安装在计算机中，而源代码包将会由RPM自动编译、安装。源代码包经常以src.rpm作为后缀名。</p>\n<p>常用参数：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">－ivh：安装显示安装进度–install–verbose–hash</div><div class=\"line\"></div><div class=\"line\">－Uvh：升级软件包–Update；</div><div class=\"line\"></div><div class=\"line\">－qpl：列出RPM软件包内的文件信息[Query Package list]；</div><div class=\"line\"></div><div class=\"line\">－qpi：列出RPM软件包的描述信息[Query Package install package(s)]；</div><div class=\"line\"></div><div class=\"line\">－qf：查找指定文件属于哪个RPM软件包[Query File]；</div><div class=\"line\"></div><div class=\"line\">－Va：校验所有的RPM软件包，查找丢失的文件[View Lost]；</div><div class=\"line\"></div><div class=\"line\">－e：删除包</div><div class=\"line\"></div><div class=\"line\">-q samba ：查询程序是否安装</div></pre></td></tr></table></figure></p>\n<p>常用命令：</p>\n<p>install/upgrade/remove：安装/更新/卸载</p>\n<h1 id=\"yum命令\"><a href=\"#yum命令\" class=\"headerlink\" title=\"yum命令\"></a>yum命令</h1><p>Yum（全称为 Yellow dog Updater, Modified）是一个在Fedora和RedHat以及CentOS中的Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。</p>\n<p>常用参数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">-e 静默执行</div><div class=\"line\"></div><div class=\"line\">-t 忽略错误</div><div class=\"line\"></div><div class=\"line\">-R[分钟] 设置等待时间</div><div class=\"line\"></div><div class=\"line\">-y 自动应答yes</div><div class=\"line\"></div><div class=\"line\">–skip-broken 忽略依赖问题</div><div class=\"line\"></div><div class=\"line\">–nogpgcheck 忽略GPG验证</div></pre></td></tr></table></figure></p>\n<h1 id=\"全部命令：\"><a href=\"#全部命令：\" class=\"headerlink\" title=\"全部命令：\"></a>全部命令：</h1><p>check-update 检查可更新的包</p>\n<p>clearn 清除全部</p>\n<p>clean packages 清除临时包文件（/var/cache/yum 下文件）</p>\n<p>clearn headers 清除rpm头文件</p>\n<p>clean oldheaders 清除旧的rpm头文件</p>\n<p>deplist 列出包的依赖</p>\n<p>list 可安装和可更新的RPM包</p>\n<p>list installed 已安装的包</p>\n<p>list extras 已安装且不在资源库的包</p>\n<p>info 可安装和可更新的RPM包 信息</p>\n<p>info installed 已安装包的信息(-qa 参数相似)</p>\n<p>install[RPM包] 安装包</p>\n<p>localinstall 安装本地的 RPM包</p>\n<p>update[RPM包] 更新包</p>\n<p>upgrade 升级系统</p>\n<p>search[关键词] 搜索包</p>\n<p>provides[关键词] 搜索特定包文件名</p>\n<p>reinstall[RPM包] 重新安装包</p>\n<p>repolist 显示资源库的配置</p>\n<p>resolvedep 指定依赖</p>\n<p>remove[RPM包] 卸载包</p>\n<p>如果要安装指定版本或指定插件，则需要详细文件名称：</p>\n<p>[zhichao@localhost ~]$ sudo yum list java*</p>\n<p>java-1.8.0-openjdk.x86_64 1:1.8.0.45-36.b13.fc22 @System</p>\n<p>java-1.8.0-openjdk-devel.x86_64 1:1.8.0.45-36.b13.fc22 @System</p>\n<p>java-1.8.0-openjdk-headless.x86_64 1:1.8.0.45-36.b13.fc22 @System</p>\n<p>sudo yum install java-1.8.0-openjdk-devel.x86_64</p>\n<p>apt-get命令</p>\n<p>apt-get（全称Advanced Package Tool）的作用同于yum，不过使用该命令的操作系统为Ubuntu和Debian。</p>\n<p>经过修改后可以使用apt-rpm处理红帽的Package Manager（RPM）文件。</p>\n<p>常用命令：</p>\n<p>apt-get install packagename</p>\n<p>安装一个新软件包</p>\n<p>apt-get remove packagename</p>\n<p>卸载一个已安装的软件包（保留配置文档）</p>\n<p>apt-get remove –purge packagename</p>\n<p>卸载一个已安装的软件包（删除配置文档）</p>\n<p>apt-get autoremove packagename</p>\n<p>删除包及其依赖的软件包</p>\n<p>apt-get autoremove –purge packagname</p>\n<p>删除包及其依赖的软件包+配置文件，比上面的要删除的彻底一点</p>\n<p>dpkg –force-all –purge packagename</p>\n<p>有些软件很难卸载，而且还阻止了别的软件的应用，就能够用这个，但是有点冒险。</p>\n<p>dnf命令</p>\n<p>dnf是fedora22新的用于替换yum和rpm的命令。</p>\n<p>在使用yum时，会提示过时，但仍然可用。</p>\n<p>详细了解请看一下这篇文章：<a href=\"http://www.linuxidc.com/Linux/2015-06/118751.htm\">http://www.linuxidc.com/Linux/2015-06/118751.htm</a></p>\n<p>。</p>\n<p>systemctl命令</p>\n<p>在cenos7和fedora22中，systemctl替换了service命令。</p>\n<p>写法从以前的：service start mysqld</p>\n<p>变成了：systemctl start mysqld.service</p>\n<p>详细了解请看一下这篇文章：<a href=\"http://www.linuxidc.com/Linux/2015-07/120833.htm\">http://www.linuxidc.com/Linux/2015-07/120833.htm</a></p>\n<p>。</p>\n<p>或者：</p>\n<p><a href=\"https://wiki.archlinux.org/index.php/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87\">https://wiki.archlinux.org/index.php/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87</a>)</p>\n<p>pwd命令</p>\n<p>pwd命令可以获取当前目录的全路径。</p>\n<p>示例：</p>\n<p>$ pwd</p>\n<p>/home/zhichao/下载</p>\n<h1 id=\"终端下的快捷键\"><a href=\"#终端下的快捷键\" class=\"headerlink\" title=\"终端下的快捷键\"></a>终端下的快捷键</h1><p>Ctrl+a：光标回到命令行首。 （a：ahead）﻿</p>\n<p>Ctrl+e：光标回到命令行尾。 （e：end）</p>\n<p>Ctrl+b：光标向行首移动一个字符。 （b：backwards）</p>\n<p>Ctrl+f：光标向行尾移动一个字符。 （f：forwards）</p>\n<p>Ctrl+w: 删除光标处到行首的字符。</p>\n<p>Ctrl+k：删除光标处到行尾的字符。</p>\n<p>Ctrl+u：删除整个命令行文本字符。</p>\n<p>Ctrl+h：向行首删除一个字符。</p>\n<p>Ctrl+d：向行尾删除一个字符。</p>\n<p>Ctrl+y:：粘贴Ctrl+u，Ctrl+k，Ctrl+w删除的文本。</p>\n<p>Ctrl+p: 上一个使用的历史命令。 （或者直接按向上方向键；p：previous）</p>\n<p>Ctrl+n： 下一个使用的历史命令。（或者直接按向下方向键；n：next）</p>\n<p>Ctrl+r：快速检索历史命令。（r：retrieve）。</p>\n<p>Ctrl+t： 交换光标所在字符和其前的字符。</p>\n<p>Ctrl+i：相当于Tab键。</p>\n<p>Ctrl+o：相当于Ctrl+m.</p>\n<p>Ctrl+m：相当Enter键。</p>\n<h1 id=\"其他控制键：\"><a href=\"#其他控制键：\" class=\"headerlink\" title=\"其他控制键：\"></a>其他控制键：</h1><p>Ctrl+s:使终端发呆，静止，可以使快速输出的终端屏幕停下来。</p>\n<p>Ctrl+q：退出Ctrl+s引起的发呆。</p>\n<p>Ctrl+z：使正在运行在终端的任务，运行于后台。 （可用fg恢复）</p>\n<p>Ctrl+c：中断终端中正在执行的任务。</p>\n<p>Ctrl+d: 在空命令行的情况下可以退出终端。</p>\n<p>Ctrl+[ ：相当于Esc键。</p>\n<p>Esc键：连续按3次显示所有的支持的终端命令。</p>\n<p>Tab键：命令、文件名等自动补全命令或目录、文件名。</p>\n<p>alt+/：同Tab键</p>"},{"title":"反射机制--高淇java视频笔记","date":"2017-02-15T12:05:00.000Z","_content":"\n\n\n![项目结构](/img/项目结构.png)\n\n<!-- more -->\n\n以注释形式讲解。\n\n##  User.java\n\n```java\n\n\tpackage bean;\n\n\n\n\tpublic class User {\n\n\tprivate int id;\n\n\tprivate int age;\n\n\tprivate String uname;\n\n\n\n\tpublic User() {\n\n\n\n\t}\n\n\n\n\tpublic User(int id, int age, String uname) {\n\n\t\tthis.id = id;\n\n\t\tthis.age = age;\n\n\t\tthis.uname = uname;\n\n\t};\n\n\n\n\tpublic int getId() {\n\n\t\treturn id;\n\n\t}\n\n\n\n\tpublic void setId(int id) {\n\n\t\tthis.id = id;\n\n\t}\n\n\n\n\tpublic int getAge() {\n\n\t\treturn age;\n\n\t}\n\n\n\n\tpublic void setAge(int age) {\n\n\t\tthis.age = age;\n\n\t}\n\n\n\n\tpublic String getUname() {\n\n\t\treturn uname;\n\n\t}\n\n\n\n\tpublic void setUname(String uname) {\n\n\t\tthis.uname = uname;\n\n\t}\n\n\n\n\t}\n\n```\n\n##  Demo1.java\n\n```java\n\n\tpackage test;\n\n\n\n\t/**\n\n \t* 测试各种类型（class,interface,enum,annotation,void,primitive等）java.lang.Class对象的获取方法\n\n \t* \n\n \t* @author LOOK\n\n \t* \n\n \t*/\n\n\t@SuppressWarnings(\"all\")\n\n\tpublic class Demo1 {\n\n\tpublic static void main(String[] args) {\n\n\t\tString path = \"bean.User\";\n\n\t\ttry {\n\n\t\t\t// 对象是表示或封装一些数据。一个类被加载后，JVM会创建一个对应类的Class对象，类的整个结构信息会放到对应的Class对象中\n\n\t\t\t// 这个Class对象就像一面镜子，通过这面镜子可以看到对应类的全部信息\n\n\t\t\tClass clazz = Class.forName(path);\n\n\t\t\tSystem.out.println(clazz.hashCode());\n\n\t\t\t// 一个类只对应一个Class对象\n\n\t\t\tClass clazz1 = Class.forName(path);\n\n\t\t\tSystem.out.println(clazz1.hashCode());\n\n\t\t\t/*\n\n\t\t\t * Class对象的三种获取方式\n\n\t\t\t * \n\n\t\t\t * 1.Class.forName(string);\n\n\t\t\t * \n\n\t\t\t * 2.类.class;\n\n\t\t\t * \n\n\t\t\t * 3.对象.getClass()\n\n\t\t\t */\n\n\t\t\tClass strClass = String.class;\n\n\t\t\tClass strClass2 = path.getClass();\n\n\t\t\tSystem.out.println(strClass == strClass2);\n\n\t\t\t\n\n\t\t\t/*\n\n\t\t\t * 相同类型一样维数的Class对象一样，不同类型或者维数不同的不一样\n\n\t\t\t */\n\n\t\t\tint[] arr01 = new int[10];\n\n\t\t\tint[] arr02 = new int[20];\n\n\t\t\tint[][] arr03 = new int[2][3];\n\n\t\t\tdouble[] arr04 = new double[3];\n\n\t\t\tSystem.out.println(arr01.getClass().hashCode());\n\n\t\t\tSystem.out.println(arr02.getClass().hashCode());\n\n\t\t\tSystem.out.println(arr03.getClass().hashCode());\n\n\t\t\tSystem.out.println(arr04.getClass().hashCode());\n\n\t\t} catch (ClassNotFoundException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t}\n\n\t}\n\n\t}\n\n```\n\n\n\n##  Demo2.java\n\n\n\n```java\n\n\tpackage test;\n\n\n\n\timport java.lang.reflect.Constructor;\n\n\timport java.lang.reflect.Field;\n\n\timport java.lang.reflect.Method;\n\n\t\n\n\t/**\n\n\t * 利用反射的API获取类的信息（类的名称、方法、属性、构造器等）\n\n\t * \n\n\t * @author LOOK\n\n\t * \n\n\t */\n\n\t@SuppressWarnings(\"all\")\n\n\tpublic class Demo2 {\n\n\t\tpublic static void main(String[] args) {\n\n\t\tString path = \"bean.User\";\n\n\t\ttry {\n\n\t\t\tClass clazz = Class.forName(path);\n\n\n\n\t\t\t/* 获取类的名字 */\n\n\t\t\tSystem.out.println(clazz.getName());// 获取包名+类名。bean.User\n\n\t\t\tSystem.out.println(clazz.getSimpleName());// 获取类名。User\n\n\n\n\t\t\t/* 获取类的属性 */\n\n\t\t\tField[] fields = clazz.getFields();// 只能获取public类型的属性\n\n\t\t\tField[] fields2 = clazz.getDeclaredFields();// 获取所有类型的属性\n\n\t\t\tField field = clazz.getDeclaredField(\"id\");// 获取指定名称的属性\n\n\t\t\tSystem.out.println(fields.length);\n\n\t\t\tSystem.out.println(fields2.length);\n\n\t\t\tSystem.out.println(field);\n\n\t\t\tfor (Field temp : fields2) {\n\n\t\t\t\tSystem.out.println(\"属性：\" + temp);\n\n\t\t\t}\n\n\n\n\t\t\t/* 获取类的方法 */\n\n\t\t\tMethod[] methods = clazz.getDeclaredMethods();\n\n\t\t\tMethod method01 = clazz.getDeclaredMethod(\"getUname\", null);\n\n\t\t\t// 如果方法有参数，必须传递参数类型对应的class对象\n\n\t\t\tMethod method02 = clazz.getDeclaredMethod(\"setUname\", String.class);\n\n\t\t\tfor (Method method : methods) {\n\n\t\t\t\tSystem.out.println(method);\n\n\t\t\t}\n\n\n\n\t\t\t/* 获取类的构造器信息 */\n\n\t\t\tConstructor[] constructors = clazz.getDeclaredConstructors();\n\n\t\t\tfor (Constructor constructor : constructors) {\n\n\t\t\t\tSystem.out.println(\"构造器：\" + constructor);\n\n\t\t\t}\n\n\t\t\tConstructor c01 = clazz.getDeclaredConstructor(null);\n\n\t\t\tSystem.out.println(\"无参构造器：\" + c01);\n\n\t\t\tConstructor c02 = clazz.getConstructor(int.class, int.class,\n\n\t\t\t\t\tString.class);\n\n\t\t\tSystem.out.println(\"有参构造器：\" + c02);\n\n\n\n\t\t} catch (ClassNotFoundException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (SecurityException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (NoSuchMethodException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (NoSuchFieldException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t}\n\n\n\n\t}\n\n\t}\n\n```\n\n##  Demo3.java\n\n```java\n\n\tpackage test;\n\n\t\n\n\timport java.io.File;\n\n\timport java.lang.reflect.Constructor;\n\n\timport java.lang.reflect.Field;\n\n\timport java.lang.reflect.InvocationTargetException;\n\n\timport java.lang.reflect.Method;\n\n\t\n\n\timport bean.User;\n\n\n\n\t/**\n\n\t * 通过反射API动态的操作：构造器、属性、方法\n\n\t * \n\n\t * @author LOOK\n\n\t * \n\n\t */\n\n\t@SuppressWarnings(\"all\")\n\n\tpublic class Demo3 {\n\n\tpublic static void main(String[] args) {\n\n\t\tString path = \"bean.User\";\n\n\t\ttry {\n\n\t\t\tClass clazz = Class.forName(path);\n\n\n\n\t\t\t/* 通过反射API 调用构造方法，构造对象 */\n\n\t\t\tUser user = (User) (clazz.newInstance());// 其实是调用了无参构造器\n\n\t\t\tSystem.out.println(user);\n\n\n\n\t\t\t/* 调用有参构造器 */\n\n\t\t\tConstructor<User> c = clazz.getConstructor(int.class, int.class,\n\n\t\t\t\t\tString.class);\n\n\t\t\tUser user2 = c.newInstance(1001, 22, \"李四\");\n\n\t\t\tSystem.out.println(user2.getAge());\n\n\n\n\t\t\t/* 通过反射API调用普通方法 */\n\n\t\t\tUser user3 = (User) (clazz.newInstance());\n\n\t\t\t// 以下两行等价于user3.getUname();\n\n\t\t\tMethod method = clazz.getDeclaredMethod(\"setUname\", String.class);\n\n\t\t\tmethod.invoke(user3, \"张三\");\n\n\t\t\tSystem.out.println(user3.getUname());\n\n\n\n\t\t\t/* 通过反射API操作属性 */\n\n\t\t\tUser user4 = (User) (clazz.newInstance());\n\n\t\t\tField field = clazz.getDeclaredField(\"uname\");\n\n\t\t\tfield.setAccessible(true);// 该属性不做安全检查，可以直接修改。否则将报错。\n\n\t\t\tfield.set(user4, \"王五\");// 通过反射直接写属性\n\n\t\t\tSystem.out.println(user4.getUname());// 通过反射直接读属性\n\n\t\t} catch (ClassNotFoundException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (SecurityException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (InstantiationException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (IllegalAccessException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (NoSuchMethodException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (IllegalArgumentException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (InvocationTargetException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (NoSuchFieldException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t}\n\n\n\n\t}\n\n\t}\n\n```\n","source":"_posts/反射机制--高淇Java视频笔记.md","raw":"title: 反射机制--高淇java视频笔记\n\ncategories: Java\n\ntags: java\n\ndate: 2017-2-15 20:05\n\n---\n\n\n\n![项目结构](/img/项目结构.png)\n\n<!-- more -->\n\n以注释形式讲解。\n\n##  User.java\n\n```java\n\n\tpackage bean;\n\n\n\n\tpublic class User {\n\n\tprivate int id;\n\n\tprivate int age;\n\n\tprivate String uname;\n\n\n\n\tpublic User() {\n\n\n\n\t}\n\n\n\n\tpublic User(int id, int age, String uname) {\n\n\t\tthis.id = id;\n\n\t\tthis.age = age;\n\n\t\tthis.uname = uname;\n\n\t};\n\n\n\n\tpublic int getId() {\n\n\t\treturn id;\n\n\t}\n\n\n\n\tpublic void setId(int id) {\n\n\t\tthis.id = id;\n\n\t}\n\n\n\n\tpublic int getAge() {\n\n\t\treturn age;\n\n\t}\n\n\n\n\tpublic void setAge(int age) {\n\n\t\tthis.age = age;\n\n\t}\n\n\n\n\tpublic String getUname() {\n\n\t\treturn uname;\n\n\t}\n\n\n\n\tpublic void setUname(String uname) {\n\n\t\tthis.uname = uname;\n\n\t}\n\n\n\n\t}\n\n```\n\n##  Demo1.java\n\n```java\n\n\tpackage test;\n\n\n\n\t/**\n\n \t* 测试各种类型（class,interface,enum,annotation,void,primitive等）java.lang.Class对象的获取方法\n\n \t* \n\n \t* @author LOOK\n\n \t* \n\n \t*/\n\n\t@SuppressWarnings(\"all\")\n\n\tpublic class Demo1 {\n\n\tpublic static void main(String[] args) {\n\n\t\tString path = \"bean.User\";\n\n\t\ttry {\n\n\t\t\t// 对象是表示或封装一些数据。一个类被加载后，JVM会创建一个对应类的Class对象，类的整个结构信息会放到对应的Class对象中\n\n\t\t\t// 这个Class对象就像一面镜子，通过这面镜子可以看到对应类的全部信息\n\n\t\t\tClass clazz = Class.forName(path);\n\n\t\t\tSystem.out.println(clazz.hashCode());\n\n\t\t\t// 一个类只对应一个Class对象\n\n\t\t\tClass clazz1 = Class.forName(path);\n\n\t\t\tSystem.out.println(clazz1.hashCode());\n\n\t\t\t/*\n\n\t\t\t * Class对象的三种获取方式\n\n\t\t\t * \n\n\t\t\t * 1.Class.forName(string);\n\n\t\t\t * \n\n\t\t\t * 2.类.class;\n\n\t\t\t * \n\n\t\t\t * 3.对象.getClass()\n\n\t\t\t */\n\n\t\t\tClass strClass = String.class;\n\n\t\t\tClass strClass2 = path.getClass();\n\n\t\t\tSystem.out.println(strClass == strClass2);\n\n\t\t\t\n\n\t\t\t/*\n\n\t\t\t * 相同类型一样维数的Class对象一样，不同类型或者维数不同的不一样\n\n\t\t\t */\n\n\t\t\tint[] arr01 = new int[10];\n\n\t\t\tint[] arr02 = new int[20];\n\n\t\t\tint[][] arr03 = new int[2][3];\n\n\t\t\tdouble[] arr04 = new double[3];\n\n\t\t\tSystem.out.println(arr01.getClass().hashCode());\n\n\t\t\tSystem.out.println(arr02.getClass().hashCode());\n\n\t\t\tSystem.out.println(arr03.getClass().hashCode());\n\n\t\t\tSystem.out.println(arr04.getClass().hashCode());\n\n\t\t} catch (ClassNotFoundException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t}\n\n\t}\n\n\t}\n\n```\n\n\n\n##  Demo2.java\n\n\n\n```java\n\n\tpackage test;\n\n\n\n\timport java.lang.reflect.Constructor;\n\n\timport java.lang.reflect.Field;\n\n\timport java.lang.reflect.Method;\n\n\t\n\n\t/**\n\n\t * 利用反射的API获取类的信息（类的名称、方法、属性、构造器等）\n\n\t * \n\n\t * @author LOOK\n\n\t * \n\n\t */\n\n\t@SuppressWarnings(\"all\")\n\n\tpublic class Demo2 {\n\n\t\tpublic static void main(String[] args) {\n\n\t\tString path = \"bean.User\";\n\n\t\ttry {\n\n\t\t\tClass clazz = Class.forName(path);\n\n\n\n\t\t\t/* 获取类的名字 */\n\n\t\t\tSystem.out.println(clazz.getName());// 获取包名+类名。bean.User\n\n\t\t\tSystem.out.println(clazz.getSimpleName());// 获取类名。User\n\n\n\n\t\t\t/* 获取类的属性 */\n\n\t\t\tField[] fields = clazz.getFields();// 只能获取public类型的属性\n\n\t\t\tField[] fields2 = clazz.getDeclaredFields();// 获取所有类型的属性\n\n\t\t\tField field = clazz.getDeclaredField(\"id\");// 获取指定名称的属性\n\n\t\t\tSystem.out.println(fields.length);\n\n\t\t\tSystem.out.println(fields2.length);\n\n\t\t\tSystem.out.println(field);\n\n\t\t\tfor (Field temp : fields2) {\n\n\t\t\t\tSystem.out.println(\"属性：\" + temp);\n\n\t\t\t}\n\n\n\n\t\t\t/* 获取类的方法 */\n\n\t\t\tMethod[] methods = clazz.getDeclaredMethods();\n\n\t\t\tMethod method01 = clazz.getDeclaredMethod(\"getUname\", null);\n\n\t\t\t// 如果方法有参数，必须传递参数类型对应的class对象\n\n\t\t\tMethod method02 = clazz.getDeclaredMethod(\"setUname\", String.class);\n\n\t\t\tfor (Method method : methods) {\n\n\t\t\t\tSystem.out.println(method);\n\n\t\t\t}\n\n\n\n\t\t\t/* 获取类的构造器信息 */\n\n\t\t\tConstructor[] constructors = clazz.getDeclaredConstructors();\n\n\t\t\tfor (Constructor constructor : constructors) {\n\n\t\t\t\tSystem.out.println(\"构造器：\" + constructor);\n\n\t\t\t}\n\n\t\t\tConstructor c01 = clazz.getDeclaredConstructor(null);\n\n\t\t\tSystem.out.println(\"无参构造器：\" + c01);\n\n\t\t\tConstructor c02 = clazz.getConstructor(int.class, int.class,\n\n\t\t\t\t\tString.class);\n\n\t\t\tSystem.out.println(\"有参构造器：\" + c02);\n\n\n\n\t\t} catch (ClassNotFoundException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (SecurityException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (NoSuchMethodException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (NoSuchFieldException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t}\n\n\n\n\t}\n\n\t}\n\n```\n\n##  Demo3.java\n\n```java\n\n\tpackage test;\n\n\t\n\n\timport java.io.File;\n\n\timport java.lang.reflect.Constructor;\n\n\timport java.lang.reflect.Field;\n\n\timport java.lang.reflect.InvocationTargetException;\n\n\timport java.lang.reflect.Method;\n\n\t\n\n\timport bean.User;\n\n\n\n\t/**\n\n\t * 通过反射API动态的操作：构造器、属性、方法\n\n\t * \n\n\t * @author LOOK\n\n\t * \n\n\t */\n\n\t@SuppressWarnings(\"all\")\n\n\tpublic class Demo3 {\n\n\tpublic static void main(String[] args) {\n\n\t\tString path = \"bean.User\";\n\n\t\ttry {\n\n\t\t\tClass clazz = Class.forName(path);\n\n\n\n\t\t\t/* 通过反射API 调用构造方法，构造对象 */\n\n\t\t\tUser user = (User) (clazz.newInstance());// 其实是调用了无参构造器\n\n\t\t\tSystem.out.println(user);\n\n\n\n\t\t\t/* 调用有参构造器 */\n\n\t\t\tConstructor<User> c = clazz.getConstructor(int.class, int.class,\n\n\t\t\t\t\tString.class);\n\n\t\t\tUser user2 = c.newInstance(1001, 22, \"李四\");\n\n\t\t\tSystem.out.println(user2.getAge());\n\n\n\n\t\t\t/* 通过反射API调用普通方法 */\n\n\t\t\tUser user3 = (User) (clazz.newInstance());\n\n\t\t\t// 以下两行等价于user3.getUname();\n\n\t\t\tMethod method = clazz.getDeclaredMethod(\"setUname\", String.class);\n\n\t\t\tmethod.invoke(user3, \"张三\");\n\n\t\t\tSystem.out.println(user3.getUname());\n\n\n\n\t\t\t/* 通过反射API操作属性 */\n\n\t\t\tUser user4 = (User) (clazz.newInstance());\n\n\t\t\tField field = clazz.getDeclaredField(\"uname\");\n\n\t\t\tfield.setAccessible(true);// 该属性不做安全检查，可以直接修改。否则将报错。\n\n\t\t\tfield.set(user4, \"王五\");// 通过反射直接写属性\n\n\t\t\tSystem.out.println(user4.getUname());// 通过反射直接读属性\n\n\t\t} catch (ClassNotFoundException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (SecurityException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (InstantiationException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (IllegalAccessException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (NoSuchMethodException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (IllegalArgumentException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (InvocationTargetException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t} catch (NoSuchFieldException e) {\n\n\t\t\te.printStackTrace();\n\n\t\t}\n\n\n\n\t}\n\n\t}\n\n```\n","slug":"反射机制--高淇Java视频笔记","published":1,"updated":"2017-04-23T04:54:59.746Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1u7zpph000m99pvx8ysfk0w","content":"<p><img src=\"/img/项目结构.png\" alt=\"项目结构\"></p>\n<a id=\"more\"></a>\n<p>以注释形式讲解。</p>\n<h2 id=\"User-java\"><a href=\"#User-java\" class=\"headerlink\" title=\"User.java\"></a>User.java</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">package</span> bean;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> id;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">private</span> String uname;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">(<span class=\"keyword\">int</span> id, <span class=\"keyword\">int</span> age, String uname)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">this</span>.age = age;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">this</span>.uname = uname;</div><div class=\"line\"></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getId</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">return</span> id;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getAge</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">return</span> age;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAge</span><span class=\"params\">(<span class=\"keyword\">int</span> age)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">this</span>.age = age;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUname</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">return</span> uname;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUname</span><span class=\"params\">(String uname)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">this</span>.uname = uname;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Demo1-java\"><a href=\"#Demo1-java\" class=\"headerlink\" title=\"Demo1.java\"></a>Demo1.java</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\">\t* 测试各种类型（class,interface,enum,annotation,void,primitive等）java.lang.Class对象的获取方法</div><div class=\"line\"></div><div class=\"line\">\t* </div><div class=\"line\"></div><div class=\"line\">\t* <span class=\"doctag\">@author</span> LOOK</div><div class=\"line\"></div><div class=\"line\">\t* </div><div class=\"line\"></div><div class=\"line\">\t*/</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"all\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo1</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\tString path = <span class=\"string\">\"bean.User\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 对象是表示或封装一些数据。一个类被加载后，JVM会创建一个对应类的Class对象，类的整个结构信息会放到对应的Class对象中</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 这个Class对象就像一面镜子，通过这面镜子可以看到对应类的全部信息</span></div><div class=\"line\"></div><div class=\"line\">\t\tClass clazz = Class.forName(path);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(clazz.hashCode());</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 一个类只对应一个Class对象</span></div><div class=\"line\"></div><div class=\"line\">\t\tClass clazz1 = Class.forName(path);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(clazz1.hashCode());</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/*</span></div><div class=\"line\"></div><div class=\"line\">\t\t * Class对象的三种获取方式</div><div class=\"line\"></div><div class=\"line\">\t\t * </div><div class=\"line\"></div><div class=\"line\">\t\t * 1.Class.forName(string);</div><div class=\"line\"></div><div class=\"line\">\t\t * </div><div class=\"line\"></div><div class=\"line\">\t\t * 2.类.class;</div><div class=\"line\"></div><div class=\"line\">\t\t * </div><div class=\"line\"></div><div class=\"line\">\t\t * 3.对象.getClass()</div><div class=\"line\"></div><div class=\"line\">\t\t */</div><div class=\"line\"></div><div class=\"line\">\t\tClass strClass = String.class;</div><div class=\"line\"></div><div class=\"line\">\t\tClass strClass2 = path.getClass();</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(strClass == strClass2);</div><div class=\"line\"></div><div class=\"line\">\t\t</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/*</span></div><div class=\"line\"></div><div class=\"line\">\t\t * 相同类型一样维数的Class对象一样，不同类型或者维数不同的不一样</div><div class=\"line\"></div><div class=\"line\">\t\t */</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">int</span>[] arr01 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">int</span>[] arr02 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">20</span>];</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">int</span>[][] arr03 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">3</span>];</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">double</span>[] arr04 = <span class=\"keyword\">new</span> <span class=\"keyword\">double</span>[<span class=\"number\">3</span>];</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(arr01.getClass().hashCode());</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(arr02.getClass().hashCode());</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(arr03.getClass().hashCode());</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(arr04.getClass().hashCode());</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Demo2-java\"><a href=\"#Demo2-java\" class=\"headerlink\" title=\"Demo2.java\"></a>Demo2.java</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Constructor;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\"> * 利用反射的API获取类的信息（类的名称、方法、属性、构造器等）</div><div class=\"line\"></div><div class=\"line\"> * </div><div class=\"line\"></div><div class=\"line\"> * <span class=\"doctag\">@author</span> LOOK</div><div class=\"line\"></div><div class=\"line\"> * </div><div class=\"line\"></div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"all\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\tString path = <span class=\"string\">\"bean.User\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\"></div><div class=\"line\">\t\tClass clazz = Class.forName(path);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 获取类的名字 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(clazz.getName());<span class=\"comment\">// 获取包名+类名。bean.User</span></div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(clazz.getSimpleName());<span class=\"comment\">// 获取类名。User</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 获取类的属性 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tField[] fields = clazz.getFields();<span class=\"comment\">// 只能获取public类型的属性</span></div><div class=\"line\"></div><div class=\"line\">\t\tField[] fields2 = clazz.getDeclaredFields();<span class=\"comment\">// 获取所有类型的属性</span></div><div class=\"line\"></div><div class=\"line\">\t\tField field = clazz.getDeclaredField(<span class=\"string\">\"id\"</span>);<span class=\"comment\">// 获取指定名称的属性</span></div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(fields.length);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(fields2.length);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(field);</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (Field temp : fields2) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"属性：\"</span> + temp);</div><div class=\"line\"></div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 获取类的方法 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tMethod[] methods = clazz.getDeclaredMethods();</div><div class=\"line\"></div><div class=\"line\">\t\tMethod method01 = clazz.getDeclaredMethod(<span class=\"string\">\"getUname\"</span>, <span class=\"keyword\">null</span>);</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 如果方法有参数，必须传递参数类型对应的class对象</span></div><div class=\"line\"></div><div class=\"line\">\t\tMethod method02 = clazz.getDeclaredMethod(<span class=\"string\">\"setUname\"</span>, String.class);</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (Method method : methods) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\t\tSystem.out.println(method);</div><div class=\"line\"></div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 获取类的构造器信息 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tConstructor[] constructors = clazz.getDeclaredConstructors();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (Constructor constructor : constructors) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"构造器：\"</span> + constructor);</div><div class=\"line\"></div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\tConstructor c01 = clazz.getDeclaredConstructor(<span class=\"keyword\">null</span>);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"无参构造器：\"</span> + c01);</div><div class=\"line\"></div><div class=\"line\">\t\tConstructor c02 = clazz.getConstructor(<span class=\"keyword\">int</span>.class, <span class=\"keyword\">int</span>.class,</div><div class=\"line\"></div><div class=\"line\">\t\t\t\tString.class);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"有参构造器：\"</span> + c02);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (SecurityException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (NoSuchMethodException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (NoSuchFieldException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Demo3-java\"><a href=\"#Demo3-java\" class=\"headerlink\" title=\"Demo3.java\"></a>Demo3.java</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Constructor;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.InvocationTargetException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> bean.User;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"></div><div class=\"line\"> * 通过反射API动态的操作：构造器、属性、方法</div><div class=\"line\"></div><div class=\"line\"> * </div><div class=\"line\"></div><div class=\"line\"> * <span class=\"doctag\">@author</span> LOOK</div><div class=\"line\"></div><div class=\"line\"> * </div><div class=\"line\"></div><div class=\"line\"> */</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"all\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo3</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\tString path = <span class=\"string\">\"bean.User\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\"></div><div class=\"line\">\t\tClass clazz = Class.forName(path);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 通过反射API 调用构造方法，构造对象 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tUser user = (User) (clazz.newInstance());<span class=\"comment\">// 其实是调用了无参构造器</span></div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(user);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 调用有参构造器 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tConstructor&lt;User&gt; c = clazz.getConstructor(<span class=\"keyword\">int</span>.class, <span class=\"keyword\">int</span>.class,</div><div class=\"line\"></div><div class=\"line\">\t\t\t\tString.class);</div><div class=\"line\"></div><div class=\"line\">\t\tUser user2 = c.newInstance(<span class=\"number\">1001</span>, <span class=\"number\">22</span>, <span class=\"string\">\"李四\"</span>);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(user2.getAge());</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 通过反射API调用普通方法 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tUser user3 = (User) (clazz.newInstance());</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 以下两行等价于user3.getUname();</span></div><div class=\"line\"></div><div class=\"line\">\t\tMethod method = clazz.getDeclaredMethod(<span class=\"string\">\"setUname\"</span>, String.class);</div><div class=\"line\"></div><div class=\"line\">\t\tmethod.invoke(user3, <span class=\"string\">\"张三\"</span>);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(user3.getUname());</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 通过反射API操作属性 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tUser user4 = (User) (clazz.newInstance());</div><div class=\"line\"></div><div class=\"line\">\t\tField field = clazz.getDeclaredField(<span class=\"string\">\"uname\"</span>);</div><div class=\"line\"></div><div class=\"line\">\t\tfield.setAccessible(<span class=\"keyword\">true</span>);<span class=\"comment\">// 该属性不做安全检查，可以直接修改。否则将报错。</span></div><div class=\"line\"></div><div class=\"line\">\t\tfield.set(user4, <span class=\"string\">\"王五\"</span>);<span class=\"comment\">// 通过反射直接写属性</span></div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(user4.getUname());<span class=\"comment\">// 通过反射直接读属性</span></div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (SecurityException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (InstantiationException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (IllegalAccessException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (NoSuchMethodException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (IllegalArgumentException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (InvocationTargetException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (NoSuchFieldException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><img src=\"/img/项目结构.png\" alt=\"项目结构\"></p>","more":"<p>以注释形式讲解。</p>\n<h2 id=\"User-java\"><a href=\"#User-java\" class=\"headerlink\" title=\"User.java\"></a>User.java</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">package</span> bean;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> id;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">private</span> String uname;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">User</span><span class=\"params\">(<span class=\"keyword\">int</span> id, <span class=\"keyword\">int</span> age, String uname)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">this</span>.age = age;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">this</span>.uname = uname;</div><div class=\"line\"></div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getId</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">return</span> id;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">this</span>.id = id;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getAge</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">return</span> age;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAge</span><span class=\"params\">(<span class=\"keyword\">int</span> age)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">this</span>.age = age;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUname</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">return</span> uname;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUname</span><span class=\"params\">(String uname)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">this</span>.uname = uname;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Demo1-java\"><a href=\"#Demo1-java\" class=\"headerlink\" title=\"Demo1.java\"></a>Demo1.java</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\">\t* 测试各种类型（class,interface,enum,annotation,void,primitive等）java.lang.Class对象的获取方法</div><div class=\"line\"></div><div class=\"line\">\t* </div><div class=\"line\"></div><div class=\"line\">\t* <span class=\"doctag\">@author</span> LOOK</div><div class=\"line\"></div><div class=\"line\">\t* </div><div class=\"line\"></div><div class=\"line\">\t*/</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"all\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo1</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\tString path = <span class=\"string\">\"bean.User\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 对象是表示或封装一些数据。一个类被加载后，JVM会创建一个对应类的Class对象，类的整个结构信息会放到对应的Class对象中</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 这个Class对象就像一面镜子，通过这面镜子可以看到对应类的全部信息</span></div><div class=\"line\"></div><div class=\"line\">\t\tClass clazz = Class.forName(path);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(clazz.hashCode());</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 一个类只对应一个Class对象</span></div><div class=\"line\"></div><div class=\"line\">\t\tClass clazz1 = Class.forName(path);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(clazz1.hashCode());</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/*</div><div class=\"line\"></div><div class=\"line\">\t\t * Class对象的三种获取方式</div><div class=\"line\"></div><div class=\"line\">\t\t * </div><div class=\"line\"></div><div class=\"line\">\t\t * 1.Class.forName(string);</div><div class=\"line\"></div><div class=\"line\">\t\t * </div><div class=\"line\"></div><div class=\"line\">\t\t * 2.类.class;</div><div class=\"line\"></div><div class=\"line\">\t\t * </div><div class=\"line\"></div><div class=\"line\">\t\t * 3.对象.getClass()</div><div class=\"line\"></div><div class=\"line\">\t\t */</span></div><div class=\"line\"></div><div class=\"line\">\t\tClass strClass = String.class;</div><div class=\"line\"></div><div class=\"line\">\t\tClass strClass2 = path.getClass();</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(strClass == strClass2);</div><div class=\"line\"></div><div class=\"line\">\t\t</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/*</div><div class=\"line\"></div><div class=\"line\">\t\t * 相同类型一样维数的Class对象一样，不同类型或者维数不同的不一样</div><div class=\"line\"></div><div class=\"line\">\t\t */</span></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">int</span>[] arr01 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">int</span>[] arr02 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">20</span>];</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">int</span>[][] arr03 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">3</span>];</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">double</span>[] arr04 = <span class=\"keyword\">new</span> <span class=\"keyword\">double</span>[<span class=\"number\">3</span>];</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(arr01.getClass().hashCode());</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(arr02.getClass().hashCode());</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(arr03.getClass().hashCode());</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(arr04.getClass().hashCode());</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Demo2-java\"><a href=\"#Demo2-java\" class=\"headerlink\" title=\"Demo2.java\"></a>Demo2.java</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Constructor;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\"> * 利用反射的API获取类的信息（类的名称、方法、属性、构造器等）</div><div class=\"line\"></div><div class=\"line\"> * </div><div class=\"line\"></div><div class=\"line\"> * <span class=\"doctag\">@author</span> LOOK</div><div class=\"line\"></div><div class=\"line\"> * </div><div class=\"line\"></div><div class=\"line\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"all\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\tString path = <span class=\"string\">\"bean.User\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\"></div><div class=\"line\">\t\tClass clazz = Class.forName(path);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 获取类的名字 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(clazz.getName());<span class=\"comment\">// 获取包名+类名。bean.User</span></div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(clazz.getSimpleName());<span class=\"comment\">// 获取类名。User</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 获取类的属性 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tField[] fields = clazz.getFields();<span class=\"comment\">// 只能获取public类型的属性</span></div><div class=\"line\"></div><div class=\"line\">\t\tField[] fields2 = clazz.getDeclaredFields();<span class=\"comment\">// 获取所有类型的属性</span></div><div class=\"line\"></div><div class=\"line\">\t\tField field = clazz.getDeclaredField(<span class=\"string\">\"id\"</span>);<span class=\"comment\">// 获取指定名称的属性</span></div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(fields.length);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(fields2.length);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(field);</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (Field temp : fields2) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"属性：\"</span> + temp);</div><div class=\"line\"></div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 获取类的方法 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tMethod[] methods = clazz.getDeclaredMethods();</div><div class=\"line\"></div><div class=\"line\">\t\tMethod method01 = clazz.getDeclaredMethod(<span class=\"string\">\"getUname\"</span>, <span class=\"keyword\">null</span>);</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 如果方法有参数，必须传递参数类型对应的class对象</span></div><div class=\"line\"></div><div class=\"line\">\t\tMethod method02 = clazz.getDeclaredMethod(<span class=\"string\">\"setUname\"</span>, String.class);</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (Method method : methods) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\t\tSystem.out.println(method);</div><div class=\"line\"></div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 获取类的构造器信息 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tConstructor[] constructors = clazz.getDeclaredConstructors();</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (Constructor constructor : constructors) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"构造器：\"</span> + constructor);</div><div class=\"line\"></div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\tConstructor c01 = clazz.getDeclaredConstructor(<span class=\"keyword\">null</span>);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"无参构造器：\"</span> + c01);</div><div class=\"line\"></div><div class=\"line\">\t\tConstructor c02 = clazz.getConstructor(<span class=\"keyword\">int</span>.class, <span class=\"keyword\">int</span>.class,</div><div class=\"line\"></div><div class=\"line\">\t\t\t\tString.class);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"有参构造器：\"</span> + c02);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (SecurityException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (NoSuchMethodException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (NoSuchFieldException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Demo3-java\"><a href=\"#Demo3-java\" class=\"headerlink\" title=\"Demo3.java\"></a>Demo3.java</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">package</span> test;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.File;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Constructor;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.InvocationTargetException;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> bean.User;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"></div><div class=\"line\"> * 通过反射API动态的操作：构造器、属性、方法</div><div class=\"line\"></div><div class=\"line\"> * </div><div class=\"line\"></div><div class=\"line\"> * <span class=\"doctag\">@author</span> LOOK</div><div class=\"line\"></div><div class=\"line\"> * </div><div class=\"line\"></div><div class=\"line\"> */</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"all\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo3</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">\tString path = <span class=\"string\">\"bean.User\"</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\"></div><div class=\"line\">\t\tClass clazz = Class.forName(path);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 通过反射API 调用构造方法，构造对象 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tUser user = (User) (clazz.newInstance());<span class=\"comment\">// 其实是调用了无参构造器</span></div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(user);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 调用有参构造器 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tConstructor&lt;User&gt; c = clazz.getConstructor(<span class=\"keyword\">int</span>.class, <span class=\"keyword\">int</span>.class,</div><div class=\"line\"></div><div class=\"line\">\t\t\t\tString.class);</div><div class=\"line\"></div><div class=\"line\">\t\tUser user2 = c.newInstance(<span class=\"number\">1001</span>, <span class=\"number\">22</span>, <span class=\"string\">\"李四\"</span>);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(user2.getAge());</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 通过反射API调用普通方法 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tUser user3 = (User) (clazz.newInstance());</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">// 以下两行等价于user3.getUname();</span></div><div class=\"line\"></div><div class=\"line\">\t\tMethod method = clazz.getDeclaredMethod(<span class=\"string\">\"setUname\"</span>, String.class);</div><div class=\"line\"></div><div class=\"line\">\t\tmethod.invoke(user3, <span class=\"string\">\"张三\"</span>);</div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(user3.getUname());</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"comment\">/* 通过反射API操作属性 */</span></div><div class=\"line\"></div><div class=\"line\">\t\tUser user4 = (User) (clazz.newInstance());</div><div class=\"line\"></div><div class=\"line\">\t\tField field = clazz.getDeclaredField(<span class=\"string\">\"uname\"</span>);</div><div class=\"line\"></div><div class=\"line\">\t\tfield.setAccessible(<span class=\"keyword\">true</span>);<span class=\"comment\">// 该属性不做安全检查，可以直接修改。否则将报错。</span></div><div class=\"line\"></div><div class=\"line\">\t\tfield.set(user4, <span class=\"string\">\"王五\"</span>);<span class=\"comment\">// 通过反射直接写属性</span></div><div class=\"line\"></div><div class=\"line\">\t\tSystem.out.println(user4.getUname());<span class=\"comment\">// 通过反射直接读属性</span></div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (SecurityException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (InstantiationException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (IllegalAccessException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (NoSuchMethodException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (IllegalArgumentException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (InvocationTargetException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (NoSuchFieldException e) &#123;</div><div class=\"line\"></div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"反射机制动态生成sql语句","date":"2017-02-17T04:40:00.000Z","_content":"本例用于熟悉反射机制，代码很简单，水平有限，个人的一些理解都加在注释中了。\n<!-- more -->\n## bean包下\n### 1.User.java\n\n\n```java\n\t package bean;\n    import util.TableFieldAnno;\n    import util.TableNameAnno;\n\n    /**\n     * 所有用户信息\n     * \n     * @author LOOK\n     * \n     */\n\t@TableNameAnno(\"user\")\n\tpublic class User {\n\t\t@TableFieldAnno(field = \"user_id\", primaryKey = true, defaultNull = false)\n\t\tprivate String user_id;// 学号\n\t\t@TableFieldAnno(field = \"user_name\")\n\t\tprivate String user_name;// 姓名\n\t\t@TableFieldAnno(field = \"user_tel\")\n\t\tprivate String user_tel;// 联系方式\n\t\t@TableFieldAnno(field = \"user_type\")\n\t\tprivate String user_type;// 身份类型\n\t\t@TableFieldAnno(field = \"user_pw\")\n\t\tprivate String user_pw;// 密码\n\t\t@TableFieldAnno(field = \"user_isGraduate\")\n\t\tprivate Boolean isGraduate;// 是否毕业\n\n\tpublic String getUser_id() {\n\t\treturn user_id;\n\t}\n\n\tpublic void setUser_id(String user_id) {\n\t\tthis.user_id = user_id;\n\t}\n\n\tpublic String getUser_name() {\n\t\treturn user_name;\n\t}\n\n\tpublic void setUser_name(String user_name) {\n\t\tthis.user_name = user_name;\n\t}\n\n\tpublic String getUser_tel() {\n\t\treturn user_tel;\n\t}\n\n\tpublic void setUser_tel(String user_tel) {\n\t\tthis.user_tel = user_tel;\n\t}\n\n\tpublic String getUser_type() {\n\t\treturn user_type;\n\t}\n\n\tpublic void setUser_type(String user_type) {\n\t\tthis.user_type = user_type;\n\t}\n\n\tpublic String getUser_pw() {\n\t\treturn user_pw;\n\t}\n\n\tpublic void setUser_pw(String user_pw) {\n\t\tthis.user_pw = user_pw;\n\t}\n\n\tpublic Boolean getIsGraduate() {\n\t\treturn isGraduate;\n\t}\n\n\tpublic void setIsGraduate(Boolean isGraduate) {\n\t\tthis.isGraduate = isGraduate;\n\t}\n\n\t}\n```\n\n## util包下\n### TableNameAnno .java\n```java\n\tpackage util;\n\t\n\timport java.lang.annotation.ElementType;\n\timport java.lang.annotation.Retention;\n\timport java.lang.annotation.RetentionPolicy;\n\timport java.lang.annotation.Target;\n\t/**\n\t * 用于注解表名\n\t * @author LOOK\n\t *\n\t */\n\t@Target(value = ElementType.TYPE)\n\t@Retention(RetentionPolicy.RUNTIME)\n\tpublic @interface TableNameAnno {\n\t\tString value();\n\t}\n```\n### TableFieldAnno \n\n```java\n\tpackage util;\n\n\timport java.lang.annotation.ElementType;\n\timport java.lang.annotation.Retention;\n\timport java.lang.annotation.RetentionPolicy;\n\timport java.lang.annotation.Target;\n\n\t/**\n\t * 用于注解类字段的属性\n\t * \n\t * @author LOOK\n\t * \n\t */\n\t@Target(value = ElementType.FIELD)\n\t@Retention(RetentionPolicy.RUNTIME)\n\tpublic @interface TableFieldAnno {\n\tString field();// 字段名称\n\n\tboolean primaryKey() default false;// 是否是主键\n\n\tString type() default \"varchar\";// 类型\n\n\tint length() default 30;\n\n\tboolean defaultNull() default true;\n\t}\n```\n\n### TestSqlByAnno.java\n```java\n\tpackage util;\n\n\timport java.lang.reflect.Field;\n\n\t@SuppressWarnings(\"all\")\n\tpublic class TestSqlByAnno {\n\tpublic static void main(String[] args) {\n\t\tcreateSql(\"User\");\n\t}\n\n\t/**\n\t * 用于动态生成建表语句\n\t * \n\t * @param type\n\t */\n\tpublic static void createSql(String type) {// 传入类名\n\t\ttry {\n\t\t\tClass clazz = Class.forName(\"bean.\" + type);\n\t\t\t// 获取类的注解\n\t\t\tTableNameAnno tableNameAnno = (TableNameAnno) clazz\n\t\t\t\t\t.getAnnotation(TableNameAnno.class);\n\t\t\tSystem.out.println(\"create table \" + tableNameAnno.value() + \"(\");\n\t\t\t// 获取所有属性的注解，输出属性注解的属性\n\t\t\tField[] fields = clazz.getDeclaredFields();\n\t\t\tTableFieldAnno tableFieldAnno=null;\n\t\t\tfor (int i = 0; i < fields.length; i++) {\n\t\t\t\t//获取每个属性的注解\n\t\t\t\ttableFieldAnno = fields[i]\n\t\t\t\t\t\t.getAnnotation(TableFieldAnno.class);\n\t\t\t\t//输出每个注解的属性\n\t\t\t\tSystem.out.print(tableFieldAnno.field() + \" \"\n\t\t\t\t\t\t+ tableFieldAnno.type() + \" (\"\n\t\t\t\t\t\t+ tableFieldAnno.length() + \") \");\n\t\t\t\tif (tableFieldAnno.primaryKey()) {// 主键\n\t\t\t\t\tSystem.out.println(\"primary key,\");\n\t\t\t\t} else if (i == fields.length - 1) {// 最后一行\n\t\t\t\t\tSystem.out.println(\"not null \");\n\t\t\t\t} else {// 其他行\n\t\t\t\t\tSystem.out.println(\"not null, \");\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tSystem.out.println(\") default charset='utf8';\");\n\t\t} catch (ClassNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n\t}\n```\n","source":"_posts/反射机制动态生成sql语句.md","raw":"title: 反射机制动态生成sql语句\ncategories: Java\ntags: java\ndate: 2017-2-17 12:40\n---\n本例用于熟悉反射机制，代码很简单，水平有限，个人的一些理解都加在注释中了。\n<!-- more -->\n## bean包下\n### 1.User.java\n\n\n```java\n\t package bean;\n    import util.TableFieldAnno;\n    import util.TableNameAnno;\n\n    /**\n     * 所有用户信息\n     * \n     * @author LOOK\n     * \n     */\n\t@TableNameAnno(\"user\")\n\tpublic class User {\n\t\t@TableFieldAnno(field = \"user_id\", primaryKey = true, defaultNull = false)\n\t\tprivate String user_id;// 学号\n\t\t@TableFieldAnno(field = \"user_name\")\n\t\tprivate String user_name;// 姓名\n\t\t@TableFieldAnno(field = \"user_tel\")\n\t\tprivate String user_tel;// 联系方式\n\t\t@TableFieldAnno(field = \"user_type\")\n\t\tprivate String user_type;// 身份类型\n\t\t@TableFieldAnno(field = \"user_pw\")\n\t\tprivate String user_pw;// 密码\n\t\t@TableFieldAnno(field = \"user_isGraduate\")\n\t\tprivate Boolean isGraduate;// 是否毕业\n\n\tpublic String getUser_id() {\n\t\treturn user_id;\n\t}\n\n\tpublic void setUser_id(String user_id) {\n\t\tthis.user_id = user_id;\n\t}\n\n\tpublic String getUser_name() {\n\t\treturn user_name;\n\t}\n\n\tpublic void setUser_name(String user_name) {\n\t\tthis.user_name = user_name;\n\t}\n\n\tpublic String getUser_tel() {\n\t\treturn user_tel;\n\t}\n\n\tpublic void setUser_tel(String user_tel) {\n\t\tthis.user_tel = user_tel;\n\t}\n\n\tpublic String getUser_type() {\n\t\treturn user_type;\n\t}\n\n\tpublic void setUser_type(String user_type) {\n\t\tthis.user_type = user_type;\n\t}\n\n\tpublic String getUser_pw() {\n\t\treturn user_pw;\n\t}\n\n\tpublic void setUser_pw(String user_pw) {\n\t\tthis.user_pw = user_pw;\n\t}\n\n\tpublic Boolean getIsGraduate() {\n\t\treturn isGraduate;\n\t}\n\n\tpublic void setIsGraduate(Boolean isGraduate) {\n\t\tthis.isGraduate = isGraduate;\n\t}\n\n\t}\n```\n\n## util包下\n### TableNameAnno .java\n```java\n\tpackage util;\n\t\n\timport java.lang.annotation.ElementType;\n\timport java.lang.annotation.Retention;\n\timport java.lang.annotation.RetentionPolicy;\n\timport java.lang.annotation.Target;\n\t/**\n\t * 用于注解表名\n\t * @author LOOK\n\t *\n\t */\n\t@Target(value = ElementType.TYPE)\n\t@Retention(RetentionPolicy.RUNTIME)\n\tpublic @interface TableNameAnno {\n\t\tString value();\n\t}\n```\n### TableFieldAnno \n\n```java\n\tpackage util;\n\n\timport java.lang.annotation.ElementType;\n\timport java.lang.annotation.Retention;\n\timport java.lang.annotation.RetentionPolicy;\n\timport java.lang.annotation.Target;\n\n\t/**\n\t * 用于注解类字段的属性\n\t * \n\t * @author LOOK\n\t * \n\t */\n\t@Target(value = ElementType.FIELD)\n\t@Retention(RetentionPolicy.RUNTIME)\n\tpublic @interface TableFieldAnno {\n\tString field();// 字段名称\n\n\tboolean primaryKey() default false;// 是否是主键\n\n\tString type() default \"varchar\";// 类型\n\n\tint length() default 30;\n\n\tboolean defaultNull() default true;\n\t}\n```\n\n### TestSqlByAnno.java\n```java\n\tpackage util;\n\n\timport java.lang.reflect.Field;\n\n\t@SuppressWarnings(\"all\")\n\tpublic class TestSqlByAnno {\n\tpublic static void main(String[] args) {\n\t\tcreateSql(\"User\");\n\t}\n\n\t/**\n\t * 用于动态生成建表语句\n\t * \n\t * @param type\n\t */\n\tpublic static void createSql(String type) {// 传入类名\n\t\ttry {\n\t\t\tClass clazz = Class.forName(\"bean.\" + type);\n\t\t\t// 获取类的注解\n\t\t\tTableNameAnno tableNameAnno = (TableNameAnno) clazz\n\t\t\t\t\t.getAnnotation(TableNameAnno.class);\n\t\t\tSystem.out.println(\"create table \" + tableNameAnno.value() + \"(\");\n\t\t\t// 获取所有属性的注解，输出属性注解的属性\n\t\t\tField[] fields = clazz.getDeclaredFields();\n\t\t\tTableFieldAnno tableFieldAnno=null;\n\t\t\tfor (int i = 0; i < fields.length; i++) {\n\t\t\t\t//获取每个属性的注解\n\t\t\t\ttableFieldAnno = fields[i]\n\t\t\t\t\t\t.getAnnotation(TableFieldAnno.class);\n\t\t\t\t//输出每个注解的属性\n\t\t\t\tSystem.out.print(tableFieldAnno.field() + \" \"\n\t\t\t\t\t\t+ tableFieldAnno.type() + \" (\"\n\t\t\t\t\t\t+ tableFieldAnno.length() + \") \");\n\t\t\t\tif (tableFieldAnno.primaryKey()) {// 主键\n\t\t\t\t\tSystem.out.println(\"primary key,\");\n\t\t\t\t} else if (i == fields.length - 1) {// 最后一行\n\t\t\t\t\tSystem.out.println(\"not null \");\n\t\t\t\t} else {// 其他行\n\t\t\t\t\tSystem.out.println(\"not null, \");\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tSystem.out.println(\") default charset='utf8';\");\n\t\t} catch (ClassNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n\t}\n```\n","slug":"反射机制动态生成sql语句","published":1,"updated":"2017-04-22T01:29:33.967Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1u7zppo000r99pvzte99usb","content":"<p>本例用于熟悉反射机制，代码很简单，水平有限，个人的一些理解都加在注释中了。<br><a id=\"more\"></a></p>\n<h2 id=\"bean包下\"><a href=\"#bean包下\" class=\"headerlink\" title=\"bean包下\"></a>bean包下</h2><h3 id=\"1-User-java\"><a href=\"#1-User-java\" class=\"headerlink\" title=\"1.User.java\"></a>1.User.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"keyword\">package</span> bean;</div><div class=\"line\">   <span class=\"keyword\">import</span> util.TableFieldAnno;</div><div class=\"line\">   <span class=\"keyword\">import</span> util.TableNameAnno;</div><div class=\"line\"></div><div class=\"line\">   <span class=\"comment\">/**</span></div><div class=\"line\">    * 所有用户信息</div><div class=\"line\">    * </div><div class=\"line\">    * <span class=\"doctag\">@author</span> LOOK</div><div class=\"line\">    * </div><div class=\"line\">    */</div><div class=\"line\"><span class=\"meta\">@TableNameAnno</span>(<span class=\"string\">\"user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</div><div class=\"line\">\t<span class=\"meta\">@TableFieldAnno</span>(field = <span class=\"string\">\"user_id\"</span>, primaryKey = <span class=\"keyword\">true</span>, defaultNull = <span class=\"keyword\">false</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String user_id;<span class=\"comment\">// 学号</span></div><div class=\"line\">\t<span class=\"meta\">@TableFieldAnno</span>(field = <span class=\"string\">\"user_name\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String user_name;<span class=\"comment\">// 姓名</span></div><div class=\"line\">\t<span class=\"meta\">@TableFieldAnno</span>(field = <span class=\"string\">\"user_tel\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String user_tel;<span class=\"comment\">// 联系方式</span></div><div class=\"line\">\t<span class=\"meta\">@TableFieldAnno</span>(field = <span class=\"string\">\"user_type\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String user_type;<span class=\"comment\">// 身份类型</span></div><div class=\"line\">\t<span class=\"meta\">@TableFieldAnno</span>(field = <span class=\"string\">\"user_pw\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String user_pw;<span class=\"comment\">// 密码</span></div><div class=\"line\">\t<span class=\"meta\">@TableFieldAnno</span>(field = <span class=\"string\">\"user_isGraduate\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> Boolean isGraduate;<span class=\"comment\">// 是否毕业</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUser_id</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> user_id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUser_id</span><span class=\"params\">(String user_id)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">this</span>.user_id = user_id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUser_name</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> user_name;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUser_name</span><span class=\"params\">(String user_name)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">this</span>.user_name = user_name;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUser_tel</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> user_tel;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUser_tel</span><span class=\"params\">(String user_tel)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">this</span>.user_tel = user_tel;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUser_type</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> user_type;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUser_type</span><span class=\"params\">(String user_type)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">this</span>.user_type = user_type;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUser_pw</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> user_pw;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUser_pw</span><span class=\"params\">(String user_pw)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">this</span>.user_pw = user_pw;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Boolean <span class=\"title\">getIsGraduate</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> isGraduate;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setIsGraduate</span><span class=\"params\">(Boolean isGraduate)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">this</span>.isGraduate = isGraduate;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"util包下\"><a href=\"#util包下\" class=\"headerlink\" title=\"util包下\"></a>util包下</h2><h3 id=\"TableNameAnno-java\"><a href=\"#TableNameAnno-java\" class=\"headerlink\" title=\"TableNameAnno .java\"></a>TableNameAnno .java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> util;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.ElementType;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Retention;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.RetentionPolicy;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Target;</div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 用于注解表名</div><div class=\"line\"> * <span class=\"doctag\">@author</span> LOOK</div><div class=\"line\"> *</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@Target</span>(value = ElementType.TYPE)</div><div class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> TableNameAnno &#123;</div><div class=\"line\">\t<span class=\"function\">String <span class=\"title\">value</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"TableFieldAnno\"><a href=\"#TableFieldAnno\" class=\"headerlink\" title=\"TableFieldAnno\"></a>TableFieldAnno</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> util;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.ElementType;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Retention;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.RetentionPolicy;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Target;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 用于注解类字段的属性</div><div class=\"line\"> * </div><div class=\"line\"> * <span class=\"doctag\">@author</span> LOOK</div><div class=\"line\"> * </div><div class=\"line\"> */</div><div class=\"line\"><span class=\"meta\">@Target</span>(value = ElementType.FIELD)</div><div class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> TableFieldAnno &#123;</div><div class=\"line\"><span class=\"function\">String <span class=\"title\">field</span><span class=\"params\">()</span></span>;<span class=\"comment\">// 字段名称</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">primaryKey</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"keyword\">false</span></span>;<span class=\"comment\">// 是否是主键</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">String <span class=\"title\">type</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> \"varchar\"</span>;<span class=\"comment\">// 类型</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">length</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> 30</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">defaultNull</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"keyword\">true</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"TestSqlByAnno-java\"><a href=\"#TestSqlByAnno-java\" class=\"headerlink\" title=\"TestSqlByAnno.java\"></a>TestSqlByAnno.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> util;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"all\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestSqlByAnno</span> </span>&#123;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\tcreateSql(<span class=\"string\">\"User\"</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * 用于动态生成建表语句</div><div class=\"line\"> * </div><div class=\"line\"> * <span class=\"doctag\">@param</span> type</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">createSql</span><span class=\"params\">(String type)</span> </span>&#123;<span class=\"comment\">// 传入类名</span></div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\tClass clazz = Class.forName(<span class=\"string\">\"bean.\"</span> + type);</div><div class=\"line\">\t\t<span class=\"comment\">// 获取类的注解</span></div><div class=\"line\">\t\tTableNameAnno tableNameAnno = (TableNameAnno) clazz</div><div class=\"line\">\t\t\t\t.getAnnotation(TableNameAnno.class);</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"create table \"</span> + tableNameAnno.value() + <span class=\"string\">\"(\"</span>);</div><div class=\"line\">\t\t<span class=\"comment\">// 获取所有属性的注解，输出属性注解的属性</span></div><div class=\"line\">\t\tField[] fields = clazz.getDeclaredFields();</div><div class=\"line\">\t\tTableFieldAnno tableFieldAnno=<span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; fields.length; i++) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">//获取每个属性的注解</span></div><div class=\"line\">\t\t\ttableFieldAnno = fields[i]</div><div class=\"line\">\t\t\t\t\t.getAnnotation(TableFieldAnno.class);</div><div class=\"line\">\t\t\t<span class=\"comment\">//输出每个注解的属性</span></div><div class=\"line\">\t\t\tSystem.out.print(tableFieldAnno.field() + <span class=\"string\">\" \"</span></div><div class=\"line\">\t\t\t\t\t+ tableFieldAnno.type() + <span class=\"string\">\" (\"</span></div><div class=\"line\">\t\t\t\t\t+ tableFieldAnno.length() + <span class=\"string\">\") \"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (tableFieldAnno.primaryKey()) &#123;<span class=\"comment\">// 主键</span></div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"primary key,\"</span>);</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (i == fields.length - <span class=\"number\">1</span>) &#123;<span class=\"comment\">// 最后一行</span></div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"not null \"</span>);</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">// 其他行</span></div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"not null, \"</span>);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\") default charset='utf8';\"</span>);</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>本例用于熟悉反射机制，代码很简单，水平有限，个人的一些理解都加在注释中了。<br>","more":"</p>\n<h2 id=\"bean包下\"><a href=\"#bean包下\" class=\"headerlink\" title=\"bean包下\"></a>bean包下</h2><h3 id=\"1-User-java\"><a href=\"#1-User-java\" class=\"headerlink\" title=\"1.User.java\"></a>1.User.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"keyword\">package</span> bean;</div><div class=\"line\">   <span class=\"keyword\">import</span> util.TableFieldAnno;</div><div class=\"line\">   <span class=\"keyword\">import</span> util.TableNameAnno;</div><div class=\"line\"></div><div class=\"line\">   <span class=\"comment\">/**</div><div class=\"line\">    * 所有用户信息</div><div class=\"line\">    * </div><div class=\"line\">    * <span class=\"doctag\">@author</span> LOOK</div><div class=\"line\">    * </div><div class=\"line\">    */</span></div><div class=\"line\"><span class=\"meta\">@TableNameAnno</span>(<span class=\"string\">\"user\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</div><div class=\"line\">\t<span class=\"meta\">@TableFieldAnno</span>(field = <span class=\"string\">\"user_id\"</span>, primaryKey = <span class=\"keyword\">true</span>, defaultNull = <span class=\"keyword\">false</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String user_id;<span class=\"comment\">// 学号</span></div><div class=\"line\">\t<span class=\"meta\">@TableFieldAnno</span>(field = <span class=\"string\">\"user_name\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String user_name;<span class=\"comment\">// 姓名</span></div><div class=\"line\">\t<span class=\"meta\">@TableFieldAnno</span>(field = <span class=\"string\">\"user_tel\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String user_tel;<span class=\"comment\">// 联系方式</span></div><div class=\"line\">\t<span class=\"meta\">@TableFieldAnno</span>(field = <span class=\"string\">\"user_type\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String user_type;<span class=\"comment\">// 身份类型</span></div><div class=\"line\">\t<span class=\"meta\">@TableFieldAnno</span>(field = <span class=\"string\">\"user_pw\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> String user_pw;<span class=\"comment\">// 密码</span></div><div class=\"line\">\t<span class=\"meta\">@TableFieldAnno</span>(field = <span class=\"string\">\"user_isGraduate\"</span>)</div><div class=\"line\">\t<span class=\"keyword\">private</span> Boolean isGraduate;<span class=\"comment\">// 是否毕业</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUser_id</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> user_id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUser_id</span><span class=\"params\">(String user_id)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">this</span>.user_id = user_id;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUser_name</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> user_name;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUser_name</span><span class=\"params\">(String user_name)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">this</span>.user_name = user_name;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUser_tel</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> user_tel;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUser_tel</span><span class=\"params\">(String user_tel)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">this</span>.user_tel = user_tel;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUser_type</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> user_type;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUser_type</span><span class=\"params\">(String user_type)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">this</span>.user_type = user_type;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getUser_pw</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> user_pw;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setUser_pw</span><span class=\"params\">(String user_pw)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">this</span>.user_pw = user_pw;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Boolean <span class=\"title\">getIsGraduate</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">return</span> isGraduate;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setIsGraduate</span><span class=\"params\">(Boolean isGraduate)</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">this</span>.isGraduate = isGraduate;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"util包下\"><a href=\"#util包下\" class=\"headerlink\" title=\"util包下\"></a>util包下</h2><h3 id=\"TableNameAnno-java\"><a href=\"#TableNameAnno-java\" class=\"headerlink\" title=\"TableNameAnno .java\"></a>TableNameAnno .java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> util;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.ElementType;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Retention;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.RetentionPolicy;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Target;</div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 用于注解表名</div><div class=\"line\"> * <span class=\"doctag\">@author</span> LOOK</div><div class=\"line\"> *</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"meta\">@Target</span>(value = ElementType.TYPE)</div><div class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> TableNameAnno &#123;</div><div class=\"line\">\t<span class=\"function\">String <span class=\"title\">value</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"TableFieldAnno\"><a href=\"#TableFieldAnno\" class=\"headerlink\" title=\"TableFieldAnno\"></a>TableFieldAnno</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> util;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.ElementType;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Retention;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.RetentionPolicy;</div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.annotation.Target;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 用于注解类字段的属性</div><div class=\"line\"> * </div><div class=\"line\"> * <span class=\"doctag\">@author</span> LOOK</div><div class=\"line\"> * </div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"meta\">@Target</span>(value = ElementType.FIELD)</div><div class=\"line\"><span class=\"meta\">@Retention</span>(RetentionPolicy.RUNTIME)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> TableFieldAnno &#123;</div><div class=\"line\"><span class=\"function\">String <span class=\"title\">field</span><span class=\"params\">()</span></span>;<span class=\"comment\">// 字段名称</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">primaryKey</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"keyword\">false</span></span>;<span class=\"comment\">// 是否是主键</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">String <span class=\"title\">type</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> \"varchar\"</span>;<span class=\"comment\">// 类型</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">length</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> 30</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">defaultNull</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"keyword\">true</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"TestSqlByAnno-java\"><a href=\"#TestSqlByAnno-java\" class=\"headerlink\" title=\"TestSqlByAnno.java\"></a>TestSqlByAnno.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> util;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"all\"</span>)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestSqlByAnno</span> </span>&#123;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</div><div class=\"line\">\tcreateSql(<span class=\"string\">\"User\"</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * 用于动态生成建表语句</div><div class=\"line\"> * </div><div class=\"line\"> * <span class=\"doctag\">@param</span> type</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">createSql</span><span class=\"params\">(String type)</span> </span>&#123;<span class=\"comment\">// 传入类名</span></div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\tClass clazz = Class.forName(<span class=\"string\">\"bean.\"</span> + type);</div><div class=\"line\">\t\t<span class=\"comment\">// 获取类的注解</span></div><div class=\"line\">\t\tTableNameAnno tableNameAnno = (TableNameAnno) clazz</div><div class=\"line\">\t\t\t\t.getAnnotation(TableNameAnno.class);</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"create table \"</span> + tableNameAnno.value() + <span class=\"string\">\"(\"</span>);</div><div class=\"line\">\t\t<span class=\"comment\">// 获取所有属性的注解，输出属性注解的属性</span></div><div class=\"line\">\t\tField[] fields = clazz.getDeclaredFields();</div><div class=\"line\">\t\tTableFieldAnno tableFieldAnno=<span class=\"keyword\">null</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; fields.length; i++) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">//获取每个属性的注解</span></div><div class=\"line\">\t\t\ttableFieldAnno = fields[i]</div><div class=\"line\">\t\t\t\t\t.getAnnotation(TableFieldAnno.class);</div><div class=\"line\">\t\t\t<span class=\"comment\">//输出每个注解的属性</span></div><div class=\"line\">\t\t\tSystem.out.print(tableFieldAnno.field() + <span class=\"string\">\" \"</span></div><div class=\"line\">\t\t\t\t\t+ tableFieldAnno.type() + <span class=\"string\">\" (\"</span></div><div class=\"line\">\t\t\t\t\t+ tableFieldAnno.length() + <span class=\"string\">\") \"</span>);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (tableFieldAnno.primaryKey()) &#123;<span class=\"comment\">// 主键</span></div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"primary key,\"</span>);</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (i == fields.length - <span class=\"number\">1</span>) &#123;<span class=\"comment\">// 最后一行</span></div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"not null \"</span>);</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">// 其他行</span></div><div class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"not null, \"</span>);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tSystem.out.println(<span class=\"string\">\") default charset='utf8';\"</span>);</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</div><div class=\"line\">\t\te.printStackTrace();</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"系统安装之路一准备篇","date":"2017-01-02T08:30:00.000Z","_content":"\n大一暑假，终于拥有了自己的第一台笔记本电脑。虽然价格不高，配置不高，但是作为第一台，还是把它当作宝贝一样供着，不敢乱动。直到半年后系统出现蓝屏故障，无奈找人做了系统。然而我并不喜欢总是依靠别人，从此以后，我的系统安装之路开启了。\n啰嗦了这么多，下面正式开始介绍。\n<!-- more -->\n电脑能否开机，决定了使用哪种方法来安装系统更为合适。现在装系统并不复杂，很多傻瓜式一键装机系统镜像越来越受欢迎。\n\n镜像分为两种，文件后缀分别为\"iso\"和[\"](http://baike.baidu.com/view/704362.htm)gho\"。\n\n关于系统的选择。首先你要知道自己的电脑是多少位的处理器。可以在“我的电脑”图标上单击右键，选择属性，然后单击设备管理器，点击处理器。显示X64就是64位的，而X86则是32位的。根据处理器选择相应的系统镜像，才能发挥电脑的最大性能。[![系统安装之路一准备篇](http://upload-images.jianshu.io/upload_images/1837782-74a812b54f4ff8ba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)](http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1lm&url=http://album.sina.com.cn/pic/006dBXhxgy70aa0jDNk36)\n\n下载镜像。根据系统的不同，镜像的大小各不相同。一般XP镜像八九百兆，win7镜像2-3G，win8.1镜像3-4G。\n\nC盘分区大小。我的硬盘比较大，所以直接划出了100G给C盘，无论装什么系统都绰绰有余。\n\n必备软件：驱动人生网卡版，因为有的系统装完后连不上无线网，这时就需要安装此软件来填补网卡的空白。\n\n如果电脑可以正常启动，可以直接选取简单的安装方式。如果不能正常启动的话，就需要借助U盘启动盘进入pe模式进行安装或者使用系统安装光盘（至今没用过）。\n\n**注：相关下载地址**\n[1. iso镜像](http://www.msdn.hk/)\n[2. gho镜像](http://www.ghostwin7win8.com/)\n[3. 驱动人生网卡版](http://xiazai.zol.com.cn/detail/38/375956.shtml)\n\n","source":"_posts/系统安装之路一准备篇.md","raw":"title: 系统安装之路一准备篇\ncategories: other\ntags: hardware\ndate: 2017-1-2 16:30\n---\n\n大一暑假，终于拥有了自己的第一台笔记本电脑。虽然价格不高，配置不高，但是作为第一台，还是把它当作宝贝一样供着，不敢乱动。直到半年后系统出现蓝屏故障，无奈找人做了系统。然而我并不喜欢总是依靠别人，从此以后，我的系统安装之路开启了。\n啰嗦了这么多，下面正式开始介绍。\n<!-- more -->\n电脑能否开机，决定了使用哪种方法来安装系统更为合适。现在装系统并不复杂，很多傻瓜式一键装机系统镜像越来越受欢迎。\n\n镜像分为两种，文件后缀分别为\"iso\"和[\"](http://baike.baidu.com/view/704362.htm)gho\"。\n\n关于系统的选择。首先你要知道自己的电脑是多少位的处理器。可以在“我的电脑”图标上单击右键，选择属性，然后单击设备管理器，点击处理器。显示X64就是64位的，而X86则是32位的。根据处理器选择相应的系统镜像，才能发挥电脑的最大性能。[![系统安装之路一准备篇](http://upload-images.jianshu.io/upload_images/1837782-74a812b54f4ff8ba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)](http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1lm&url=http://album.sina.com.cn/pic/006dBXhxgy70aa0jDNk36)\n\n下载镜像。根据系统的不同，镜像的大小各不相同。一般XP镜像八九百兆，win7镜像2-3G，win8.1镜像3-4G。\n\nC盘分区大小。我的硬盘比较大，所以直接划出了100G给C盘，无论装什么系统都绰绰有余。\n\n必备软件：驱动人生网卡版，因为有的系统装完后连不上无线网，这时就需要安装此软件来填补网卡的空白。\n\n如果电脑可以正常启动，可以直接选取简单的安装方式。如果不能正常启动的话，就需要借助U盘启动盘进入pe模式进行安装或者使用系统安装光盘（至今没用过）。\n\n**注：相关下载地址**\n[1. iso镜像](http://www.msdn.hk/)\n[2. gho镜像](http://www.ghostwin7win8.com/)\n[3. 驱动人生网卡版](http://xiazai.zol.com.cn/detail/38/375956.shtml)\n\n","slug":"系统安装之路一准备篇","published":1,"updated":"2017-04-22T01:33:11.491Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1u7zppv000u99pvzxst9jjc","content":"<p>大一暑假，终于拥有了自己的第一台笔记本电脑。虽然价格不高，配置不高，但是作为第一台，还是把它当作宝贝一样供着，不敢乱动。直到半年后系统出现蓝屏故障，无奈找人做了系统。然而我并不喜欢总是依靠别人，从此以后，我的系统安装之路开启了。<br>啰嗦了这么多，下面正式开始介绍。<br><a id=\"more\"></a><br>电脑能否开机，决定了使用哪种方法来安装系统更为合适。现在装系统并不复杂，很多傻瓜式一键装机系统镜像越来越受欢迎。</p>\n<p>镜像分为两种，文件后缀分别为”iso”和<a href=\"http://baike.baidu.com/view/704362.htm\" target=\"_blank\" rel=\"external\">“</a>gho”。</p>\n<p>关于系统的选择。首先你要知道自己的电脑是多少位的处理器。可以在“我的电脑”图标上单击右键，选择属性，然后单击设备管理器，点击处理器。显示X64就是64位的，而X86则是32位的。根据处理器选择相应的系统镜像，才能发挥电脑的最大性能。<a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1lm&amp;url=http://album.sina.com.cn/pic/006dBXhxgy70aa0jDNk36\" target=\"_blank\" rel=\"external\"><img src=\"http://upload-images.jianshu.io/upload_images/1837782-74a812b54f4ff8ba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"系统安装之路一准备篇\"></a></p>\n<p>下载镜像。根据系统的不同，镜像的大小各不相同。一般XP镜像八九百兆，win7镜像2-3G，win8.1镜像3-4G。</p>\n<p>C盘分区大小。我的硬盘比较大，所以直接划出了100G给C盘，无论装什么系统都绰绰有余。</p>\n<p>必备软件：驱动人生网卡版，因为有的系统装完后连不上无线网，这时就需要安装此软件来填补网卡的空白。</p>\n<p>如果电脑可以正常启动，可以直接选取简单的安装方式。如果不能正常启动的话，就需要借助U盘启动盘进入pe模式进行安装或者使用系统安装光盘（至今没用过）。</p>\n<p><strong>注：相关下载地址</strong><br><a href=\"http://www.msdn.hk/\" target=\"_blank\" rel=\"external\">1. iso镜像</a><br><a href=\"http://www.ghostwin7win8.com/\" target=\"_blank\" rel=\"external\">2. gho镜像</a><br><a href=\"http://xiazai.zol.com.cn/detail/38/375956.shtml\" target=\"_blank\" rel=\"external\">3. 驱动人生网卡版</a></p>\n","site":{"data":{}},"excerpt":"<p>大一暑假，终于拥有了自己的第一台笔记本电脑。虽然价格不高，配置不高，但是作为第一台，还是把它当作宝贝一样供着，不敢乱动。直到半年后系统出现蓝屏故障，无奈找人做了系统。然而我并不喜欢总是依靠别人，从此以后，我的系统安装之路开启了。<br>啰嗦了这么多，下面正式开始介绍。<br>","more":"<br>电脑能否开机，决定了使用哪种方法来安装系统更为合适。现在装系统并不复杂，很多傻瓜式一键装机系统镜像越来越受欢迎。</p>\n<p>镜像分为两种，文件后缀分别为”iso”和<a href=\"http://baike.baidu.com/view/704362.htm\">“</a>gho”。</p>\n<p>关于系统的选择。首先你要知道自己的电脑是多少位的处理器。可以在“我的电脑”图标上单击右键，选择属性，然后单击设备管理器，点击处理器。显示X64就是64位的，而X86则是32位的。根据处理器选择相应的系统镜像，才能发挥电脑的最大性能。<a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1lm&amp;url=http://album.sina.com.cn/pic/006dBXhxgy70aa0jDNk36\"><img src=\"http://upload-images.jianshu.io/upload_images/1837782-74a812b54f4ff8ba?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"系统安装之路一准备篇\"></a></p>\n<p>下载镜像。根据系统的不同，镜像的大小各不相同。一般XP镜像八九百兆，win7镜像2-3G，win8.1镜像3-4G。</p>\n<p>C盘分区大小。我的硬盘比较大，所以直接划出了100G给C盘，无论装什么系统都绰绰有余。</p>\n<p>必备软件：驱动人生网卡版，因为有的系统装完后连不上无线网，这时就需要安装此软件来填补网卡的空白。</p>\n<p>如果电脑可以正常启动，可以直接选取简单的安装方式。如果不能正常启动的话，就需要借助U盘启动盘进入pe模式进行安装或者使用系统安装光盘（至今没用过）。</p>\n<p><strong>注：相关下载地址</strong><br><a href=\"http://www.msdn.hk/\">1. iso镜像</a><br><a href=\"http://www.ghostwin7win8.com/\">2. gho镜像</a><br><a href=\"http://xiazai.zol.com.cn/detail/38/375956.shtml\">3. 驱动人生网卡版</a></p>"},{"title":"系统安装之路三电脑无法启动","date":"2017-01-03T06:00:00.000Z","_content":"\n相信很多人和我一样，只要电脑有界面就不担心，然而电脑黑屏或者蓝屏（图1）了，系统进不去了，此时内心就开始忧虑不安。从现在开始，你可以和我一样放心了（前提是电脑硬件没有问题）。\n\n![图1.jpg](http://upload-images.jianshu.io/upload_images/1837782-fc5bb734986ab979.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n<!-- more -->\n  # 一.U盘启动盘制作\n俗话说，工欲善其事必先利其器，我们需要一个大于等于2G的U盘用来做系统启动盘，必要时，就需要借助这个U盘来帮助我们进入硬盘，重装系统，提取文件，清楚开机密码，重置分区等等。首先我们来打造一个专属的U盘启动盘。网上有很多出名的制作启动盘的软件，这里，我用的是U大师（图2）。\n\n![图2.png](http://upload-images.jianshu.io/upload_images/1837782-e88d042c32d6eb47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n这是我之前下载的，现在版本又更新了，不过，大同小异，没有影响。双击下载好的软件，安装（图3）。\n\n![图3.jpg](http://upload-images.jianshu.io/upload_images/1837782-911f2a5f112ea928.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n![图4.png](http://upload-images.jianshu.io/upload_images/1837782-4d922cc8414fc524.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n这时插上U盘，U大师就会自动识别。我建议买一个质量好的正品U盘做启动盘，以便长久稳定使用。专门的U盘，不要放其他东西，待U盘识别出后，点击中间的大按钮（图4），一键制作USB启动盘，提示格式化后出现进度条。当进度条跑到100%时，恭喜你，专属利器打造完毕，从此你就可以用它来对电脑进行操作了。\n\n## 二.系统的安装\n\nU盘启动实际是进入windows PE模式(Windows Preinstallation Environment)，即安装环境。系统是存储于硬盘里的，而新买的硬盘是一片空白的；系统出现故障，无法正常启动，这是都需要进入pe模式进行处理。因此，你可以把U盘启动盘看作是一个便携的简化系统，这个系统的功能不够多，仅仅能作为紧急情况的应急工具。\n\n下面开始具体操作。\n## 1、重启\n将电脑重启（原来是关机的话直接开机），然后一直按住F11听到电脑“嘀”的一声，进入BIOS设置界面（不同机型进入方式不一样，我是联想M4450，请根据自己机型选按不同按键。直接百度电脑型号+进入BIOS快捷键），如图5.\n\n![图5.jpg](http://upload-images.jianshu.io/upload_images/1837782-55e4ba3fcf3d20c7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n# 2、更改启动设置\n根据屏幕下方提示按上下键选择Network Boot,按Enter（这时鼠标是不起作用的）。\n\n![图6.jpg](http://upload-images.jianshu.io/upload_images/1837782-8238a978122161aa.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n选择USB HDD开头的自己的U盘（我的是金士顿的,Kingstom DataTraveler 2.0），按+/-将它挪到第一位（图6），按Enter确认，按F10保存并退出，自动进入pe模式。\n\n# 3.进入pe模式\n![图7.jpg](http://upload-images.jianshu.io/upload_images/1837782-41a07bd2df5beaee.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n来到这一步就接近成功了，选择第一个或者第二个都行，这里我是默认，让它选择第一个（图7）。\n\n# 4、安装系统\n![图8.jpg](http://upload-images.jianshu.io/upload_images/1837782-459d25d875c52b3d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n待完全开机后，自动会弹出这个界面。也就是桌面上的U大师一键快速装机（图8）。前面一篇也提到过，将系统镜像放到除c盘外的其他盘符下，例如直接放到D盘下，这里它会自动找出来。如果你有多个镜像，就需要自己去选择，点浏览选择相应的镜像，点击需要还原的盘符（C盘），然后开始即可。\n\n![图9.jpg](http://upload-images.jianshu.io/upload_images/1837782-24238af48c7d5aca.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n提示将会清除C盘，正和我意，选择“是”（图9），还原，也就是重装。\n\n![图10.jpg](http://upload-images.jianshu.io/upload_images/1837782-fa800af664ad4882.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n这是一个经典的界面，无论用哪种方式安装或是还原Windows系统都会见到它。看到它出现，就说明系统在安装中了。等到进度条跑到100%时，默认15秒后重启，这时要拔下U盘。整个安装过程因机而异，只要不是太老的机器，半个小时都可以搞定。\n\n拔下U盘，电脑正常启动，坐在电脑旁，按照提示进行相应的操作就行了。后续步骤只要识字基本没什么难事了。对了，如果后续让输入序列号的话，可以选择跳过。无法跳过的话就百度一个序列号，网上很多的。\n\n**补充：**\n\n1.电脑设置U盘启动时，可以直接按F12快捷键从U盘启动，即可直接进入图7后续步骤。\n2.有些系统安装后需要激活。是否需要激活可以通过在“我的电脑”上右键选择属性查看（图11）。\n\n![图11.jpg](http://upload-images.jianshu.io/upload_images/1837782-fd077d71b1bb5abf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n这里也给出一个激活工具吧：[小马激活](https://share.weiyun.com/b24a1bc8d7cdfdf542c182d2ee20268f),一键激活。\n3.如果安装失败，请检查系统版本是否正确。真的失败了也不用紧张，大不了重新再来一遍，只要不一直重装，对电脑的影响基本可以忽视。\n4.胆大心细，敢于尝试，凡事皆有第一次。\n以上就是我所掌握的全部方法，所有给出的软件都是我用自己电脑试过的，所有步骤都已在我电脑上或者虚拟机里实现过。\n** 姊妹篇：**\n[系统安装之路一准备篇](http://www.jianshu.com/p/0d0e0ba264c9)\n[系统安装之路二电脑能启动](http://www.jianshu.com/p/c20fa668dbbe)\n","source":"_posts/系统安装之路三电脑无法启动.md","raw":"title: 系统安装之路三电脑无法启动\ncategories: other\ntags: hardware\ndate: 2017-1-3 14:00\n---\n\n相信很多人和我一样，只要电脑有界面就不担心，然而电脑黑屏或者蓝屏（图1）了，系统进不去了，此时内心就开始忧虑不安。从现在开始，你可以和我一样放心了（前提是电脑硬件没有问题）。\n\n![图1.jpg](http://upload-images.jianshu.io/upload_images/1837782-fc5bb734986ab979.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n<!-- more -->\n  # 一.U盘启动盘制作\n俗话说，工欲善其事必先利其器，我们需要一个大于等于2G的U盘用来做系统启动盘，必要时，就需要借助这个U盘来帮助我们进入硬盘，重装系统，提取文件，清楚开机密码，重置分区等等。首先我们来打造一个专属的U盘启动盘。网上有很多出名的制作启动盘的软件，这里，我用的是U大师（图2）。\n\n![图2.png](http://upload-images.jianshu.io/upload_images/1837782-e88d042c32d6eb47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n这是我之前下载的，现在版本又更新了，不过，大同小异，没有影响。双击下载好的软件，安装（图3）。\n\n![图3.jpg](http://upload-images.jianshu.io/upload_images/1837782-911f2a5f112ea928.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n![图4.png](http://upload-images.jianshu.io/upload_images/1837782-4d922cc8414fc524.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n这时插上U盘，U大师就会自动识别。我建议买一个质量好的正品U盘做启动盘，以便长久稳定使用。专门的U盘，不要放其他东西，待U盘识别出后，点击中间的大按钮（图4），一键制作USB启动盘，提示格式化后出现进度条。当进度条跑到100%时，恭喜你，专属利器打造完毕，从此你就可以用它来对电脑进行操作了。\n\n## 二.系统的安装\n\nU盘启动实际是进入windows PE模式(Windows Preinstallation Environment)，即安装环境。系统是存储于硬盘里的，而新买的硬盘是一片空白的；系统出现故障，无法正常启动，这是都需要进入pe模式进行处理。因此，你可以把U盘启动盘看作是一个便携的简化系统，这个系统的功能不够多，仅仅能作为紧急情况的应急工具。\n\n下面开始具体操作。\n## 1、重启\n将电脑重启（原来是关机的话直接开机），然后一直按住F11听到电脑“嘀”的一声，进入BIOS设置界面（不同机型进入方式不一样，我是联想M4450，请根据自己机型选按不同按键。直接百度电脑型号+进入BIOS快捷键），如图5.\n\n![图5.jpg](http://upload-images.jianshu.io/upload_images/1837782-55e4ba3fcf3d20c7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n# 2、更改启动设置\n根据屏幕下方提示按上下键选择Network Boot,按Enter（这时鼠标是不起作用的）。\n\n![图6.jpg](http://upload-images.jianshu.io/upload_images/1837782-8238a978122161aa.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n选择USB HDD开头的自己的U盘（我的是金士顿的,Kingstom DataTraveler 2.0），按+/-将它挪到第一位（图6），按Enter确认，按F10保存并退出，自动进入pe模式。\n\n# 3.进入pe模式\n![图7.jpg](http://upload-images.jianshu.io/upload_images/1837782-41a07bd2df5beaee.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n来到这一步就接近成功了，选择第一个或者第二个都行，这里我是默认，让它选择第一个（图7）。\n\n# 4、安装系统\n![图8.jpg](http://upload-images.jianshu.io/upload_images/1837782-459d25d875c52b3d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n待完全开机后，自动会弹出这个界面。也就是桌面上的U大师一键快速装机（图8）。前面一篇也提到过，将系统镜像放到除c盘外的其他盘符下，例如直接放到D盘下，这里它会自动找出来。如果你有多个镜像，就需要自己去选择，点浏览选择相应的镜像，点击需要还原的盘符（C盘），然后开始即可。\n\n![图9.jpg](http://upload-images.jianshu.io/upload_images/1837782-24238af48c7d5aca.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n提示将会清除C盘，正和我意，选择“是”（图9），还原，也就是重装。\n\n![图10.jpg](http://upload-images.jianshu.io/upload_images/1837782-fa800af664ad4882.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n这是一个经典的界面，无论用哪种方式安装或是还原Windows系统都会见到它。看到它出现，就说明系统在安装中了。等到进度条跑到100%时，默认15秒后重启，这时要拔下U盘。整个安装过程因机而异，只要不是太老的机器，半个小时都可以搞定。\n\n拔下U盘，电脑正常启动，坐在电脑旁，按照提示进行相应的操作就行了。后续步骤只要识字基本没什么难事了。对了，如果后续让输入序列号的话，可以选择跳过。无法跳过的话就百度一个序列号，网上很多的。\n\n**补充：**\n\n1.电脑设置U盘启动时，可以直接按F12快捷键从U盘启动，即可直接进入图7后续步骤。\n2.有些系统安装后需要激活。是否需要激活可以通过在“我的电脑”上右键选择属性查看（图11）。\n\n![图11.jpg](http://upload-images.jianshu.io/upload_images/1837782-fd077d71b1bb5abf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n这里也给出一个激活工具吧：[小马激活](https://share.weiyun.com/b24a1bc8d7cdfdf542c182d2ee20268f),一键激活。\n3.如果安装失败，请检查系统版本是否正确。真的失败了也不用紧张，大不了重新再来一遍，只要不一直重装，对电脑的影响基本可以忽视。\n4.胆大心细，敢于尝试，凡事皆有第一次。\n以上就是我所掌握的全部方法，所有给出的软件都是我用自己电脑试过的，所有步骤都已在我电脑上或者虚拟机里实现过。\n** 姊妹篇：**\n[系统安装之路一准备篇](http://www.jianshu.com/p/0d0e0ba264c9)\n[系统安装之路二电脑能启动](http://www.jianshu.com/p/c20fa668dbbe)\n","slug":"系统安装之路三电脑无法启动","published":1,"updated":"2017-04-22T01:38:44.310Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1u7zpqr000x99pvgkx15ad3","content":"<p>相信很多人和我一样，只要电脑有界面就不担心，然而电脑黑屏或者蓝屏（图1）了，系统进不去了，此时内心就开始忧虑不安。从现在开始，你可以和我一样放心了（前提是电脑硬件没有问题）。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-fc5bb734986ab979.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图1.jpg\"></p>\n<a id=\"more\"></a>\n<h1 id=\"一-U盘启动盘制作\"><a href=\"#一-U盘启动盘制作\" class=\"headerlink\" title=\"一.U盘启动盘制作\"></a>一.U盘启动盘制作</h1><p>俗话说，工欲善其事必先利其器，我们需要一个大于等于2G的U盘用来做系统启动盘，必要时，就需要借助这个U盘来帮助我们进入硬盘，重装系统，提取文件，清楚开机密码，重置分区等等。首先我们来打造一个专属的U盘启动盘。网上有很多出名的制作启动盘的软件，这里，我用的是U大师（图2）。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-e88d042c32d6eb47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图2.png\"></p>\n<p>这是我之前下载的，现在版本又更新了，不过，大同小异，没有影响。双击下载好的软件，安装（图3）。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-911f2a5f112ea928.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图3.jpg\"></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-4d922cc8414fc524.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图4.png\"></p>\n<p>这时插上U盘，U大师就会自动识别。我建议买一个质量好的正品U盘做启动盘，以便长久稳定使用。专门的U盘，不要放其他东西，待U盘识别出后，点击中间的大按钮（图4），一键制作USB启动盘，提示格式化后出现进度条。当进度条跑到100%时，恭喜你，专属利器打造完毕，从此你就可以用它来对电脑进行操作了。</p>\n<h2 id=\"二-系统的安装\"><a href=\"#二-系统的安装\" class=\"headerlink\" title=\"二.系统的安装\"></a>二.系统的安装</h2><p>U盘启动实际是进入windows PE模式(Windows Preinstallation Environment)，即安装环境。系统是存储于硬盘里的，而新买的硬盘是一片空白的；系统出现故障，无法正常启动，这是都需要进入pe模式进行处理。因此，你可以把U盘启动盘看作是一个便携的简化系统，这个系统的功能不够多，仅仅能作为紧急情况的应急工具。</p>\n<p>下面开始具体操作。</p>\n<h2 id=\"1、重启\"><a href=\"#1、重启\" class=\"headerlink\" title=\"1、重启\"></a>1、重启</h2><p>将电脑重启（原来是关机的话直接开机），然后一直按住F11听到电脑“嘀”的一声，进入BIOS设置界面（不同机型进入方式不一样，我是联想M4450，请根据自己机型选按不同按键。直接百度电脑型号+进入BIOS快捷键），如图5.</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-55e4ba3fcf3d20c7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图5.jpg\"></p>\n<h1 id=\"2、更改启动设置\"><a href=\"#2、更改启动设置\" class=\"headerlink\" title=\"2、更改启动设置\"></a>2、更改启动设置</h1><p>根据屏幕下方提示按上下键选择Network Boot,按Enter（这时鼠标是不起作用的）。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-8238a978122161aa.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图6.jpg\"></p>\n<p>选择USB HDD开头的自己的U盘（我的是金士顿的,Kingstom DataTraveler 2.0），按+/-将它挪到第一位（图6），按Enter确认，按F10保存并退出，自动进入pe模式。</p>\n<h1 id=\"3-进入pe模式\"><a href=\"#3-进入pe模式\" class=\"headerlink\" title=\"3.进入pe模式\"></a>3.进入pe模式</h1><p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-41a07bd2df5beaee.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图7.jpg\"></p>\n<p>来到这一步就接近成功了，选择第一个或者第二个都行，这里我是默认，让它选择第一个（图7）。</p>\n<h1 id=\"4、安装系统\"><a href=\"#4、安装系统\" class=\"headerlink\" title=\"4、安装系统\"></a>4、安装系统</h1><p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-459d25d875c52b3d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图8.jpg\"></p>\n<p>待完全开机后，自动会弹出这个界面。也就是桌面上的U大师一键快速装机（图8）。前面一篇也提到过，将系统镜像放到除c盘外的其他盘符下，例如直接放到D盘下，这里它会自动找出来。如果你有多个镜像，就需要自己去选择，点浏览选择相应的镜像，点击需要还原的盘符（C盘），然后开始即可。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-24238af48c7d5aca.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图9.jpg\"></p>\n<p>提示将会清除C盘，正和我意，选择“是”（图9），还原，也就是重装。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-fa800af664ad4882.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图10.jpg\"></p>\n<p>这是一个经典的界面，无论用哪种方式安装或是还原Windows系统都会见到它。看到它出现，就说明系统在安装中了。等到进度条跑到100%时，默认15秒后重启，这时要拔下U盘。整个安装过程因机而异，只要不是太老的机器，半个小时都可以搞定。</p>\n<p>拔下U盘，电脑正常启动，坐在电脑旁，按照提示进行相应的操作就行了。后续步骤只要识字基本没什么难事了。对了，如果后续让输入序列号的话，可以选择跳过。无法跳过的话就百度一个序列号，网上很多的。</p>\n<p><strong>补充：</strong></p>\n<p>1.电脑设置U盘启动时，可以直接按F12快捷键从U盘启动，即可直接进入图7后续步骤。<br>2.有些系统安装后需要激活。是否需要激活可以通过在“我的电脑”上右键选择属性查看（图11）。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-fd077d71b1bb5abf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图11.jpg\"></p>\n<p>这里也给出一个激活工具吧：<a href=\"https://share.weiyun.com/b24a1bc8d7cdfdf542c182d2ee20268f\" target=\"_blank\" rel=\"external\">小马激活</a>,一键激活。<br>3.如果安装失败，请检查系统版本是否正确。真的失败了也不用紧张，大不了重新再来一遍，只要不一直重装，对电脑的影响基本可以忽视。<br>4.胆大心细，敢于尝试，凡事皆有第一次。<br>以上就是我所掌握的全部方法，所有给出的软件都是我用自己电脑试过的，所有步骤都已在我电脑上或者虚拟机里实现过。<br><strong> 姊妹篇：</strong><br><a href=\"http://www.jianshu.com/p/0d0e0ba264c9\" target=\"_blank\" rel=\"external\">系统安装之路一准备篇</a><br><a href=\"http://www.jianshu.com/p/c20fa668dbbe\" target=\"_blank\" rel=\"external\">系统安装之路二电脑能启动</a></p>\n","site":{"data":{}},"excerpt":"<p>相信很多人和我一样，只要电脑有界面就不担心，然而电脑黑屏或者蓝屏（图1）了，系统进不去了，此时内心就开始忧虑不安。从现在开始，你可以和我一样放心了（前提是电脑硬件没有问题）。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-fc5bb734986ab979.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图1.jpg\"></p>","more":"<h1 id=\"一-U盘启动盘制作\"><a href=\"#一-U盘启动盘制作\" class=\"headerlink\" title=\"一.U盘启动盘制作\"></a>一.U盘启动盘制作</h1><p>俗话说，工欲善其事必先利其器，我们需要一个大于等于2G的U盘用来做系统启动盘，必要时，就需要借助这个U盘来帮助我们进入硬盘，重装系统，提取文件，清楚开机密码，重置分区等等。首先我们来打造一个专属的U盘启动盘。网上有很多出名的制作启动盘的软件，这里，我用的是U大师（图2）。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-e88d042c32d6eb47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图2.png\"></p>\n<p>这是我之前下载的，现在版本又更新了，不过，大同小异，没有影响。双击下载好的软件，安装（图3）。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-911f2a5f112ea928.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图3.jpg\"></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-4d922cc8414fc524.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图4.png\"></p>\n<p>这时插上U盘，U大师就会自动识别。我建议买一个质量好的正品U盘做启动盘，以便长久稳定使用。专门的U盘，不要放其他东西，待U盘识别出后，点击中间的大按钮（图4），一键制作USB启动盘，提示格式化后出现进度条。当进度条跑到100%时，恭喜你，专属利器打造完毕，从此你就可以用它来对电脑进行操作了。</p>\n<h2 id=\"二-系统的安装\"><a href=\"#二-系统的安装\" class=\"headerlink\" title=\"二.系统的安装\"></a>二.系统的安装</h2><p>U盘启动实际是进入windows PE模式(Windows Preinstallation Environment)，即安装环境。系统是存储于硬盘里的，而新买的硬盘是一片空白的；系统出现故障，无法正常启动，这是都需要进入pe模式进行处理。因此，你可以把U盘启动盘看作是一个便携的简化系统，这个系统的功能不够多，仅仅能作为紧急情况的应急工具。</p>\n<p>下面开始具体操作。</p>\n<h2 id=\"1、重启\"><a href=\"#1、重启\" class=\"headerlink\" title=\"1、重启\"></a>1、重启</h2><p>将电脑重启（原来是关机的话直接开机），然后一直按住F11听到电脑“嘀”的一声，进入BIOS设置界面（不同机型进入方式不一样，我是联想M4450，请根据自己机型选按不同按键。直接百度电脑型号+进入BIOS快捷键），如图5.</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-55e4ba3fcf3d20c7.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图5.jpg\"></p>\n<h1 id=\"2、更改启动设置\"><a href=\"#2、更改启动设置\" class=\"headerlink\" title=\"2、更改启动设置\"></a>2、更改启动设置</h1><p>根据屏幕下方提示按上下键选择Network Boot,按Enter（这时鼠标是不起作用的）。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-8238a978122161aa.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图6.jpg\"></p>\n<p>选择USB HDD开头的自己的U盘（我的是金士顿的,Kingstom DataTraveler 2.0），按+/-将它挪到第一位（图6），按Enter确认，按F10保存并退出，自动进入pe模式。</p>\n<h1 id=\"3-进入pe模式\"><a href=\"#3-进入pe模式\" class=\"headerlink\" title=\"3.进入pe模式\"></a>3.进入pe模式</h1><p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-41a07bd2df5beaee.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图7.jpg\"></p>\n<p>来到这一步就接近成功了，选择第一个或者第二个都行，这里我是默认，让它选择第一个（图7）。</p>\n<h1 id=\"4、安装系统\"><a href=\"#4、安装系统\" class=\"headerlink\" title=\"4、安装系统\"></a>4、安装系统</h1><p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-459d25d875c52b3d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图8.jpg\"></p>\n<p>待完全开机后，自动会弹出这个界面。也就是桌面上的U大师一键快速装机（图8）。前面一篇也提到过，将系统镜像放到除c盘外的其他盘符下，例如直接放到D盘下，这里它会自动找出来。如果你有多个镜像，就需要自己去选择，点浏览选择相应的镜像，点击需要还原的盘符（C盘），然后开始即可。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-24238af48c7d5aca.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图9.jpg\"></p>\n<p>提示将会清除C盘，正和我意，选择“是”（图9），还原，也就是重装。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-fa800af664ad4882.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图10.jpg\"></p>\n<p>这是一个经典的界面，无论用哪种方式安装或是还原Windows系统都会见到它。看到它出现，就说明系统在安装中了。等到进度条跑到100%时，默认15秒后重启，这时要拔下U盘。整个安装过程因机而异，只要不是太老的机器，半个小时都可以搞定。</p>\n<p>拔下U盘，电脑正常启动，坐在电脑旁，按照提示进行相应的操作就行了。后续步骤只要识字基本没什么难事了。对了，如果后续让输入序列号的话，可以选择跳过。无法跳过的话就百度一个序列号，网上很多的。</p>\n<p><strong>补充：</strong></p>\n<p>1.电脑设置U盘启动时，可以直接按F12快捷键从U盘启动，即可直接进入图7后续步骤。<br>2.有些系统安装后需要激活。是否需要激活可以通过在“我的电脑”上右键选择属性查看（图11）。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-fd077d71b1bb5abf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图11.jpg\"></p>\n<p>这里也给出一个激活工具吧：<a href=\"https://share.weiyun.com/b24a1bc8d7cdfdf542c182d2ee20268f\">小马激活</a>,一键激活。<br>3.如果安装失败，请检查系统版本是否正确。真的失败了也不用紧张，大不了重新再来一遍，只要不一直重装，对电脑的影响基本可以忽视。<br>4.胆大心细，敢于尝试，凡事皆有第一次。<br>以上就是我所掌握的全部方法，所有给出的软件都是我用自己电脑试过的，所有步骤都已在我电脑上或者虚拟机里实现过。<br><strong> 姊妹篇：</strong><br><a href=\"http://www.jianshu.com/p/0d0e0ba264c9\">系统安装之路一准备篇</a><br><a href=\"http://www.jianshu.com/p/c20fa668dbbe\">系统安装之路二电脑能启动</a></p>"},{"title":"系统安装之路二电脑能启动","date":"2017-01-02T10:30:00.000Z","_content":"\n**电脑能正常开机**\n此时安装方法有很多，比较简单的是下载gho镜像文件或者普通的iso镜像（相关地址可以参照《系统安装之路一准备篇》下给的地址）。\n<!-- more -->\n**1.gho镜像**   此时可以借助“OneKey一键 还原”安装，非常方便，基本不用再管它了，自动安装，分区大小不会改变。[![系统安装之路二电脑能启动](http://upload-images.jianshu.io/upload_images/1837782-1284a6efcc2fcce4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)](http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&url=http://album.sina.com.cn/pic/006dBXhxgy70aeX0rqv47)\n\n[](http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&url=http://album.sina.com.cn/pic/006dBXhxgy708PVJaiC72)\n**2.解压后含有setup.exe的iso镜像**\n[](http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&url=http://album.sina.com.cn/pic/006dBXhxgy708QmM5bg2e)[![系统安装之路二电脑能启动](http://upload-images.jianshu.io/upload_images/1837782-3b8c63b5c7e0d7d0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)](http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&url=http://album.sina.com.cn/pic/006dBXhxgy70aeZj7m971)这种也是很简单的，将它解压到除c盘之外的其他盘里，上层文件夹名尽量不用中文，以防乱码不能识别，导致安装失败。然后点击setup.exe,之后基本不用管它了。\n两种方法之后都会提醒将还原C盘，请将重要文件备份。也就是说，重新装系统会将C盘格式化,桌面的东西是属于c盘的，所以应当养成重要文件不放在桌面的习惯。\n[注：OneKey一键还原下载](http://austluke.ctfile.com/fs/EYN145780610)\n** 姊妹篇：**\n[系统安装之路一准备篇](http://www.jianshu.com/p/0d0e0ba264c9)\n[系统安装之路三电脑无法启动](http://www.jianshu.com/p/b76adad83414)\n","source":"_posts/系统安装之路二电脑能启动.md","raw":"title: 系统安装之路二电脑能启动\ncategories: other\ntags: hardware\ndate: 2017-1-2 18:30\n---\n\n**电脑能正常开机**\n此时安装方法有很多，比较简单的是下载gho镜像文件或者普通的iso镜像（相关地址可以参照《系统安装之路一准备篇》下给的地址）。\n<!-- more -->\n**1.gho镜像**   此时可以借助“OneKey一键 还原”安装，非常方便，基本不用再管它了，自动安装，分区大小不会改变。[![系统安装之路二电脑能启动](http://upload-images.jianshu.io/upload_images/1837782-1284a6efcc2fcce4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)](http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&url=http://album.sina.com.cn/pic/006dBXhxgy70aeX0rqv47)\n\n[](http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&url=http://album.sina.com.cn/pic/006dBXhxgy708PVJaiC72)\n**2.解压后含有setup.exe的iso镜像**\n[](http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&url=http://album.sina.com.cn/pic/006dBXhxgy708QmM5bg2e)[![系统安装之路二电脑能启动](http://upload-images.jianshu.io/upload_images/1837782-3b8c63b5c7e0d7d0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)](http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&url=http://album.sina.com.cn/pic/006dBXhxgy70aeZj7m971)这种也是很简单的，将它解压到除c盘之外的其他盘里，上层文件夹名尽量不用中文，以防乱码不能识别，导致安装失败。然后点击setup.exe,之后基本不用管它了。\n两种方法之后都会提醒将还原C盘，请将重要文件备份。也就是说，重新装系统会将C盘格式化,桌面的东西是属于c盘的，所以应当养成重要文件不放在桌面的习惯。\n[注：OneKey一键还原下载](http://austluke.ctfile.com/fs/EYN145780610)\n** 姊妹篇：**\n[系统安装之路一准备篇](http://www.jianshu.com/p/0d0e0ba264c9)\n[系统安装之路三电脑无法启动](http://www.jianshu.com/p/b76adad83414)\n","slug":"系统安装之路二电脑能启动","published":1,"updated":"2017-04-22T01:38:56.494Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1u7zpqu001099pv6jbswynf","content":"<p><strong>电脑能正常开机</strong><br>此时安装方法有很多，比较简单的是下载gho镜像文件或者普通的iso镜像（相关地址可以参照《系统安装之路一准备篇》下给的地址）。<br><a id=\"more\"></a><br><strong>1.gho镜像</strong>   此时可以借助“OneKey一键 还原”安装，非常方便，基本不用再管它了，自动安装，分区大小不会改变。<a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&amp;url=http://album.sina.com.cn/pic/006dBXhxgy70aeX0rqv47\" target=\"_blank\" rel=\"external\"><img src=\"http://upload-images.jianshu.io/upload_images/1837782-1284a6efcc2fcce4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"系统安装之路二电脑能启动\"></a></p>\n<p><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&amp;url=http://album.sina.com.cn/pic/006dBXhxgy708PVJaiC72\" target=\"_blank\" rel=\"external\"></a><br><strong>2.解压后含有setup.exe的iso镜像</strong><br><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&amp;url=http://album.sina.com.cn/pic/006dBXhxgy708QmM5bg2e\" target=\"_blank\" rel=\"external\"></a><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&amp;url=http://album.sina.com.cn/pic/006dBXhxgy70aeZj7m971\" target=\"_blank\" rel=\"external\"><img src=\"http://upload-images.jianshu.io/upload_images/1837782-3b8c63b5c7e0d7d0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"系统安装之路二电脑能启动\"></a>这种也是很简单的，将它解压到除c盘之外的其他盘里，上层文件夹名尽量不用中文，以防乱码不能识别，导致安装失败。然后点击setup.exe,之后基本不用管它了。<br>两种方法之后都会提醒将还原C盘，请将重要文件备份。也就是说，重新装系统会将C盘格式化,桌面的东西是属于c盘的，所以应当养成重要文件不放在桌面的习惯。<br><a href=\"http://austluke.ctfile.com/fs/EYN145780610\" target=\"_blank\" rel=\"external\">注：OneKey一键还原下载</a><br><strong> 姊妹篇：</strong><br><a href=\"http://www.jianshu.com/p/0d0e0ba264c9\" target=\"_blank\" rel=\"external\">系统安装之路一准备篇</a><br><a href=\"http://www.jianshu.com/p/b76adad83414\" target=\"_blank\" rel=\"external\">系统安装之路三电脑无法启动</a></p>\n","site":{"data":{}},"excerpt":"<p><strong>电脑能正常开机</strong><br>此时安装方法有很多，比较简单的是下载gho镜像文件或者普通的iso镜像（相关地址可以参照《系统安装之路一准备篇》下给的地址）。<br>","more":"<br><strong>1.gho镜像</strong>   此时可以借助“OneKey一键 还原”安装，非常方便，基本不用再管它了，自动安装，分区大小不会改变。<a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&amp;url=http://album.sina.com.cn/pic/006dBXhxgy70aeX0rqv47\"><img src=\"http://upload-images.jianshu.io/upload_images/1837782-1284a6efcc2fcce4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"系统安装之路二电脑能启动\"></a></p>\n<p><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&amp;url=http://album.sina.com.cn/pic/006dBXhxgy708PVJaiC72\"></a><br><strong>2.解压后含有setup.exe的iso镜像</strong><br><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&amp;url=http://album.sina.com.cn/pic/006dBXhxgy708QmM5bg2e\"></a><a href=\"http://photo.blog.sina.com.cn/showpic.html#blogid=1539f98130102w1jm&amp;url=http://album.sina.com.cn/pic/006dBXhxgy70aeZj7m971\"><img src=\"http://upload-images.jianshu.io/upload_images/1837782-3b8c63b5c7e0d7d0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"系统安装之路二电脑能启动\"></a>这种也是很简单的，将它解压到除c盘之外的其他盘里，上层文件夹名尽量不用中文，以防乱码不能识别，导致安装失败。然后点击setup.exe,之后基本不用管它了。<br>两种方法之后都会提醒将还原C盘，请将重要文件备份。也就是说，重新装系统会将C盘格式化,桌面的东西是属于c盘的，所以应当养成重要文件不放在桌面的习惯。<br><a href=\"http://austluke.ctfile.com/fs/EYN145780610\">注：OneKey一键还原下载</a><br><strong> 姊妹篇：</strong><br><a href=\"http://www.jianshu.com/p/0d0e0ba264c9\">系统安装之路一准备篇</a><br><a href=\"http://www.jianshu.com/p/b76adad83414\">系统安装之路三电脑无法启动</a></p>"},{"title":"解决表单post传递乱码","date":"2017-02-10T16:00:00.000Z","_content":"\n## 利用filter过滤器将字符编码转变为utf-8。\n\n![过滤器位置](http://upload-images.jianshu.io/upload_images/1837782-0e9ff7ae5656b82b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n<!-- more -->\n## 1.新建EncodingFilter.java文件\n```java\n\tpackage encoding;\n\n\timport java.io.*;\n\timport javax.servlet.*;\n\n\tpublic class EncodingFilter implements Filter {\n\tpublic void init(FilterConfig filterConfig) throws ServletException {\n\n\t}\n\n\tpublic void doFilter(ServletRequest request, ServletResponse response,\n\t\t\tFilterChain chain) throws IOException, ServletException {\n\t\ttry {\n\t\t\trequest.setCharacterEncoding(\"utf-8\");\n\t\t\tresponse.setCharacterEncoding(\"utf-8\");\n\t\t} catch (Exception e) {\n\t\t}\n\n\t\tchain.doFilter(request, response);\n\t}\n\n\tpublic void destroy() {\n\n\t}\n\t}\n```\n\n## 2.修改web.xml文件（如果没有就自己新建一个）\n```xml\n\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n\t<filter>\n\t\t<display-name>encoding</display-name>\n\t\t<filter-name>encoding</filter-name>\n\t\t<filter-class>encoding.EncodingFilter</filter-class>\n\t</filter>\n\t<filter-mapping>\n\t\t<filter-name>encoding</filter-name>\n\t\t<url-pattern>/*</url-pattern>\n\t</filter-mapping>\n\n\t</web-app>\n```\n","source":"_posts/解决表单post传递乱码.md","raw":"title: 解决表单post传递乱码\ncategories: JavaEE\ntags: jsp\ndate: 2017-2-11\n---\n\n## 利用filter过滤器将字符编码转变为utf-8。\n\n![过滤器位置](http://upload-images.jianshu.io/upload_images/1837782-0e9ff7ae5656b82b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n<!-- more -->\n## 1.新建EncodingFilter.java文件\n```java\n\tpackage encoding;\n\n\timport java.io.*;\n\timport javax.servlet.*;\n\n\tpublic class EncodingFilter implements Filter {\n\tpublic void init(FilterConfig filterConfig) throws ServletException {\n\n\t}\n\n\tpublic void doFilter(ServletRequest request, ServletResponse response,\n\t\t\tFilterChain chain) throws IOException, ServletException {\n\t\ttry {\n\t\t\trequest.setCharacterEncoding(\"utf-8\");\n\t\t\tresponse.setCharacterEncoding(\"utf-8\");\n\t\t} catch (Exception e) {\n\t\t}\n\n\t\tchain.doFilter(request, response);\n\t}\n\n\tpublic void destroy() {\n\n\t}\n\t}\n```\n\n## 2.修改web.xml文件（如果没有就自己新建一个）\n```xml\n\t<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n\t<filter>\n\t\t<display-name>encoding</display-name>\n\t\t<filter-name>encoding</filter-name>\n\t\t<filter-class>encoding.EncodingFilter</filter-class>\n\t</filter>\n\t<filter-mapping>\n\t\t<filter-name>encoding</filter-name>\n\t\t<url-pattern>/*</url-pattern>\n\t</filter-mapping>\n\n\t</web-app>\n```\n","slug":"解决表单post传递乱码","published":1,"updated":"2017-04-22T01:31:02.193Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj1u7zpqy001399pv386lfc3p","content":"<h2 id=\"利用filter过滤器将字符编码转变为utf-8。\"><a href=\"#利用filter过滤器将字符编码转变为utf-8。\" class=\"headerlink\" title=\"利用filter过滤器将字符编码转变为utf-8。\"></a>利用filter过滤器将字符编码转变为utf-8。</h2><p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-0e9ff7ae5656b82b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"过滤器位置\"><br><a id=\"more\"></a></p>\n<h2 id=\"1-新建EncodingFilter-java文件\"><a href=\"#1-新建EncodingFilter-java文件\" class=\"headerlink\" title=\"1.新建EncodingFilter.java文件\"></a>1.新建EncodingFilter.java文件</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> encoding;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.*;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.*;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EncodingFilter</span> <span class=\"keyword\">implements</span> <span class=\"title\">Filter</span> </span>&#123;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(FilterConfig filterConfig)</span> <span class=\"keyword\">throws</span> ServletException </span>&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doFilter</span><span class=\"params\">(ServletRequest request, ServletResponse response,</span></span></div><div class=\"line\">\t\tFilterChain chain) <span class=\"keyword\">throws</span> IOException, ServletException &#123;</div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\trequest.setCharacterEncoding(<span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">\t\tresponse.setCharacterEncoding(<span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tchain.doFilter(request, response);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">destroy</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"2-修改web-xml文件（如果没有就自己新建一个）\"><a href=\"#2-修改web-xml文件（如果没有就自己新建一个）\" class=\"headerlink\" title=\"2.修改web.xml文件（如果没有就自己新建一个）\"></a>2.修改web.xml文件（如果没有就自己新建一个）</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">version</span>=<span class=\"string\">\"3.0\"</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee\"</span></span></div><div class=\"line\"><span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\"><span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"</span>&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>encoding.EncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"利用filter过滤器将字符编码转变为utf-8。\"><a href=\"#利用filter过滤器将字符编码转变为utf-8。\" class=\"headerlink\" title=\"利用filter过滤器将字符编码转变为utf-8。\"></a>利用filter过滤器将字符编码转变为utf-8。</h2><p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-0e9ff7ae5656b82b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"过滤器位置\"><br>","more":"</p>\n<h2 id=\"1-新建EncodingFilter-java文件\"><a href=\"#1-新建EncodingFilter-java文件\" class=\"headerlink\" title=\"1.新建EncodingFilter.java文件\"></a>1.新建EncodingFilter.java文件</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> encoding;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.*;</div><div class=\"line\"><span class=\"keyword\">import</span> javax.servlet.*;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EncodingFilter</span> <span class=\"keyword\">implements</span> <span class=\"title\">Filter</span> </span>&#123;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(FilterConfig filterConfig)</span> <span class=\"keyword\">throws</span> ServletException </span>&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doFilter</span><span class=\"params\">(ServletRequest request, ServletResponse response,</div><div class=\"line\">\t\tFilterChain chain)</span> <span class=\"keyword\">throws</span> IOException, ServletException </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">try</span> &#123;</div><div class=\"line\">\t\trequest.setCharacterEncoding(<span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">\t\tresponse.setCharacterEncoding(<span class=\"string\">\"utf-8\"</span>);</div><div class=\"line\">\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\tchain.doFilter(request, response);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">destroy</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"2-修改web-xml文件（如果没有就自己新建一个）\"><a href=\"#2-修改web-xml文件（如果没有就自己新建一个）\" class=\"headerlink\" title=\"2.修改web.xml文件（如果没有就自己新建一个）\"></a>2.修改web.xml文件（如果没有就自己新建一个）</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">version</span>=<span class=\"string\">\"3.0\"</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee\"</span></div><div class=\"line\"><span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\"><span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>encoding.EncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></div></pre></td></tr></table></figure>"},{"title":"马士兵struts2视频笔记--第一天","date":"2017-03-23T04:00:00.000Z","_content":"\n\n# 开发准备\njdk(http://www.oracle.com/technetwork/java/javase/downloads/index.html)\nmyeclipse\ntomcat(http://tomcat.apache.org/)\nstruts2(http://struts.apache.org/download.cgi)\nStruts2开发文档(http://struts.apache.org/docs/getting-started.html)\n<!--more-->\n# 第一个案例—`Hello World`\n## 1.新建`web project`项目\n`File`-`new`-`web project`，输入项目名，如`sturts2_001`。\n \n![2-1 新建项目.png](http://upload-images.jianshu.io/upload_images/1837782-b267435a9cf12d54.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 2.配置项目\n###  1 将开发库导入lib文件夹下\n[下载链接](http://download.csdn.net/detail/qq_30461621/9792881)\n###  2 在src包下新建struts.xml配置文件\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE struts PUBLIC\n    \"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN\"\n http://struts.apache.org/dtds/struts-2.0.dtd\">\n<struts>\n\t<!-- \n    <constant name=\"struts.enable.DynamicMethodInvocation\" value=\"false\" />\n    <constant name=\"struts.devMode\" value=\"false\" />\n    <include file=\"example.xml\"/>\n    <package name=\"default\" namespace=\"/\" extends=\"struts-default\">\n        <default-action-ref name=\"index\" />\n        <action name=\"index\">\n            <result type=\"redirectAction\">\n                <param name=\"actionName\">HelloWorld</param>\n                <param name=\"namespace\">/example</param>\n            </result>\n        </action>\n    </package>\n\t -->\n    <!-- Add packages here -->\n</struts>\n```\n###  3 修改struts.xml\n在 <!-- Add packages here --> 下面添加：\n```xml\n<constant name=\"struts.devMode\" value=\"true\" />\n\t <package name=\"default\" namespace=\"/\" extends=\"struts-default\">\n        <action name=\"hello\">\n            <result>\n                /Hello.jsp\n            </result>\n        </action>\n </package>\n```\n> 说明：\n>>①<constant name=\"struts.devMode\" value=\"true\" />开发模式\n>> ②action name：访问的名称\n>>③package：类似于java中的包，解决重名问题\n\n###  4 修改web.xml文件为\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app version=\"3.0\"\n    xmlns=\"http://java.sun.com/xml/ns/javaee\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n     <welcome-file-list>\n    <welcome-file>Hello.jsp</welcome-file>\n  </welcome-file-list>\n  \n  <filter>\n        <filter-name>struts2</filter-name>\n        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>\n    </filter>\n\n    <filter-mapping>\n        <filter-name>struts2</filter-name>\n        <url-pattern>/*</url-pattern>\n    </filter-mapping>\n</web-app>\n```\n###  5 访问\n新建Hello.jsp文件，然后部署项目，访问localhost:8080/struts2/hello即可访问到Hello.jsp页面\n\n \n\n![图2-2 项目结构.png](http://upload-images.jianshu.io/upload_images/1837782-20743e7ee7ac95fa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 3.原理\n \n\n![图3-1 struts2 核心原理.png](http://upload-images.jianshu.io/upload_images/1837782-51612ff1a6c167b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n# namespace\n```xml\n<package name=\"default\" namespace=\"/\" extends=\"struts-default\">\n        <default-action-ref name=\"index\" />\n        <action name=\"index\">\n            <result type=\"redirectAction\">\n                <param name=\"actionName\">HelloWorld</param>\n                <param name=\"namespace\">/example</param>\n            </result>\n        </action>\n    </package>\n``` \n> namespace决定了action的访问路径，默认为\"\"，可以接收所有路径的action\n>namespace可以写为’/’，或者’/xxx’，或者’/xxx/yyy’，对应的action访问路径为’/index.action’‘/xxx/index.action’，或者’/xxx/yyy/index.action’。\n namespace最好也用模块来进行命名\n\n# action\n \n\n![图4-1 执行过程.png](http://upload-images.jianshu.io/upload_images/1837782-7d0878e26e9eaac3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\naction不一定是servlet，可以是一个普通类。\n \n\n![图4-2 程序结构.png](http://upload-images.jianshu.io/upload_images/1837782-ff3c91d4befd511c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n`<action name=\"path\" class=\"com.bjsxt.struts2.path.action.PathAction\">`\n“class”是类的路径。当class属性没有配置时，默认访问ActionSupport类。\n*action的三种实现方法*\n###①普通类，手写execute方法。缺点：容易出错。\n```java\npublic class IndexAction1 {\n\tpublic String execute() {\n\t\treturn \"success\";\n\t}\n}\n```\n### ②实现Action类，重载execute方法。\n```java\npublic class IndexAction2 implements Action {\n\t@Override\n\tpublic String execute() {\n\t\treturn \"success\";\n\t}\n}\n```\n###③继承已经实现好的类，有很多可以直接用方法。*推荐使用*\n```java\npublic class IndexAction3 extends ActionSupport {\n\t@Override\n\tpublic String execute() {\n\t\treturn \"success\";\n\t}\n}\n```\n# path\nstruts2中的路径问题是根据action的路径而不是jsp路径来确定，所以尽量不要使用相对路径。\n虽然可以用redirect方式解决，但redirect方式并非必要。 \n解决办法非常简单，统一使用绝对路径。（在jsp中用request.getContextRoot方式来拿到webapp的路径） \n或者使用myeclipse经常用的，指定basePath。\n \n\n![图5-1 程序结构.png](http://upload-images.jianshu.io/upload_images/1837782-60ad236d422f246d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 1. path.jsp\n```xml\n<?xml version=\"1.0\" encoding=\"GB18030\" ?>\n<%@ page language=\"java\" contentType=\"text/html; charset=GB18030\"\n    pageEncoding=\"GB18030\"%>\n<%@taglib uri=\"/struts-tags\" prefix=\"s\" %>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<base href=\"<%=basePath%>\" />\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GB18030\" />\n<title>Insert title here</title>\n</head>\n<body>\nstruts2中的路径问题是根据action的路径而不是jsp路径来确定，所以尽量不要使用相对路径。<br />\n<a href=\"index.jsp\">index.jsp</a>\n<br />\n虽然可以用redirect方式解决，但redirect方式并非必要。\n<br />\n解决办法非常简单，统一使用绝对路径。（在jsp中用request.getContextRoot方式来拿到webapp的路径）\n<br />\n或者使用myeclipse经常用的，指定basePath\n</body>\n</html>\n```\n> 注：前面设置好了<base>标签，就可以使用绝对路径了。\n\n## 2 index.jsp\n```xml\n<?xml version=\"1.0\" encoding=\"GB18030\" ?>\n<%@ page language=\"java\" contentType=\"text/html; charset=GB18030\"\n    pageEncoding=\"GB18030\"%>\n\n<%--\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n//在head中<base href>指定basePath\n--%>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GB18030\" />\n<title>Insert title here</title>\n</head>\n<body>\n\t<a href=\"path/path\">路径问题说明</a>\n</body>\n</html>\n```\n#  ActionMethod_DMI_动态方法调用.\nAction执行的时候并不一定要执行execute方法，也可以访问其他方法。\n*访问方法有两种：*\n①在配置文件中配置Action的时候用method=“”来指定执行指定方法\n②url地址中动态指定（动态方法调用DMI）（推荐）\n#  1 index.jsp页面\n```jsp\n<?xml version=\"1.0\" encoding=\"GB18030\" ?>\n<%@ page language=\"java\" contentType=\"text/html; charset=GB18030\"\n    pageEncoding=\"GB18030\"%>\n\n<% String context = request.getContextPath(); %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GB18030\" />\n<title>Insert title here</title>\n</head>\n<body>\nAction执行的时候并不一定要执行execute方法<br />\n可以在配置文件中配置Action的时候用method=来指定执行哪个方法\n也可以在url地址中动态指定（动态方法调用DMI）（推荐）<br />\n\t<a href=\"<%=context %>/user/userAdd\">添加用户</a>\n\t<br />\n\t<a href=\"<%=context %>/user/user!add\">添加用户</a>\n\t<br />\n前者会产生太多的action，所以不推荐使用\n\t\n</body>\n</html>\n```\n> 说明：第一个超链接是普通方法，对应struts.xml中第一个action，需要配置method属性。\n第二个超链接是动态方法调用，struts.xml文件不需要改动，推荐使用。\n\n##  2 struts.xml文件\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE struts PUBLIC\n    \"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN\"\n    \"http://struts.apache.org/dtds/struts-2.0.dtd\">\n\n<struts>\n    <constant name=\"struts.devMode\" value=\"true\" />\n    <package name=\"user\" extends=\"struts-default\" namespace=\"/user\">\n        <action name=\"userAdd\" class=\"com.bjsxt.struts2.user.action.UserAction\" method=\"add\">\n            <result>/user_add_success.jsp</result>\n        </action>\n        \n        <action name=\"user\" class=\"com.bjsxt.struts2.user.action.UserAction\">\n            <result>/user_add_success.jsp</result>\n        </action>\n    </package>\n</struts>\n```\n\n## 3 UserAction.java\n```java\npackage com.bjsxt.struts2.user.action;\n\nimport com.opensymphony.xwork2.ActionSupport;\n\npublic class UserAction extends ActionSupport {\n\tpublic String add() {\n\t\treturn SUCCESS;\n\t}\n}\n```\n\n","source":"_posts/马士兵struts2视频笔记--第一天.md","raw":"title: 马士兵struts2视频笔记--第一天\ncategories: Framework\ntags: java\ndate: 2017-3-23 12:00\n---\n\n\n# 开发准备\njdk(http://www.oracle.com/technetwork/java/javase/downloads/index.html)\nmyeclipse\ntomcat(http://tomcat.apache.org/)\nstruts2(http://struts.apache.org/download.cgi)\nStruts2开发文档(http://struts.apache.org/docs/getting-started.html)\n<!--more-->\n# 第一个案例—`Hello World`\n## 1.新建`web project`项目\n`File`-`new`-`web project`，输入项目名，如`sturts2_001`。\n \n![2-1 新建项目.png](http://upload-images.jianshu.io/upload_images/1837782-b267435a9cf12d54.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n## 2.配置项目\n###  1 将开发库导入lib文件夹下\n[下载链接](http://download.csdn.net/detail/qq_30461621/9792881)\n###  2 在src包下新建struts.xml配置文件\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE struts PUBLIC\n    \"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN\"\n http://struts.apache.org/dtds/struts-2.0.dtd\">\n<struts>\n\t<!-- \n    <constant name=\"struts.enable.DynamicMethodInvocation\" value=\"false\" />\n    <constant name=\"struts.devMode\" value=\"false\" />\n    <include file=\"example.xml\"/>\n    <package name=\"default\" namespace=\"/\" extends=\"struts-default\">\n        <default-action-ref name=\"index\" />\n        <action name=\"index\">\n            <result type=\"redirectAction\">\n                <param name=\"actionName\">HelloWorld</param>\n                <param name=\"namespace\">/example</param>\n            </result>\n        </action>\n    </package>\n\t -->\n    <!-- Add packages here -->\n</struts>\n```\n###  3 修改struts.xml\n在 <!-- Add packages here --> 下面添加：\n```xml\n<constant name=\"struts.devMode\" value=\"true\" />\n\t <package name=\"default\" namespace=\"/\" extends=\"struts-default\">\n        <action name=\"hello\">\n            <result>\n                /Hello.jsp\n            </result>\n        </action>\n </package>\n```\n> 说明：\n>>①<constant name=\"struts.devMode\" value=\"true\" />开发模式\n>> ②action name：访问的名称\n>>③package：类似于java中的包，解决重名问题\n\n###  4 修改web.xml文件为\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app version=\"3.0\"\n    xmlns=\"http://java.sun.com/xml/ns/javaee\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n     <welcome-file-list>\n    <welcome-file>Hello.jsp</welcome-file>\n  </welcome-file-list>\n  \n  <filter>\n        <filter-name>struts2</filter-name>\n        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>\n    </filter>\n\n    <filter-mapping>\n        <filter-name>struts2</filter-name>\n        <url-pattern>/*</url-pattern>\n    </filter-mapping>\n</web-app>\n```\n###  5 访问\n新建Hello.jsp文件，然后部署项目，访问localhost:8080/struts2/hello即可访问到Hello.jsp页面\n\n \n\n![图2-2 项目结构.png](http://upload-images.jianshu.io/upload_images/1837782-20743e7ee7ac95fa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 3.原理\n \n\n![图3-1 struts2 核心原理.png](http://upload-images.jianshu.io/upload_images/1837782-51612ff1a6c167b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n# namespace\n```xml\n<package name=\"default\" namespace=\"/\" extends=\"struts-default\">\n        <default-action-ref name=\"index\" />\n        <action name=\"index\">\n            <result type=\"redirectAction\">\n                <param name=\"actionName\">HelloWorld</param>\n                <param name=\"namespace\">/example</param>\n            </result>\n        </action>\n    </package>\n``` \n> namespace决定了action的访问路径，默认为\"\"，可以接收所有路径的action\n>namespace可以写为’/’，或者’/xxx’，或者’/xxx/yyy’，对应的action访问路径为’/index.action’‘/xxx/index.action’，或者’/xxx/yyy/index.action’。\n namespace最好也用模块来进行命名\n\n# action\n \n\n![图4-1 执行过程.png](http://upload-images.jianshu.io/upload_images/1837782-7d0878e26e9eaac3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\naction不一定是servlet，可以是一个普通类。\n \n\n![图4-2 程序结构.png](http://upload-images.jianshu.io/upload_images/1837782-ff3c91d4befd511c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n`<action name=\"path\" class=\"com.bjsxt.struts2.path.action.PathAction\">`\n“class”是类的路径。当class属性没有配置时，默认访问ActionSupport类。\n*action的三种实现方法*\n###①普通类，手写execute方法。缺点：容易出错。\n```java\npublic class IndexAction1 {\n\tpublic String execute() {\n\t\treturn \"success\";\n\t}\n}\n```\n### ②实现Action类，重载execute方法。\n```java\npublic class IndexAction2 implements Action {\n\t@Override\n\tpublic String execute() {\n\t\treturn \"success\";\n\t}\n}\n```\n###③继承已经实现好的类，有很多可以直接用方法。*推荐使用*\n```java\npublic class IndexAction3 extends ActionSupport {\n\t@Override\n\tpublic String execute() {\n\t\treturn \"success\";\n\t}\n}\n```\n# path\nstruts2中的路径问题是根据action的路径而不是jsp路径来确定，所以尽量不要使用相对路径。\n虽然可以用redirect方式解决，但redirect方式并非必要。 \n解决办法非常简单，统一使用绝对路径。（在jsp中用request.getContextRoot方式来拿到webapp的路径） \n或者使用myeclipse经常用的，指定basePath。\n \n\n![图5-1 程序结构.png](http://upload-images.jianshu.io/upload_images/1837782-60ad236d422f246d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n## 1. path.jsp\n```xml\n<?xml version=\"1.0\" encoding=\"GB18030\" ?>\n<%@ page language=\"java\" contentType=\"text/html; charset=GB18030\"\n    pageEncoding=\"GB18030\"%>\n<%@taglib uri=\"/struts-tags\" prefix=\"s\" %>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<base href=\"<%=basePath%>\" />\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GB18030\" />\n<title>Insert title here</title>\n</head>\n<body>\nstruts2中的路径问题是根据action的路径而不是jsp路径来确定，所以尽量不要使用相对路径。<br />\n<a href=\"index.jsp\">index.jsp</a>\n<br />\n虽然可以用redirect方式解决，但redirect方式并非必要。\n<br />\n解决办法非常简单，统一使用绝对路径。（在jsp中用request.getContextRoot方式来拿到webapp的路径）\n<br />\n或者使用myeclipse经常用的，指定basePath\n</body>\n</html>\n```\n> 注：前面设置好了<base>标签，就可以使用绝对路径了。\n\n## 2 index.jsp\n```xml\n<?xml version=\"1.0\" encoding=\"GB18030\" ?>\n<%@ page language=\"java\" contentType=\"text/html; charset=GB18030\"\n    pageEncoding=\"GB18030\"%>\n\n<%--\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n//在head中<base href>指定basePath\n--%>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GB18030\" />\n<title>Insert title here</title>\n</head>\n<body>\n\t<a href=\"path/path\">路径问题说明</a>\n</body>\n</html>\n```\n#  ActionMethod_DMI_动态方法调用.\nAction执行的时候并不一定要执行execute方法，也可以访问其他方法。\n*访问方法有两种：*\n①在配置文件中配置Action的时候用method=“”来指定执行指定方法\n②url地址中动态指定（动态方法调用DMI）（推荐）\n#  1 index.jsp页面\n```jsp\n<?xml version=\"1.0\" encoding=\"GB18030\" ?>\n<%@ page language=\"java\" contentType=\"text/html; charset=GB18030\"\n    pageEncoding=\"GB18030\"%>\n\n<% String context = request.getContextPath(); %>\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=GB18030\" />\n<title>Insert title here</title>\n</head>\n<body>\nAction执行的时候并不一定要执行execute方法<br />\n可以在配置文件中配置Action的时候用method=来指定执行哪个方法\n也可以在url地址中动态指定（动态方法调用DMI）（推荐）<br />\n\t<a href=\"<%=context %>/user/userAdd\">添加用户</a>\n\t<br />\n\t<a href=\"<%=context %>/user/user!add\">添加用户</a>\n\t<br />\n前者会产生太多的action，所以不推荐使用\n\t\n</body>\n</html>\n```\n> 说明：第一个超链接是普通方法，对应struts.xml中第一个action，需要配置method属性。\n第二个超链接是动态方法调用，struts.xml文件不需要改动，推荐使用。\n\n##  2 struts.xml文件\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE struts PUBLIC\n    \"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN\"\n    \"http://struts.apache.org/dtds/struts-2.0.dtd\">\n\n<struts>\n    <constant name=\"struts.devMode\" value=\"true\" />\n    <package name=\"user\" extends=\"struts-default\" namespace=\"/user\">\n        <action name=\"userAdd\" class=\"com.bjsxt.struts2.user.action.UserAction\" method=\"add\">\n            <result>/user_add_success.jsp</result>\n        </action>\n        \n        <action name=\"user\" class=\"com.bjsxt.struts2.user.action.UserAction\">\n            <result>/user_add_success.jsp</result>\n        </action>\n    </package>\n</struts>\n```\n\n## 3 UserAction.java\n```java\npackage com.bjsxt.struts2.user.action;\n\nimport com.opensymphony.xwork2.ActionSupport;\n\npublic class UserAction extends ActionSupport {\n\tpublic String add() {\n\t\treturn SUCCESS;\n\t}\n}\n```\n\n","slug":"马士兵struts2视频笔记--第一天","published":1,"updated":"2017-04-23T04:57:22.322Z","_id":"cj1u825vi0000a5pvdi6dhqnu","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"开发准备\"><a href=\"#开发准备\" class=\"headerlink\" title=\"开发准备\"></a>开发准备</h1><p>jdk(<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\" rel=\"external\">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a>)<br>myeclipse<br>tomcat(<a href=\"http://tomcat.apache.org/\" target=\"_blank\" rel=\"external\">http://tomcat.apache.org/</a>)<br>struts2(<a href=\"http://struts.apache.org/download.cgi\" target=\"_blank\" rel=\"external\">http://struts.apache.org/download.cgi</a>)<br>Struts2开发文档(<a href=\"http://struts.apache.org/docs/getting-started.html\" target=\"_blank\" rel=\"external\">http://struts.apache.org/docs/getting-started.html</a>)<br><a id=\"more\"></a></p>\n<h1 id=\"第一个案例—Hello-World\"><a href=\"#第一个案例—Hello-World\" class=\"headerlink\" title=\"第一个案例—Hello World\"></a>第一个案例—<code>Hello World</code></h1><h2 id=\"1-新建web-project项目\"><a href=\"#1-新建web-project项目\" class=\"headerlink\" title=\"1.新建web project项目\"></a>1.新建<code>web project</code>项目</h2><p><code>File</code>-<code>new</code>-<code>web project</code>，输入项目名，如<code>sturts2_001</code>。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-b267435a9cf12d54.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"2-1 新建项目.png\"></p>\n<h2 id=\"2-配置项目\"><a href=\"#2-配置项目\" class=\"headerlink\" title=\"2.配置项目\"></a>2.配置项目</h2><h3 id=\"1-将开发库导入lib文件夹下\"><a href=\"#1-将开发库导入lib文件夹下\" class=\"headerlink\" title=\"1 将开发库导入lib文件夹下\"></a>1 将开发库导入lib文件夹下</h3><p><a href=\"http://download.csdn.net/detail/qq_30461621/9792881\" target=\"_blank\" rel=\"external\">下载链接</a></p>\n<h3 id=\"2-在src包下新建struts-xml配置文件\"><a href=\"#2-在src包下新建struts-xml配置文件\" class=\"headerlink\" title=\"2 在src包下新建struts.xml配置文件\"></a>2 在src包下新建struts.xml配置文件</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE struts PUBLIC</span></div><div class=\"line\">    \"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN\"</div><div class=\"line\"> http://struts.apache.org/dtds/struts-2.0.dtd\"&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">struts</span>&gt;</span></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- </span></div><div class=\"line\">    &lt;constant name=\"struts.enable.DynamicMethodInvocation\" value=\"false\" /&gt;</div><div class=\"line\">    &lt;constant name=\"struts.devMode\" value=\"false\" /&gt;</div><div class=\"line\">    &lt;include file=\"example.xml\"/&gt;</div><div class=\"line\">    &lt;package name=\"default\" namespace=\"/\" extends=\"struts-default\"&gt;</div><div class=\"line\">        &lt;default-action-ref name=\"index\" /&gt;</div><div class=\"line\">        &lt;action name=\"index\"&gt;</div><div class=\"line\">            &lt;result type=\"redirectAction\"&gt;</div><div class=\"line\">                &lt;param name=\"actionName\"&gt;HelloWorld&lt;/param&gt;</div><div class=\"line\">                &lt;param name=\"namespace\"&gt;/example&lt;/param&gt;</div><div class=\"line\">            &lt;/result&gt;</div><div class=\"line\">        &lt;/action&gt;</div><div class=\"line\">    &lt;/package&gt;</div><div class=\"line\">\t --&gt;</div><div class=\"line\">    <span class=\"comment\">&lt;!-- Add packages here --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">struts</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"3-修改struts-xml\"><a href=\"#3-修改struts-xml\" class=\"headerlink\" title=\"3 修改struts.xml\"></a>3 修改struts.xml</h3><p>在 <!-- Add packages here --> 下面添加：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">constant</span> <span class=\"attr\">name</span>=<span class=\"string\">\"struts.devMode\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\">\t <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"default\"</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"/\"</span> <span class=\"attr\">extends</span>=<span class=\"string\">\"struts-default\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hello\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">result</span>&gt;</span></div><div class=\"line\">                /Hello.jsp</div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">package</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>说明：</p>\n<blockquote>\n<p>①<constant name=\"struts.devMode\" value=\"true\">开发模式<br>②action name：访问的名称<br>③package：类似于java中的包，解决重名问题</constant></p>\n</blockquote>\n</blockquote>\n<h3 id=\"4-修改web-xml文件为\"><a href=\"#4-修改web-xml文件为\" class=\"headerlink\" title=\"4 修改web.xml文件为\"></a>4 修改web.xml文件为</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">version</span>=<span class=\"string\">\"3.0\"</span></span></div><div class=\"line\">    <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee\"</span></div><div class=\"line\">    <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\">    <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"</span>&gt;</div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">welcome-file-list</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>Hello.jsp<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">welcome-file-list</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>struts2<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>struts2<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"5-访问\"><a href=\"#5-访问\" class=\"headerlink\" title=\"5 访问\"></a>5 访问</h3><p>新建Hello.jsp文件，然后部署项目，访问localhost:8080/struts2/hello即可访问到Hello.jsp页面</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-20743e7ee7ac95fa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图2-2 项目结构.png\"></p>\n<h2 id=\"3-原理\"><a href=\"#3-原理\" class=\"headerlink\" title=\"3.原理\"></a>3.原理</h2><p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-51612ff1a6c167b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图3-1 struts2 核心原理.png\"></p>\n<h1 id=\"namespace\"><a href=\"#namespace\" class=\"headerlink\" title=\"namespace\"></a>namespace</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"default\"</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"/\"</span> <span class=\"attr\">extends</span>=<span class=\"string\">\"struts-default\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">default-action-ref</span> <span class=\"attr\">name</span>=<span class=\"string\">\"index\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">name</span>=<span class=\"string\">\"index\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">type</span>=<span class=\"string\">\"redirectAction\"</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"actionName\"</span>&gt;</span>HelloWorld<span class=\"tag\">&lt;/<span class=\"name\">param</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"namespace\"</span>&gt;</span>/example<span class=\"tag\">&lt;/<span class=\"name\">param</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">package</span>&gt;</span></div><div class=\"line\">``` </div><div class=\"line\">&gt; namespace决定了action的访问路径，默认为\"\"，可以接收所有路径的action</div><div class=\"line\">&gt;namespace可以写为’/’，或者’/xxx’，或者’/xxx/yyy’，对应的action访问路径为’/index.action’‘/xxx/index.action’，或者’/xxx/yyy/index.action’。</div><div class=\"line\"> namespace最好也用模块来进行命名</div><div class=\"line\"></div><div class=\"line\"># action</div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">![图4-1 执行过程.png](http://upload-images.jianshu.io/upload_images/1837782-7d0878e26e9eaac3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</div><div class=\"line\"></div><div class=\"line\">action不一定是servlet，可以是一个普通类。</div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">![图4-2 程序结构.png](http://upload-images.jianshu.io/upload_images/1837782-ff3c91d4befd511c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</div><div class=\"line\"></div><div class=\"line\">`<span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">name</span>=<span class=\"string\">\"path\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.bjsxt.struts2.path.action.PathAction\"</span>&gt;</span>`</div><div class=\"line\">“class”是类的路径。当class属性没有配置时，默认访问ActionSupport类。</div><div class=\"line\">*action的三种实现方法*</div><div class=\"line\">###①普通类，手写execute方法。缺点：容易出错。</div><div class=\"line\">```java</div><div class=\"line\">public class IndexAction1 &#123;</div><div class=\"line\">\tpublic String execute() &#123;</div><div class=\"line\">\t\treturn \"success\";</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"②实现Action类，重载execute方法。\"><a href=\"#②实现Action类，重载execute方法。\" class=\"headerlink\" title=\"②实现Action类，重载execute方法。\"></a>②实现Action类，重载execute方法。</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IndexAction2</span> <span class=\"keyword\">implements</span> <span class=\"title\">Action</span> </span>&#123;</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">execute</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"success\"</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>###③继承已经实现好的类，有很多可以直接用方法。<em>推荐使用</em><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IndexAction3</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActionSupport</span> </span>&#123;</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">execute</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"success\"</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"path\"><a href=\"#path\" class=\"headerlink\" title=\"path\"></a>path</h1><p>struts2中的路径问题是根据action的路径而不是jsp路径来确定，所以尽量不要使用相对路径。<br>虽然可以用redirect方式解决，但redirect方式并非必要。<br>解决办法非常简单，统一使用绝对路径。（在jsp中用request.getContextRoot方式来拿到webapp的路径）<br>或者使用myeclipse经常用的，指定basePath。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-60ad236d422f246d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图5-1 程序结构.png\"></p>\n<h2 id=\"1-path-jsp\"><a href=\"#1-path-jsp\" class=\"headerlink\" title=\"1. path.jsp\"></a>1. path.jsp</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"GB18030\" ?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%@</span> <span class=\"attr\">page</span> <span class=\"attr\">language</span>=<span class=\"string\">\"java\"</span> <span class=\"attr\">contentType</span>=<span class=\"string\">\"text/html; charset=GB18030\"</span></span></div><div class=\"line\">    <span class=\"attr\">pageEncoding</span>=<span class=\"string\">\"GB18030\"</span>%&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%@taglib</span> <span class=\"attr\">uri</span>=<span class=\"string\">\"/struts-tags\"</span> <span class=\"attr\">prefix</span>=<span class=\"string\">\"s\"</span> %&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span></span></div><div class=\"line\"><span class=\"attr\">String</span> <span class=\"attr\">path</span> = <span class=\"string\">request.getContextPath();</span></div><div class=\"line\"><span class=\"attr\">String</span> <span class=\"attr\">basePath</span> = <span class=\"string\">request.getScheme()+</span>\"<span class=\"attr\">:</span>//\"+<span class=\"attr\">request.getServerName</span>()+\"<span class=\"attr\">:</span>\"+<span class=\"attr\">request.getServerPort</span>()+<span class=\"attr\">path</span>+\"/\";</div><div class=\"line\">%&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">base</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&lt;%=basePath%&gt;\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=GB18030\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Insert title here<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">struts2中的路径问题是根据action的路径而不是jsp路径来确定，所以尽量不要使用相对路径。<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"index.jsp\"</span>&gt;</span>index.jsp<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">虽然可以用redirect方式解决，但redirect方式并非必要。</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">解决办法非常简单，统一使用绝对路径。（在jsp中用request.getContextRoot方式来拿到webapp的路径）</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">或者使用myeclipse经常用的，指定basePath</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>注：前面设置好了<base>标签，就可以使用绝对路径了。</p>\n</blockquote>\n<h2 id=\"2-index-jsp\"><a href=\"#2-index-jsp\" class=\"headerlink\" title=\"2 index.jsp\"></a>2 index.jsp</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"GB18030\" ?&gt;</div><div class=\"line\">&lt;%@ page language=\"java\" contentType=\"text/html; charset=GB18030\"</div><div class=\"line\">    pageEncoding=\"GB18030\"%&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;%--</div><div class=\"line\">String path = request.getContextPath();</div><div class=\"line\">String basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";</div><div class=\"line\">//在head中&lt;base href&gt;指定basePath</div><div class=\"line\">--%&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</div><div class=\"line\">&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=GB18030\" /&gt;</div><div class=\"line\">&lt;title&gt;Insert title here&lt;/title&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">\t&lt;a href=\"path/path\"&gt;路径问题说明&lt;/a&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"ActionMethodDMI动态方法调用\"><a href=\"#ActionMethodDMI动态方法调用\" class=\"headerlink\" title=\"ActionMethodDMI动态方法调用.\"></a>ActionMethod<em>DMI</em>动态方法调用.</h1><p>Action执行的时候并不一定要执行execute方法，也可以访问其他方法。<br><em>访问方法有两种：</em><br>①在配置文件中配置Action的时候用method=“”来指定执行指定方法<br>②url地址中动态指定（动态方法调用DMI）（推荐）</p>\n<h1 id=\"1-index-jsp页面\"><a href=\"#1-index-jsp页面\" class=\"headerlink\" title=\"1 index.jsp页面\"></a>1 index.jsp页面</h1><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"GB18030\" ?&gt;</div><div class=\"line\">&lt;%@ page language=\"java\" contentType=\"text/html; charset=GB18030\"</div><div class=\"line\">    pageEncoding=\"GB18030\"%&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;% String context = request.getContextPath(); %&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</div><div class=\"line\">&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=GB18030\" /&gt;</div><div class=\"line\">&lt;title&gt;Insert title here&lt;/title&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">Action执行的时候并不一定要执行execute方法&lt;br /&gt;</div><div class=\"line\">可以在配置文件中配置Action的时候用method=来指定执行哪个方法</div><div class=\"line\">也可以在url地址中动态指定（动态方法调用DMI）（推荐）&lt;br /&gt;</div><div class=\"line\">\t&lt;a href=\"&lt;%=context %&gt;/user/userAdd\"&gt;添加用户&lt;/a&gt;</div><div class=\"line\">\t&lt;br /&gt;</div><div class=\"line\">\t&lt;a href=\"&lt;%=context %&gt;/user/user!add\"&gt;添加用户&lt;/a&gt;</div><div class=\"line\">\t&lt;br /&gt;</div><div class=\"line\">前者会产生太多的action，所以不推荐使用</div><div class=\"line\">\t</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：第一个超链接是普通方法，对应struts.xml中第一个action，需要配置method属性。<br>第二个超链接是动态方法调用，struts.xml文件不需要改动，推荐使用。</p>\n</blockquote>\n<h2 id=\"2-struts-xml文件\"><a href=\"#2-struts-xml文件\" class=\"headerlink\" title=\"2 struts.xml文件\"></a>2 struts.xml文件</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE struts PUBLIC</span></div><div class=\"line\">    \"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN\"</div><div class=\"line\">    \"http://struts.apache.org/dtds/struts-2.0.dtd\"&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">struts</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">constant</span> <span class=\"attr\">name</span>=<span class=\"string\">\"struts.devMode\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">extends</span>=<span class=\"string\">\"struts-default\"</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"/user\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userAdd\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.bjsxt.struts2.user.action.UserAction\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"add\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">result</span>&gt;</span>/user_add_success.jsp<span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></div><div class=\"line\">        </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">name</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.bjsxt.struts2.user.action.UserAction\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">result</span>&gt;</span>/user_add_success.jsp<span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">package</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">struts</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"3-UserAction-java\"><a href=\"#3-UserAction-java\" class=\"headerlink\" title=\"3 UserAction.java\"></a>3 UserAction.java</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.bjsxt.struts2.user.action;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.opensymphony.xwork2.ActionSupport;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserAction</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActionSupport</span> </span>&#123;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">add</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> SUCCESS;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"开发准备\"><a href=\"#开发准备\" class=\"headerlink\" title=\"开发准备\"></a>开发准备</h1><p>jdk(<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a>)<br>myeclipse<br>tomcat(<a href=\"http://tomcat.apache.org/\">http://tomcat.apache.org/</a>)<br>struts2(<a href=\"http://struts.apache.org/download.cgi\">http://struts.apache.org/download.cgi</a>)<br>Struts2开发文档(<a href=\"http://struts.apache.org/docs/getting-started.html\">http://struts.apache.org/docs/getting-started.html</a>)<br>","more":"</p>\n<h1 id=\"第一个案例—Hello-World\"><a href=\"#第一个案例—Hello-World\" class=\"headerlink\" title=\"第一个案例—Hello World\"></a>第一个案例—<code>Hello World</code></h1><h2 id=\"1-新建web-project项目\"><a href=\"#1-新建web-project项目\" class=\"headerlink\" title=\"1.新建web project项目\"></a>1.新建<code>web project</code>项目</h2><p><code>File</code>-<code>new</code>-<code>web project</code>，输入项目名，如<code>sturts2_001</code>。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-b267435a9cf12d54.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"2-1 新建项目.png\"></p>\n<h2 id=\"2-配置项目\"><a href=\"#2-配置项目\" class=\"headerlink\" title=\"2.配置项目\"></a>2.配置项目</h2><h3 id=\"1-将开发库导入lib文件夹下\"><a href=\"#1-将开发库导入lib文件夹下\" class=\"headerlink\" title=\"1 将开发库导入lib文件夹下\"></a>1 将开发库导入lib文件夹下</h3><p><a href=\"http://download.csdn.net/detail/qq_30461621/9792881\">下载链接</a></p>\n<h3 id=\"2-在src包下新建struts-xml配置文件\"><a href=\"#2-在src包下新建struts-xml配置文件\" class=\"headerlink\" title=\"2 在src包下新建struts.xml配置文件\"></a>2 在src包下新建struts.xml配置文件</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE struts PUBLIC</div><div class=\"line\">    \"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN\"</div><div class=\"line\"> http://struts.apache.org/dtds/struts-2.0.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">struts</span>&gt;</span></div><div class=\"line\">\t<span class=\"comment\">&lt;!-- </div><div class=\"line\">    &lt;constant name=\"struts.enable.DynamicMethodInvocation\" value=\"false\" /&gt;</div><div class=\"line\">    &lt;constant name=\"struts.devMode\" value=\"false\" /&gt;</div><div class=\"line\">    &lt;include file=\"example.xml\"/&gt;</div><div class=\"line\">    &lt;package name=\"default\" namespace=\"/\" extends=\"struts-default\"&gt;</div><div class=\"line\">        &lt;default-action-ref name=\"index\" /&gt;</div><div class=\"line\">        &lt;action name=\"index\"&gt;</div><div class=\"line\">            &lt;result type=\"redirectAction\"&gt;</div><div class=\"line\">                &lt;param name=\"actionName\"&gt;HelloWorld&lt;/param&gt;</div><div class=\"line\">                &lt;param name=\"namespace\"&gt;/example&lt;/param&gt;</div><div class=\"line\">            &lt;/result&gt;</div><div class=\"line\">        &lt;/action&gt;</div><div class=\"line\">    &lt;/package&gt;</div><div class=\"line\">\t --&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!-- Add packages here --&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">struts</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"3-修改struts-xml\"><a href=\"#3-修改struts-xml\" class=\"headerlink\" title=\"3 修改struts.xml\"></a>3 修改struts.xml</h3><p>在 <!-- Add packages here --> 下面添加：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">constant</span> <span class=\"attr\">name</span>=<span class=\"string\">\"struts.devMode\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\">\t <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"default\"</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"/\"</span> <span class=\"attr\">extends</span>=<span class=\"string\">\"struts-default\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hello\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">result</span>&gt;</span></div><div class=\"line\">                /Hello.jsp</div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></div><div class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">package</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>说明：</p>\n<blockquote>\n<p>①<constant name=\"struts.devMode\" value=\"true\" />开发模式<br>②action name：访问的名称<br>③package：类似于java中的包，解决重名问题</p>\n</blockquote>\n</blockquote>\n<h3 id=\"4-修改web-xml文件为\"><a href=\"#4-修改web-xml文件为\" class=\"headerlink\" title=\"4 修改web.xml文件为\"></a>4 修改web.xml文件为</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">version</span>=<span class=\"string\">\"3.0\"</span></div><div class=\"line\">    <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee\"</span></div><div class=\"line\">    <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></div><div class=\"line\">    <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">welcome-file-list</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>Hello.jsp<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">welcome-file-list</span>&gt;</span></div><div class=\"line\">  </div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>struts2<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>struts2<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"5-访问\"><a href=\"#5-访问\" class=\"headerlink\" title=\"5 访问\"></a>5 访问</h3><p>新建Hello.jsp文件，然后部署项目，访问localhost:8080/struts2/hello即可访问到Hello.jsp页面</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-20743e7ee7ac95fa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图2-2 项目结构.png\"></p>\n<h2 id=\"3-原理\"><a href=\"#3-原理\" class=\"headerlink\" title=\"3.原理\"></a>3.原理</h2><p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-51612ff1a6c167b4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图3-1 struts2 核心原理.png\"></p>\n<h1 id=\"namespace\"><a href=\"#namespace\" class=\"headerlink\" title=\"namespace\"></a>namespace</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"default\"</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"/\"</span> <span class=\"attr\">extends</span>=<span class=\"string\">\"struts-default\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">default-action-ref</span> <span class=\"attr\">name</span>=<span class=\"string\">\"index\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">name</span>=<span class=\"string\">\"index\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">type</span>=<span class=\"string\">\"redirectAction\"</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"actionName\"</span>&gt;</span>HelloWorld<span class=\"tag\">&lt;/<span class=\"name\">param</span>&gt;</span></div><div class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"namespace\"</span>&gt;</span>/example<span class=\"tag\">&lt;/<span class=\"name\">param</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">package</span>&gt;</span></div><div class=\"line\">``` </div><div class=\"line\">&gt; namespace决定了action的访问路径，默认为\"\"，可以接收所有路径的action</div><div class=\"line\">&gt;namespace可以写为’/’，或者’/xxx’，或者’/xxx/yyy’，对应的action访问路径为’/index.action’‘/xxx/index.action’，或者’/xxx/yyy/index.action’。</div><div class=\"line\"> namespace最好也用模块来进行命名</div><div class=\"line\"></div><div class=\"line\"># action</div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">![图4-1 执行过程.png](http://upload-images.jianshu.io/upload_images/1837782-7d0878e26e9eaac3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</div><div class=\"line\"></div><div class=\"line\">action不一定是servlet，可以是一个普通类。</div><div class=\"line\"> </div><div class=\"line\"></div><div class=\"line\">![图4-2 程序结构.png](http://upload-images.jianshu.io/upload_images/1837782-ff3c91d4befd511c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</div><div class=\"line\"></div><div class=\"line\">`<span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">name</span>=<span class=\"string\">\"path\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.bjsxt.struts2.path.action.PathAction\"</span>&gt;</span>`</div><div class=\"line\">“class”是类的路径。当class属性没有配置时，默认访问ActionSupport类。</div><div class=\"line\">*action的三种实现方法*</div><div class=\"line\">###①普通类，手写execute方法。缺点：容易出错。</div><div class=\"line\">```java</div><div class=\"line\">public class IndexAction1 &#123;</div><div class=\"line\">\tpublic String execute() &#123;</div><div class=\"line\">\t\treturn \"success\";</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"②实现Action类，重载execute方法。\"><a href=\"#②实现Action类，重载execute方法。\" class=\"headerlink\" title=\"②实现Action类，重载execute方法。\"></a>②实现Action类，重载execute方法。</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IndexAction2</span> <span class=\"keyword\">implements</span> <span class=\"title\">Action</span> </span>&#123;</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">execute</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"success\"</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>###③继承已经实现好的类，有很多可以直接用方法。<em>推荐使用</em><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IndexAction3</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActionSupport</span> </span>&#123;</div><div class=\"line\">\t<span class=\"meta\">@Override</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">execute</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">\"success\"</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"path\"><a href=\"#path\" class=\"headerlink\" title=\"path\"></a>path</h1><p>struts2中的路径问题是根据action的路径而不是jsp路径来确定，所以尽量不要使用相对路径。<br>虽然可以用redirect方式解决，但redirect方式并非必要。<br>解决办法非常简单，统一使用绝对路径。（在jsp中用request.getContextRoot方式来拿到webapp的路径）<br>或者使用myeclipse经常用的，指定basePath。</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1837782-60ad236d422f246d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"图5-1 程序结构.png\"></p>\n<h2 id=\"1-path-jsp\"><a href=\"#1-path-jsp\" class=\"headerlink\" title=\"1. path.jsp\"></a>1. path.jsp</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"GB18030\" ?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%@</span> <span class=\"attr\">page</span> <span class=\"attr\">language</span>=<span class=\"string\">\"java\"</span> <span class=\"attr\">contentType</span>=<span class=\"string\">\"text/html; charset=GB18030\"</span></div><div class=\"line\">    <span class=\"attr\">pageEncoding</span>=<span class=\"string\">\"GB18030\"</span>%&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%@taglib</span> <span class=\"attr\">uri</span>=<span class=\"string\">\"/struts-tags\"</span> <span class=\"attr\">prefix</span>=<span class=\"string\">\"s\"</span> %&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span></div><div class=\"line\"><span class=\"attr\">String</span> <span class=\"attr\">path</span> = <span class=\"string\">request.getContextPath();</span></div><div class=\"line\"><span class=\"attr\">String</span> <span class=\"attr\">basePath</span> = <span class=\"string\">request.getScheme()+</span>\"<span class=\"attr\">:</span>//\"+<span class=\"attr\">request.getServerName</span>()+\"<span class=\"attr\">:</span>\"+<span class=\"attr\">request.getServerPort</span>()+<span class=\"attr\">path</span>+\"/\";</div><div class=\"line\">%&gt;</span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">base</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&lt;%=basePath%&gt;\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html; charset=GB18030\"</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Insert title here<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">struts2中的路径问题是根据action的路径而不是jsp路径来确定，所以尽量不要使用相对路径。<span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"index.jsp\"</span>&gt;</span>index.jsp<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">虽然可以用redirect方式解决，但redirect方式并非必要。</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">解决办法非常简单，统一使用绝对路径。（在jsp中用request.getContextRoot方式来拿到webapp的路径）</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></div><div class=\"line\">或者使用myeclipse经常用的，指定basePath</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>注：前面设置好了<base>标签，就可以使用绝对路径了。</p>\n</blockquote>\n<h2 id=\"2-index-jsp\"><a href=\"#2-index-jsp\" class=\"headerlink\" title=\"2 index.jsp\"></a>2 index.jsp</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"GB18030\" ?&gt;</div><div class=\"line\">&lt;%@ page language=\"java\" contentType=\"text/html; charset=GB18030\"</div><div class=\"line\">    pageEncoding=\"GB18030\"%&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;%--</div><div class=\"line\">String path = request.getContextPath();</div><div class=\"line\">String basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";</div><div class=\"line\">//在head中&lt;base href&gt;指定basePath</div><div class=\"line\">--%&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</div><div class=\"line\">&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=GB18030\" /&gt;</div><div class=\"line\">&lt;title&gt;Insert title here&lt;/title&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">\t&lt;a href=\"path/path\"&gt;路径问题说明&lt;/a&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<h1 id=\"ActionMethodDMI动态方法调用\"><a href=\"#ActionMethodDMI动态方法调用\" class=\"headerlink\" title=\"ActionMethodDMI动态方法调用.\"></a>ActionMethod<em>DMI</em>动态方法调用.</h1><p>Action执行的时候并不一定要执行execute方法，也可以访问其他方法。<br><em>访问方法有两种：</em><br>①在配置文件中配置Action的时候用method=“”来指定执行指定方法<br>②url地址中动态指定（动态方法调用DMI）（推荐）</p>\n<h1 id=\"1-index-jsp页面\"><a href=\"#1-index-jsp页面\" class=\"headerlink\" title=\"1 index.jsp页面\"></a>1 index.jsp页面</h1><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"GB18030\" ?&gt;</div><div class=\"line\">&lt;%@ page language=\"java\" contentType=\"text/html; charset=GB18030\"</div><div class=\"line\">    pageEncoding=\"GB18030\"%&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;% String context = request.getContextPath(); %&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;</div><div class=\"line\">&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=GB18030\" /&gt;</div><div class=\"line\">&lt;title&gt;Insert title here&lt;/title&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">Action执行的时候并不一定要执行execute方法&lt;br /&gt;</div><div class=\"line\">可以在配置文件中配置Action的时候用method=来指定执行哪个方法</div><div class=\"line\">也可以在url地址中动态指定（动态方法调用DMI）（推荐）&lt;br /&gt;</div><div class=\"line\">\t&lt;a href=\"&lt;%=context %&gt;/user/userAdd\"&gt;添加用户&lt;/a&gt;</div><div class=\"line\">\t&lt;br /&gt;</div><div class=\"line\">\t&lt;a href=\"&lt;%=context %&gt;/user/user!add\"&gt;添加用户&lt;/a&gt;</div><div class=\"line\">\t&lt;br /&gt;</div><div class=\"line\">前者会产生太多的action，所以不推荐使用</div><div class=\"line\">\t</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>说明：第一个超链接是普通方法，对应struts.xml中第一个action，需要配置method属性。<br>第二个超链接是动态方法调用，struts.xml文件不需要改动，推荐使用。</p>\n</blockquote>\n<h2 id=\"2-struts-xml文件\"><a href=\"#2-struts-xml文件\" class=\"headerlink\" title=\"2 struts.xml文件\"></a>2 struts.xml文件</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE struts PUBLIC</div><div class=\"line\">    \"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN\"</div><div class=\"line\">    \"http://struts.apache.org/dtds/struts-2.0.dtd\"&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">struts</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">constant</span> <span class=\"attr\">name</span>=<span class=\"string\">\"struts.devMode\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">extends</span>=<span class=\"string\">\"struts-default\"</span> <span class=\"attr\">namespace</span>=<span class=\"string\">\"/user\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">name</span>=<span class=\"string\">\"userAdd\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.bjsxt.struts2.user.action.UserAction\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"add\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">result</span>&gt;</span>/user_add_success.jsp<span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></div><div class=\"line\">        </div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">name</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.bjsxt.struts2.user.action.UserAction\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">result</span>&gt;</span>/user_add_success.jsp<span class=\"tag\">&lt;/<span class=\"name\">result</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">action</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">package</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">struts</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"3-UserAction-java\"><a href=\"#3-UserAction-java\" class=\"headerlink\" title=\"3 UserAction.java\"></a>3 UserAction.java</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.bjsxt.struts2.user.action;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.opensymphony.xwork2.ActionSupport;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserAction</span> <span class=\"keyword\">extends</span> <span class=\"title\">ActionSupport</span> </span>&#123;</div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">add</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> SUCCESS;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj1u7zpn1000199pvqxn8r72x","category_id":"cj1u7zpnx000599pv5kzl3a4d","_id":"cj1u7zpos000e99pvw98p38ny"},{"post_id":"cj1u7zpom000a99pvh0pz96sl","category_id":"cj1u7zpnx000599pv5kzl3a4d","_id":"cj1u7zppc000i99pvmh9vqs9g"},{"post_id":"cj1u7zpop000d99pvt9e90p5g","category_id":"cj1u7zpnx000599pv5kzl3a4d","_id":"cj1u7zppg000l99pvvr94ruuz"},{"post_id":"cj1u7zpni000399pv0zgc32wo","category_id":"cj1u7zpoo000b99pvztbu2wzt","_id":"cj1u7zppn000q99pvamftl9gi"},{"post_id":"cj1u7zpos000f99pv5lnodrfo","category_id":"cj1u7zpnx000599pv5kzl3a4d","_id":"cj1u7zppu000t99pvsdpva7qr"},{"post_id":"cj1u7zppe000j99pvtqx7u1ul","category_id":"cj1u7zpnx000599pv5kzl3a4d","_id":"cj1u7zpqo000w99pvwoz06391"},{"post_id":"cj1u7zpo1000799pvy1pe1yng","category_id":"cj1u7zppb000g99pvityowlzl","_id":"cj1u7zpqu000z99pvcsbv4ns8"},{"post_id":"cj1u7zpph000m99pvx8ysfk0w","category_id":"cj1u7zpoo000b99pvztbu2wzt","_id":"cj1u7zpqx001199pvnpm9mrv1"},{"post_id":"cj1u7zppo000r99pvzte99usb","category_id":"cj1u7zpoo000b99pvztbu2wzt","_id":"cj1u7zpr3001499pvpn1yfhd6"},{"post_id":"cj1u7zpod000999pv44sq84o7","category_id":"cj1u7zppb000g99pvityowlzl","_id":"cj1u7zpr6001799pv93uc44re"},{"post_id":"cj1u7zpqy001399pv386lfc3p","category_id":"cj1u7zppb000g99pvityowlzl","_id":"cj1u7zpr7001999pvcbkj400l"},{"post_id":"cj1u7zppv000u99pvzxst9jjc","category_id":"cj1u7zpqt000y99pve5chxdpt","_id":"cj1u7zpra001c99pvfmltrxde"},{"post_id":"cj1u7zpqr000x99pvgkx15ad3","category_id":"cj1u7zpqt000y99pve5chxdpt","_id":"cj1u7zprb001f99pvwu1hm61y"},{"post_id":"cj1u7zpqu001099pv6jbswynf","category_id":"cj1u7zpqt000y99pve5chxdpt","_id":"cj1u7zprl001j99pvvhttywo3"},{"post_id":"cj1u825vi0000a5pvdi6dhqnu","category_id":"cj1u825w30001a5pvz1gaiacb","_id":"cj1u825w40003a5pv83hs8fdp"}],"PostTag":[{"post_id":"cj1u7zpn1000199pvqxn8r72x","tag_id":"cj1u7zpo0000699pvb675c0cw","_id":"cj1u7zppg000k99pvpyxv5udc"},{"post_id":"cj1u7zpn1000199pvqxn8r72x","tag_id":"cj1u7zpoo000c99pvv48eilbv","_id":"cj1u7zppj000n99pv9h29rofn"},{"post_id":"cj1u7zpni000399pv0zgc32wo","tag_id":"cj1u7zppb000h99pvof70mog9","_id":"cj1u7zppt000s99pvuqztilwa"},{"post_id":"cj1u7zpqy001399pv386lfc3p","tag_id":"cj1u7zppb000h99pvof70mog9","_id":"cj1u7zpr6001699pvrhkcvpbr"},{"post_id":"cj1u7zpo1000799pvy1pe1yng","tag_id":"cj1u7zppb000h99pvof70mog9","_id":"cj1u7zpr8001a99pvhl9t2hnd"},{"post_id":"cj1u7zpo1000799pvy1pe1yng","tag_id":"cj1u7zpqn000v99pvbb32c2ay","_id":"cj1u7zpra001d99pvqn4cc5sx"},{"post_id":"cj1u7zpo1000799pvy1pe1yng","tag_id":"cj1u7zpqx001299pvxsw1fntu","_id":"cj1u7zprb001g99pvk09wfybs"},{"post_id":"cj1u7zpod000999pv44sq84o7","tag_id":"cj1u7zppb000h99pvof70mog9","_id":"cj1u7zprj001h99pv2jrtnrdk"},{"post_id":"cj1u7zpom000a99pvh0pz96sl","tag_id":"cj1u7zprb001e99pvpy9he9xb","_id":"cj1u7zprl001k99pv19dxnonx"},{"post_id":"cj1u7zpop000d99pvt9e90p5g","tag_id":"cj1u7zprb001e99pvpy9he9xb","_id":"cj1u7zprn001m99pv7ifmd50l"},{"post_id":"cj1u7zpos000f99pv5lnodrfo","tag_id":"cj1u7zprb001e99pvpy9he9xb","_id":"cj1u7zpro001o99pv80yj60ns"},{"post_id":"cj1u7zppe000j99pvtqx7u1ul","tag_id":"cj1u7zprb001e99pvpy9he9xb","_id":"cj1u7zprp001q99pvanyouh09"},{"post_id":"cj1u7zpph000m99pvx8ysfk0w","tag_id":"cj1u7zpro001p99pv8cirphvf","_id":"cj1u7zprw001s99pvnok0m8ac"},{"post_id":"cj1u7zppo000r99pvzte99usb","tag_id":"cj1u7zpro001p99pv8cirphvf","_id":"cj1u7zpry001u99pv944v87j8"},{"post_id":"cj1u7zppv000u99pvzxst9jjc","tag_id":"cj1u7zprw001t99pvknsstxsq","_id":"cj1u7zprz001w99pvmp0961qr"},{"post_id":"cj1u7zpqr000x99pvgkx15ad3","tag_id":"cj1u7zprw001t99pvknsstxsq","_id":"cj1u7zps0001y99pvfcm0vffo"},{"post_id":"cj1u7zpqu001099pv6jbswynf","tag_id":"cj1u7zprw001t99pvknsstxsq","_id":"cj1u7zps1001z99pvlohi8pok"},{"post_id":"cj1u825vi0000a5pvdi6dhqnu","tag_id":"cj1u7zpro001p99pv8cirphvf","_id":"cj1u825w40002a5pvvmai38j0"}],"Tag":[{"name":"note","_id":"cj1u7zpo0000699pvb675c0cw"},{"name":"Centos","_id":"cj1u7zpoo000c99pvv48eilbv"},{"name":"jsp","_id":"cj1u7zppb000h99pvof70mog9"},{"name":"mysql","_id":"cj1u7zpqn000v99pvbb32c2ay"},{"name":"code","_id":"cj1u7zpqx001299pvxsw1fntu"},{"name":"ubuntu","_id":"cj1u7zprb001e99pvpy9he9xb"},{"name":"java","_id":"cj1u7zpro001p99pv8cirphvf"},{"name":"hardware","_id":"cj1u7zprw001t99pvknsstxsq"}]}}